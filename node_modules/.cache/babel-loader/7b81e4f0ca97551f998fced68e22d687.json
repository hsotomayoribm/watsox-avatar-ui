{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { ROOT_CONTEXT } from './context';\n\nvar NoopContextManager =\n/** @class */\nfunction () {\n  function NoopContextManager() {}\n\n  NoopContextManager.prototype.active = function () {\n    return ROOT_CONTEXT;\n  };\n\n  NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n    var args = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n\n    return fn.call.apply(fn, __spreadArray([thisArg], args));\n  };\n\n  NoopContextManager.prototype.bind = function (_context, target) {\n    return target;\n  };\n\n  NoopContextManager.prototype.enable = function () {\n    return this;\n  };\n\n  NoopContextManager.prototype.disable = function () {\n    return this;\n  };\n\n  return NoopContextManager;\n}();\n\nexport { NoopContextManager }; //# sourceMappingURL=NoopContextManager.js.map","map":null,"metadata":{},"sourceType":"module"}