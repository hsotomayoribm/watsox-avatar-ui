{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nexport function toAttributes(attributes) {\n  return Object.keys(attributes).map(function (key) {\n    return toKeyValue(key, attributes[key]);\n  });\n}\nexport function toKeyValue(key, value) {\n  return {\n    key: key,\n    value: toAnyValue(value)\n  };\n}\nexport function toAnyValue(value) {\n  var t = typeof value;\n  if (t === 'string') return {\n    stringValue: value\n  };\n\n  if (t === 'number') {\n    if (!Number.isInteger(value)) return {\n      doubleValue: value\n    };\n    return {\n      intValue: value\n    };\n  }\n\n  if (t === 'boolean') return {\n    boolValue: value\n  };\n  if (value instanceof Uint8Array) return {\n    bytesValue: value\n  };\n  if (Array.isArray(value)) return {\n    arrayValue: {\n      values: value.map(toAnyValue)\n    }\n  };\n  if (t === 'object' && value != null) return {\n    kvlistValue: {\n      values: Object.entries(value).map(function (_a) {\n        var _b = __read(_a, 2),\n            k = _b[0],\n            v = _b[1];\n\n        return toKeyValue(k, v);\n      })\n    }\n  };\n  return {};\n}\nexport function hexToBuf(hex) {\n  var _a;\n\n  var ints = (_a = hex.match(/[\\da-f]{2}/gi)) === null || _a === void 0 ? void 0 : _a.map(function (h) {\n    return parseInt(h, 16);\n  });\n  return ints && new Uint8Array(ints);\n}\n\nfunction i2hex(i) {\n  return ('0' + i.toString(16)).slice(-2);\n}\n\nexport function bufToHex(buf) {\n  if (buf == null || buf.length === 0) return undefined;\n  return Array.from(buf).map(i2hex).join('');\n} //# sourceMappingURL=internal.js.map","map":null,"metadata":{},"sourceType":"module"}