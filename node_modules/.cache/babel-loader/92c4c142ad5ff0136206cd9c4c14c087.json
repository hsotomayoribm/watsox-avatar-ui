{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/components/BrowserIdSet.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setBrowserId } from '../store/sm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowserIdSet = _ref => {\n  _s();\n\n  let {\n    data,\n    dispatchSetBrowserId\n  } = _ref;\n  const {\n    id\n  } = data;\n  useEffect(() => {\n    console.log(`browser ID in BrowserIdSet.js: ${id}`);\n    dispatchSetBrowserId(id);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      visibility: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BrowserIdSet, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = BrowserIdSet;\nBrowserIdSet.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n    sessionId: PropTypes.string\n  }).isRequired,\n  dispatchSetBrowserId: PropTypes.func.isRequired,\n  browserId: PropTypes.string\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchTextFromData: e => dispatch(sendTextMessage({\n    text: e.target.dataset.triggerText\n  })),\n  dispatchSetBrowserId: browserId => dispatch(setBrowserId({\n    browserId: browserId\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(BrowserIdSet);\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowserIdSet\");","map":{"version":3,"names":["React","useEffect","connect","PropTypes","setBrowserId","BrowserIdSet","data","dispatchSetBrowserId","id","console","log","visibility","propTypes","shape","string","sessionId","isRequired","func","browserId","mapDispatchToProps","dispatch","dispatchTextFromData","e","sendTextMessage","text","target","dataset","triggerText"],"sources":["/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/components/BrowserIdSet.js"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setBrowserId } from '../store/sm';\n\nconst BrowserIdSet = ({ data, dispatchSetBrowserId }) => {\n  const { id } = data;\n\n  useEffect(() => {\n    console.log(`browser ID in BrowserIdSet.js: ${id}`);\n    dispatchSetBrowserId(id);\n  }, [id]);\n\n  return <div style={{ visibility: 'hidden' }}></div>;\n};\n\nBrowserIdSet.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n    sessionId: PropTypes.string,\n  }).isRequired,\n  dispatchSetBrowserId: PropTypes.func.isRequired,\n  browserId: PropTypes.string,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchTextFromData: (e) => dispatch(sendTextMessage({ text: e.target.dataset.triggerText })),\n  dispatchSetBrowserId: (browserId) => dispatch(setBrowserId({ browserId: browserId })),\n});\n\nexport default connect(null, mapDispatchToProps)(BrowserIdSet);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,aAA7B;;;AAEA,MAAMC,YAAY,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEC,IAAF;IAAQC;EAAR,CAAmC;EACvD,MAAM;IAAEC;EAAF,IAASF,IAAf;EAEAL,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAR,CAAa,kCAAiCF,EAAG,EAAjD;IACAD,oBAAoB,CAACC,EAAD,CAApB;EACD,CAHQ,EAGN,CAACA,EAAD,CAHM,CAAT;EAKA,oBAAO;IAAK,KAAK,EAAE;MAAEG,UAAU,EAAE;IAAd;EAAZ;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CATD;;GAAMN,Y;;KAAAA,Y;AAWNA,YAAY,CAACO,SAAb,GAAyB;EACvBN,IAAI,EAAEH,SAAS,CAACU,KAAV,CAAgB;IACpBL,EAAE,EAAEL,SAAS,CAACW,MADM;IAEpBC,SAAS,EAAEZ,SAAS,CAACW;EAFD,CAAhB,EAGHE,UAJoB;EAKvBT,oBAAoB,EAAEJ,SAAS,CAACc,IAAV,CAAeD,UALd;EAMvBE,SAAS,EAAEf,SAAS,CAACW;AANE,CAAzB;;AASA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;EACxCC,oBAAoB,EAAGC,CAAD,IAAOF,QAAQ,CAACG,eAAe,CAAC;IAAEC,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC;EAAzB,CAAD,CAAhB,CADG;EAExCpB,oBAAoB,EAAGW,SAAD,IAAeE,QAAQ,CAAChB,YAAY,CAAC;IAAEc,SAAS,EAAEA;EAAb,CAAD,CAAb;AAFL,CAAf,CAA3B;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCd,YAAlC,CAAf"},"metadata":{},"sourceType":"module"}