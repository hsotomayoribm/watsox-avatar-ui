{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl =\n/** @class */\nfunction () {\n  function BaggageImpl(entries) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  BaggageImpl.prototype.getEntry = function (key) {\n    var entry = this._entries.get(key);\n\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  };\n\n  BaggageImpl.prototype.getAllEntries = function () {\n    return Array.from(this._entries.entries()).map(function (_a) {\n      var k = _a[0],\n          v = _a[1];\n      return [k, v];\n    });\n  };\n\n  BaggageImpl.prototype.setEntry = function (key, entry) {\n    var newBaggage = new BaggageImpl(this._entries);\n\n    newBaggage._entries.set(key, entry);\n\n    return newBaggage;\n  };\n\n  BaggageImpl.prototype.removeEntry = function (key) {\n    var newBaggage = new BaggageImpl(this._entries);\n\n    newBaggage._entries.delete(key);\n\n    return newBaggage;\n  };\n\n  BaggageImpl.prototype.removeEntries = function () {\n    var keys = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      keys[_i] = arguments[_i];\n    }\n\n    var newBaggage = new BaggageImpl(this._entries);\n\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n      var key = keys_1[_a];\n\n      newBaggage._entries.delete(key);\n    }\n\n    return newBaggage;\n  };\n\n  BaggageImpl.prototype.clear = function () {\n    return new BaggageImpl();\n  };\n\n  return BaggageImpl;\n}();\n\nexport { BaggageImpl }; //# sourceMappingURL=baggage-impl.js.map","map":null,"metadata":{},"sourceType":"module"}