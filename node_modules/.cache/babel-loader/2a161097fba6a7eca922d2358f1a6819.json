{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { hashAttributes } from '../utils';\n\nvar HashMap =\n/** @class */\nfunction () {\n  function HashMap(_hash) {\n    this._hash = _hash;\n    this._valueMap = new Map();\n    this._keyMap = new Map();\n  }\n\n  HashMap.prototype.get = function (key, hashCode) {\n    hashCode !== null && hashCode !== void 0 ? hashCode : hashCode = this._hash(key);\n    return this._valueMap.get(hashCode);\n  };\n\n  HashMap.prototype.getOrDefault = function (key, defaultFactory) {\n    var hash = this._hash(key);\n\n    if (this._valueMap.has(hash)) {\n      return this._valueMap.get(hash);\n    }\n\n    var val = defaultFactory();\n\n    if (!this._keyMap.has(hash)) {\n      this._keyMap.set(hash, key);\n    }\n\n    this._valueMap.set(hash, val);\n\n    return val;\n  };\n\n  HashMap.prototype.set = function (key, value, hashCode) {\n    hashCode !== null && hashCode !== void 0 ? hashCode : hashCode = this._hash(key);\n\n    if (!this._keyMap.has(hashCode)) {\n      this._keyMap.set(hashCode, key);\n    }\n\n    this._valueMap.set(hashCode, value);\n  };\n\n  HashMap.prototype.has = function (key, hashCode) {\n    hashCode !== null && hashCode !== void 0 ? hashCode : hashCode = this._hash(key);\n    return this._valueMap.has(hashCode);\n  };\n\n  HashMap.prototype.keys = function () {\n    var keyIterator, next;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          keyIterator = this._keyMap.entries();\n          next = keyIterator.next();\n          _a.label = 1;\n\n        case 1:\n          if (!(next.done !== true)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , [next.value[1], next.value[0]]];\n\n        case 2:\n          _a.sent();\n\n          next = keyIterator.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  HashMap.prototype.entries = function () {\n    var valueIterator, next;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          valueIterator = this._valueMap.entries();\n          next = valueIterator.next();\n          _a.label = 1;\n\n        case 1:\n          if (!(next.done !== true)) return [3\n          /*break*/\n          , 3]; // next.value[0] here can not be undefined\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          return [4\n          /*yield*/\n          , [this._keyMap.get(next.value[0]), next.value[1], next.value[0]]];\n\n        case 2:\n          // next.value[0] here can not be undefined\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _a.sent();\n\n          next = valueIterator.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  Object.defineProperty(HashMap.prototype, \"size\", {\n    get: function () {\n      return this._valueMap.size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return HashMap;\n}();\n\nexport { HashMap };\n\nvar AttributeHashMap =\n/** @class */\nfunction (_super) {\n  __extends(AttributeHashMap, _super);\n\n  function AttributeHashMap() {\n    return _super.call(this, hashAttributes) || this;\n  }\n\n  return AttributeHashMap;\n}(HashMap);\n\nexport { AttributeHashMap }; //# sourceMappingURL=HashMap.js.map","map":null,"metadata":{},"sourceType":"module"}