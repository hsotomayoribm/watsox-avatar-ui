{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\n\nvar NonRecordingSpan =\n/** @class */\nfunction () {\n  function NonRecordingSpan(_spanContext) {\n    if (_spanContext === void 0) {\n      _spanContext = INVALID_SPAN_CONTEXT;\n    }\n\n    this._spanContext = _spanContext;\n  } // Returns a SpanContext.\n\n\n  NonRecordingSpan.prototype.spanContext = function () {\n    return this._spanContext;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n    return this;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n    return this;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n    return this;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.setStatus = function (_status) {\n    return this;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.updateName = function (_name) {\n    return this;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.end = function (_endTime) {}; // isRecording always returns false for NonRecordingSpan.\n\n\n  NonRecordingSpan.prototype.isRecording = function () {\n    return false;\n  }; // By default does nothing\n\n\n  NonRecordingSpan.prototype.recordException = function (_exception, _time) {};\n\n  return NonRecordingSpan;\n}();\n\nexport { NonRecordingSpan }; //# sourceMappingURL=NonRecordingSpan.js.map","map":null,"metadata":{},"sourceType":"module"}