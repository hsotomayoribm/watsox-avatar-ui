{"ast":null,"code":"/**\n * smwebsdk.js creates the global namespace variable _smwebsdk_ to access the API from.\n *\n * ```ts\n * window.smwebsdk\n * ```\n * @module smwebsdk\n * @preferred\n */\n\n/**\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\nimport { Features } from './Features';\nimport { Persona } from './Persona';\nimport { Scene } from './Scene';\nimport { UserMedia as SessionUserMedia } from './types/scene';\nexport var userMedia;\n\n(function (userMedia) {\n  userMedia[userMedia[\"none\"] = 0] = \"none\";\n  userMedia[userMedia[\"microphone\"] = 1] = \"microphone\";\n  userMedia[userMedia[\"microphoneAndCamera\"] = 2] = \"microphoneAndCamera\";\n  userMedia[userMedia[\"camera\"] = 3] = \"camera\";\n})(userMedia || (userMedia = {}));\n/**\n * SmWebSdk class for legacy compatibility\n * @deprecated - please use the other top level classes such as {@link Scene} or {@link Persona} instead\n */\n\n\nvar SmWebSdk =\n/** @class */\nfunction () {\n  function SmWebSdk() {\n    this.Scene = Scene;\n    this.Persona = Persona;\n    this.userMedia = {\n      none: SessionUserMedia.None,\n      microphone: SessionUserMedia.Microphone,\n      microphoneAndCamera: SessionUserMedia.MicrophoneAndCamera,\n      camera: SessionUserMedia.Camera\n    };\n\n    this.DetectCapabilities = function () {\n      return new Features().detectWebRTCFeatures();\n    }; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n    this.setLogging = function (value) {};\n  }\n\n  return SmWebSdk;\n}();\n\nexport { SmWebSdk };\n/**\n * @deprecated - please use the other top level classes such as {@link Scene} or {@link Persona} instead\n * @public\n */\n\nexport var smwebsdk = new SmWebSdk(); // This is here purely to coerce the documentation\n\n/**\n * Detect the browser capabilities\n */\n\nexport function DetectCapabilities() {\n  return new Features().detectWebRTCFeatures();\n} // This is here purely to coerce the documentation\n\n/**\n * Set logging for smbwebsdk to enabled or disabled, defaults to enabled\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\n\nexport function setLogging(value) {} //# sourceMappingURL=SmWebSdk.js.map","map":null,"metadata":{},"sourceType":"module"}