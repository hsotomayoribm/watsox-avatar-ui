{"ast":null,"code":"const CAMERA_FOV = 4.0;\nconst CameraPosition = {\n  CENTER: 0.5,\n  RIGHT: 0.6666666667,\n  LEFT: 0.3333333333\n};\n\nconst linearInterpolate = (min, max, percentage) => (1.0 - percentage) * min + percentage * max;\n/**\n * Calculate the camera orbit/pan for a given video size and horizontal offset\n *\n * @param {number} videoWidth element width\n * @param {number} videoHeight element height\n * @param {number} percentage horizontal offset, 0 is hard left and 1 is hard right\n */\n\n\nconst calculateCameraPosition = function (videoWidth, videoHeight, percentage) {\n  let tiltDeg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  const ratio = videoWidth / videoHeight;\n  const angleRange = ratio * CAMERA_FOV;\n  return {\n    tiltDeg,\n    orbitDegX: linearInterpolate(-20, 20, percentage),\n    orbitDegY: 0,\n    panDeg: linearInterpolate(-angleRange, angleRange, percentage)\n  };\n};\n\nexport { calculateCameraPosition, CameraPosition };","map":{"version":3,"names":["CAMERA_FOV","CameraPosition","CENTER","RIGHT","LEFT","linearInterpolate","min","max","percentage","calculateCameraPosition","videoWidth","videoHeight","tiltDeg","ratio","angleRange","orbitDegX","orbitDegY","panDeg"],"sources":["/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/utils/camera.js"],"sourcesContent":["const CAMERA_FOV = 4.0;\n\nconst CameraPosition = {\n  CENTER: 0.5,\n  RIGHT: 0.6666666667,\n  LEFT: 0.3333333333,\n};\n\nconst linearInterpolate = (min, max, percentage) => (1.0 - percentage) * min + percentage * max;\n\n/**\n * Calculate the camera orbit/pan for a given video size and horizontal offset\n *\n * @param {number} videoWidth element width\n * @param {number} videoHeight element height\n * @param {number} percentage horizontal offset, 0 is hard left and 1 is hard right\n */\nconst calculateCameraPosition = (videoWidth, videoHeight, percentage, tiltDeg = 0) => {\n  const ratio = videoWidth / videoHeight;\n  const angleRange = ratio * CAMERA_FOV;\n\n  return {\n    tiltDeg,\n    orbitDegX: linearInterpolate(-20, 20, percentage),\n    orbitDegY: 0,\n    panDeg: linearInterpolate(-angleRange, angleRange, percentage),\n  };\n};\n\nexport {\n  calculateCameraPosition,\n  CameraPosition,\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,GAAnB;AAEA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,GADa;EAErBC,KAAK,EAAE,YAFc;EAGrBC,IAAI,EAAE;AAHe,CAAvB;;AAMA,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,UAAX,KAA0B,CAAC,MAAMA,UAAP,IAAqBF,GAArB,GAA2BE,UAAU,GAAGD,GAA5F;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,uBAAuB,GAAG,UAACC,UAAD,EAAaC,WAAb,EAA0BH,UAA1B,EAAsD;EAAA,IAAhBI,OAAgB,uEAAN,CAAM;EACpF,MAAMC,KAAK,GAAGH,UAAU,GAAGC,WAA3B;EACA,MAAMG,UAAU,GAAGD,KAAK,GAAGb,UAA3B;EAEA,OAAO;IACLY,OADK;IAELG,SAAS,EAAEV,iBAAiB,CAAC,CAAC,EAAF,EAAM,EAAN,EAAUG,UAAV,CAFvB;IAGLQ,SAAS,EAAE,CAHN;IAILC,MAAM,EAAEZ,iBAAiB,CAAC,CAACS,UAAF,EAAcA,UAAd,EAA0BN,UAA1B;EAJpB,CAAP;AAMD,CAVD;;AAYA,SACEC,uBADF,EAEER,cAFF"},"metadata":{},"sourceType":"module"}