{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/components/ContentCards/Options/Options.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { HiChevronRight } from 'react-icons/hi';\nimport PropTypes from 'prop-types';\nimport { sendTextMessage, setBrowserId } from '../../../store/sm/index';\nimport styles from './Options.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Options = _ref => {\n  _s();\n\n  let {\n    data,\n    dispatchTextFromData,\n    dispatchSetBrowserId\n  } = _ref;\n  const {\n    options,\n    id\n  } = data;\n  useEffect(() => {\n    dispatchSetBrowserId(id);\n  }, [id]);\n  const optionsDisplay = options.map(_ref2 => {\n    let {\n      label,\n      value\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles['list-btn'],\n      \"data-trigger-text\": value,\n      onClick: dispatchTextFromData,\n      children: [label, /*#__PURE__*/_jsxDEV(HiChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, JSON.stringify({\n      label,\n      value\n    }), true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-sm-content\": \"options\",\n    children: optionsDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Options, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Options;\nOptions.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n    sessionId: PropTypes.string,\n    parameters: PropTypes.shape({\n      options: PropTypes.arrayOf(PropTypes.object),\n      title: PropTypes.string\n    })\n  }).isRequired,\n  dispatchTextFromData: PropTypes.func.isRequired,\n  dispatchSetBrowserId: PropTypes.func.isRequired,\n  browserId: PropTypes.string\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchTextFromData: e => dispatch(sendTextMessage({\n    text: e.target.dataset.triggerText\n  })),\n  dispatchSetBrowserId: browserId => dispatch(setBrowserId({\n    browserId: browserId\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Options);\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useEffect","connect","HiChevronRight","PropTypes","sendTextMessage","setBrowserId","styles","Options","data","dispatchTextFromData","dispatchSetBrowserId","options","id","optionsDisplay","map","label","value","JSON","stringify","propTypes","shape","string","sessionId","parameters","arrayOf","object","title","isRequired","func","browserId","mapDispatchToProps","dispatch","e","text","target","dataset","triggerText"],"sources":["/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/components/ContentCards/Options/Options.js"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { HiChevronRight } from 'react-icons/hi';\nimport PropTypes from 'prop-types';\nimport { sendTextMessage, setBrowserId } from '../../../store/sm/index';\nimport styles from './Options.module.scss';\n\nconst Options = ({ data, dispatchTextFromData, dispatchSetBrowserId }) => {\n  const { options, id } = data;\n\n  useEffect(() => {\n    dispatchSetBrowserId(id);\n  }, [id]);\n\n  const optionsDisplay = options.map(({ label, value }) => (\n    <button\n      type='button'\n      className={styles['list-btn']}\n      data-trigger-text={value}\n      onClick={dispatchTextFromData}\n      key={JSON.stringify({ label, value })}\n    >\n      {label}\n      <HiChevronRight />\n    </button>\n  ));\n  return (\n    <div data-sm-content='options'>\n      {optionsDisplay}\n    </div>\n  );\n};\n\nOptions.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n    sessionId: PropTypes.string,\n    parameters: PropTypes.shape({\n      options: PropTypes.arrayOf(PropTypes.object),\n      title: PropTypes.string,\n    }),\n  }).isRequired,\n  dispatchTextFromData: PropTypes.func.isRequired,\n  dispatchSetBrowserId: PropTypes.func.isRequired,\n  browserId: PropTypes.string,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchTextFromData: (e) => dispatch(sendTextMessage({ text: e.target.dataset.triggerText })),\n  dispatchSetBrowserId: (browserId) => dispatch(setBrowserId({ browserId: browserId })),\n});\n\nexport default connect(null, mapDispatchToProps)(Options);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,yBAA9C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,OAAO,GAAG,QAA0D;EAAA;;EAAA,IAAzD;IAAEC,IAAF;IAAQC,oBAAR;IAA8BC;EAA9B,CAAyD;EACxE,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAkBJ,IAAxB;EAEAR,SAAS,CAAC,MAAM;IACdU,oBAAoB,CAACE,EAAD,CAApB;EACD,CAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;EAIA,MAAMC,cAAc,GAAGF,OAAO,CAACG,GAAR,CAAY;IAAA,IAAC;MAAEC,KAAF;MAASC;IAAT,CAAD;IAAA,oBACjC;MACE,IAAI,EAAC,QADP;MAEE,SAAS,EAAEV,MAAM,CAAC,UAAD,CAFnB;MAGE,qBAAmBU,KAHrB;MAIE,OAAO,EAAEP,oBAJX;MAAA,WAOGM,KAPH,eAQE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QARF;IAAA,GAKOE,IAAI,CAACC,SAAL,CAAe;MAAEH,KAAF;MAASC;IAAT,CAAf,CALP;MAAA;MAAA;MAAA;IAAA,QADiC;EAAA,CAAZ,CAAvB;EAYA,oBACE;IAAK,mBAAgB,SAArB;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBD;;GAAMN,O;;KAAAA,O;AA0BNA,OAAO,CAACY,SAAR,GAAoB;EAClBX,IAAI,EAAEL,SAAS,CAACiB,KAAV,CAAgB;IACpBR,EAAE,EAAET,SAAS,CAACkB,MADM;IAEpBC,SAAS,EAAEnB,SAAS,CAACkB,MAFD;IAGpBE,UAAU,EAAEpB,SAAS,CAACiB,KAAV,CAAgB;MAC1BT,OAAO,EAAER,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,CADiB;MAE1BC,KAAK,EAAEvB,SAAS,CAACkB;IAFS,CAAhB;EAHQ,CAAhB,EAOHM,UARe;EASlBlB,oBAAoB,EAAEN,SAAS,CAACyB,IAAV,CAAeD,UATnB;EAUlBjB,oBAAoB,EAAEP,SAAS,CAACyB,IAAV,CAAeD,UAVnB;EAWlBE,SAAS,EAAE1B,SAAS,CAACkB;AAXH,CAApB;;AAcA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;EACxCtB,oBAAoB,EAAGuB,CAAD,IAAOD,QAAQ,CAAC3B,eAAe,CAAC;IAAE6B,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC;EAAzB,CAAD,CAAhB,CADG;EAExC1B,oBAAoB,EAAGmB,SAAD,IAAeE,QAAQ,CAAC1B,YAAY,CAAC;IAAEwB,SAAS,EAAEA;EAAb,CAAD,CAAb;AAFL,CAAf,CAA3B;;AAKA,eAAe5B,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCvB,OAAlC,CAAf"},"metadata":{},"sourceType":"module"}