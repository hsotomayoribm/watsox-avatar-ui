{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/components/ContentCardDisplay.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { setActiveCards, animateCamera } from '../store/sm/index';\nimport { calculateCameraPosition } from '../utils/camera';\nimport Transcript from './ContentCards/Transcript';\nimport ContentCardSwitch from './ContentCardSwitch';\nimport breakpoints from '../utils/breakpoints';\nimport styles from './ContentCardDisplay.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentCardDisplay = _ref => {\n  _s();\n\n  let {\n    activeCards,\n    dispatchAnimateCamera,\n    videoWidth,\n    videoHeight,\n    showTranscript,\n    className,\n    connected\n  } = _ref;\n  if (!activeCards) return null;\n  const CardDisplay = activeCards.map((c, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card__container,\n    children: /*#__PURE__*/_jsxDEV(ContentCardSwitch, {\n      card: c,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, JSON.stringify(c), false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n\n  const animateCameraToFitCards = () => {\n    if (connected) {\n      if ((activeCards.length > 0 || showTranscript === true) && videoWidth >= breakpoints.md) {\n        dispatchAnimateCamera(calculateCameraPosition(videoWidth, videoHeight, 0.7));\n      } else dispatchAnimateCamera(calculateCameraPosition(videoWidth, videoHeight, 0.5));\n    }\n  };\n\n  useEffect(() => {\n    animateCameraToFitCards();\n  }, [showTranscript, activeCards]);\n  useEffect(() => {\n    window.addEventListener('resize', animateCameraToFitCards);\n    return () => window.removeEventListener('resize', animateCameraToFitCards);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: showTranscript ? /*#__PURE__*/_jsxDEV(Transcript, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 55\n    }, this) : CardDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ContentCardDisplay, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = ContentCardDisplay;\nContentCardDisplay.propTypes = {\n  activeCards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dispatchAnimateCamera: PropTypes.func.isRequired,\n  videoWidth: PropTypes.number.isRequired,\n  videoHeight: PropTypes.number.isRequired,\n  showTranscript: PropTypes.bool.isRequired,\n  className: PropTypes.string.isRequired,\n  connected: PropTypes.bool.isRequired\n};\nconst StyledContentCardDisplay = styled(ContentCardDisplay)`\n  max-height: 27rem;\n  overflow: hidden;\n  margin-bottom: 0.9rem;\n\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  /* show translucent background if card showing on small device */\n  ${_ref2 => {\n  let {\n    activeCards,\n    showTranscript\n  } = _ref2;\n  return activeCards.length > 0 || showTranscript === true ? 'background: rgba(255, 255, 255, 0.3);' : '';\n}}\n\n  @media(min-width: ${breakpoints.md}px) {\n    max-height: 100%;\n    background: none;\n    outline: none;\n    margin-bottom: auto;\n  }\n  width: 100%;\n`;\n\nconst mapStateToProps = _ref3 => {\n  let {\n    sm\n  } = _ref3;\n  return {\n    activeCards: sm.activeCards,\n    videoWidth: sm.videoWidth,\n    videoHeight: sm.videoHeight,\n    showTranscript: sm.showTranscript,\n    connected: sm.connected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchActiveCards: activeCards => dispatch( // the next time the persona speaks, if the cards are stale, it will clear them.\n  // if this value isn't desired, don't set this value to true.\n  setActiveCards({\n    activeCards,\n    cardsAreStale: true\n  })),\n  dispatchAnimateCamera: function (options) {\n    let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return dispatch(animateCamera({\n      options,\n      duration\n    }));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledContentCardDisplay);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentCardDisplay\");","map":{"version":3,"names":["React","useEffect","connect","PropTypes","styled","setActiveCards","animateCamera","calculateCameraPosition","Transcript","ContentCardSwitch","breakpoints","styles","ContentCardDisplay","activeCards","dispatchAnimateCamera","videoWidth","videoHeight","showTranscript","className","connected","CardDisplay","map","c","index","card__container","JSON","stringify","animateCameraToFitCards","length","md","window","addEventListener","removeEventListener","propTypes","arrayOf","object","isRequired","func","number","bool","string","StyledContentCardDisplay","mapStateToProps","sm","mapDispatchToProps","dispatch","dispatchActiveCards","cardsAreStale","options","duration"],"sources":["/Users/sofiaweinzierl/Desktop/sm-neuralseek-ibm/react-ui/src/components/ContentCardDisplay.js"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { setActiveCards, animateCamera } from '../store/sm/index';\nimport { calculateCameraPosition } from '../utils/camera';\nimport Transcript from './ContentCards/Transcript';\nimport ContentCardSwitch from './ContentCardSwitch';\nimport breakpoints from '../utils/breakpoints';\nimport styles from './ContentCardDisplay.module.scss';\n\nconst ContentCardDisplay = ({\n  activeCards,\n  dispatchAnimateCamera,\n  videoWidth,\n  videoHeight,\n  showTranscript,\n  className,\n  connected,\n}) => {\n  if (!activeCards) return null;\n  const CardDisplay = activeCards.map((c, index) => (\n    <div className={styles.card__container} key={JSON.stringify(c)}>\n      <ContentCardSwitch card={c} index={index} />\n    </div>\n  ));\n\n  const animateCameraToFitCards = () => {\n    if (connected) {\n      if ((activeCards.length > 0 || showTranscript === true) && videoWidth >= breakpoints.md) {\n        dispatchAnimateCamera(calculateCameraPosition(videoWidth, videoHeight, 0.7));\n      } else dispatchAnimateCamera(calculateCameraPosition(videoWidth, videoHeight, 0.5));\n    }\n  };\n\n  useEffect(() => {\n    animateCameraToFitCards();\n  }, [showTranscript, activeCards]);\n\n  useEffect(() => {\n    window.addEventListener('resize', animateCameraToFitCards);\n    return () => window.removeEventListener('resize', animateCameraToFitCards);\n  });\n\n  return <div className={className}>{showTranscript ? <Transcript /> : CardDisplay}</div>;\n};\n\nContentCardDisplay.propTypes = {\n  activeCards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dispatchAnimateCamera: PropTypes.func.isRequired,\n  videoWidth: PropTypes.number.isRequired,\n  videoHeight: PropTypes.number.isRequired,\n  showTranscript: PropTypes.bool.isRequired,\n  className: PropTypes.string.isRequired,\n  connected: PropTypes.bool.isRequired,\n};\n\nconst StyledContentCardDisplay = styled(ContentCardDisplay)`\n  max-height: 27rem;\n  overflow: hidden;\n  margin-bottom: 0.9rem;\n\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  /* show translucent background if card showing on small device */\n  ${({ activeCards, showTranscript }) =>\n    activeCards.length > 0 || showTranscript === true\n      ? 'background: rgba(255, 255, 255, 0.3);'\n      : ''}\n\n  @media(min-width: ${breakpoints.md}px) {\n    max-height: 100%;\n    background: none;\n    outline: none;\n    margin-bottom: auto;\n  }\n  width: 100%;\n`;\n\nconst mapStateToProps = ({ sm }) => ({\n  activeCards: sm.activeCards,\n  videoWidth: sm.videoWidth,\n  videoHeight: sm.videoHeight,\n  showTranscript: sm.showTranscript,\n  connected: sm.connected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchActiveCards: (activeCards) =>\n    dispatch(\n      // the next time the persona speaks, if the cards are stale, it will clear them.\n      // if this value isn't desired, don't set this value to true.\n      setActiveCards({ activeCards, cardsAreStale: true }),\n    ),\n  dispatchAnimateCamera: (options, duration = 1) => dispatch(animateCamera({ options, duration })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledContentCardDisplay);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}