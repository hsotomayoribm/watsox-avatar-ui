{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ViewRegistry =\n/** @class */\nfunction () {\n  function ViewRegistry() {\n    this._registeredViews = [];\n  }\n\n  ViewRegistry.prototype.addView = function (view) {\n    this._registeredViews.push(view);\n  };\n\n  ViewRegistry.prototype.findViews = function (instrument, meter) {\n    var _this = this;\n\n    var views = this._registeredViews.filter(function (registeredView) {\n      return _this._matchInstrument(registeredView.instrumentSelector, instrument) && _this._matchMeter(registeredView.meterSelector, meter);\n    });\n\n    return views;\n  };\n\n  ViewRegistry.prototype._matchInstrument = function (selector, instrument) {\n    return (selector.getType() === undefined || instrument.type === selector.getType()) && selector.getNameFilter().match(instrument.name);\n  };\n\n  ViewRegistry.prototype._matchMeter = function (selector, meter) {\n    return selector.getNameFilter().match(meter.name) && (meter.version === undefined || selector.getVersionFilter().match(meter.version)) && (meter.schemaUrl === undefined || selector.getSchemaUrlFilter().match(meter.schemaUrl));\n  };\n\n  return ViewRegistry;\n}();\n\nexport { ViewRegistry }; //# sourceMappingURL=ViewRegistry.js.map","map":null,"metadata":{},"sourceType":"module"}