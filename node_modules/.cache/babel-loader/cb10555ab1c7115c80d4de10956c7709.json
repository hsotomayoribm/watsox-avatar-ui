{"ast":null,"code":"/**\n * @module smwebsdk\n */\nimport { ConnectionStateTypes } from './enums/ConnectionStateTypes';\nimport { SmEvent } from './SmEvent';\nvar TOTAL_CONNECTION_STEPS = Object.keys(ConnectionStateTypes).length;\n/**\n * Determines and stores Connection State.\n *\n * @public\n */\n\nvar ConnectionState =\n/** @class */\nfunction () {\n  function ConnectionState() {\n    this._connectionState = {\n      name: ConnectionStateTypes.Disconnected,\n      totalSteps: TOTAL_CONNECTION_STEPS,\n      currentStep: 0,\n      percentageLoaded: 0\n    };\n    this._onConnectionStateUpdated = new SmEvent();\n  }\n\n  ConnectionState.prototype.setConnectionState = function (connectionStateType) {\n    // Return if state has not changed\n    if (this._connectionState.name === connectionStateType) {\n      return;\n    }\n\n    var currentStep = Object.keys(ConnectionStateTypes).indexOf(connectionStateType);\n    var data = {\n      name: connectionStateType,\n      currentStep: currentStep,\n      totalSteps: TOTAL_CONNECTION_STEPS,\n      percentageLoaded: 100 / (TOTAL_CONNECTION_STEPS - 1) * currentStep\n    };\n    this._connectionState = data;\n\n    this._onConnectionStateUpdated.call(data);\n  };\n\n  ConnectionState.prototype.getConnectionState = function () {\n    return this._connectionState;\n  };\n\n  Object.defineProperty(ConnectionState.prototype, \"onConnectionStateUpdated\", {\n    get: function () {\n      return this._onConnectionStateUpdated;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ConnectionState.prototype.reset = function () {\n    this.setConnectionState(ConnectionStateTypes.Disconnected);\n  };\n\n  return ConnectionState;\n}();\n\nexport { ConnectionState }; //# sourceMappingURL=ConnectionState.js.map","map":null,"metadata":{},"sourceType":"module"}