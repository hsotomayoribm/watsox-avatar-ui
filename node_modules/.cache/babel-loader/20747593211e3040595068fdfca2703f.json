{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nvar logLevels = ['debug', 'log', 'warn', 'error'];\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger(minLogLevel, isEnabled) {\n    if (minLogLevel === void 0) {\n      minLogLevel = 'log';\n    }\n\n    if (isEnabled === void 0) {\n      isEnabled = true;\n    }\n\n    this.isEnabled = isEnabled;\n    this.availableLogLevels = [];\n    this._minLogLevel = 'log';\n    this.setMinLogLevel(minLogLevel);\n  }\n\n  Logger.prototype.log = function (type) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (this.isEnabled && this.availableLogLevels.includes(type)) {\n      console[type].apply(console, __spreadArray([], __read(args), false));\n    }\n  };\n\n  Logger.prototype.enableLogging = function (enable) {\n    this.isEnabled = enable;\n  };\n\n  Logger.prototype.getMinLogLevel = function () {\n    return this._minLogLevel;\n  };\n\n  Logger.prototype.setMinLogLevel = function (level) {\n    var index = logLevels.indexOf(level);\n    this._minLogLevel = level;\n    this.availableLogLevels = logLevels.slice(index);\n  };\n\n  return Logger;\n}();\n\nexport { Logger }; //# sourceMappingURL=Logger.js.map","map":null,"metadata":{},"sourceType":"module"}