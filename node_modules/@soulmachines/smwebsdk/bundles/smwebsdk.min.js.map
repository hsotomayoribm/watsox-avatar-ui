{"version":3,"file":"smwebsdk.min.js","mappings":"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","sources":["webpack://@soulmachines/smwebsdk/webpack/universalModuleDefinition","webpack://@soulmachines/smwebsdk/webpack/bootstrap","webpack://@soulmachines/smwebsdk/webpack/runtime/define property getters","webpack://@soulmachines/smwebsdk/webpack/runtime/global","webpack://@soulmachines/smwebsdk/webpack/runtime/hasOwnProperty shorthand","webpack://@soulmachines/smwebsdk/webpack/runtime/make namespace object","webpack://@soulmachines/smwebsdk/./src/SmEvent.ts","webpack://@soulmachines/smwebsdk/./src/Persona.ts","webpack://@soulmachines/smwebsdk/./node_modules/tslib/tslib.es6.js","webpack://@soulmachines/smwebsdk/./src/Deferred.ts","webpack://@soulmachines/smwebsdk/./src/Features.ts","webpack://@soulmachines/smwebsdk/./src/utils/Logger.ts","webpack://@soulmachines/smwebsdk/./src/utils/make-error.ts","webpack://@soulmachines/smwebsdk/./src/LocalSession.ts","webpack://@soulmachines/smwebsdk/./src/websocket-message/scene/response-body/SpeechMarker.ts","webpack://@soulmachines/smwebsdk/./src/websocket-message/scene/response-body/StateResponseBody.ts","webpack://@soulmachines/smwebsdk/./src/websocket-message/scene/SceneResponseError.ts","webpack://@soulmachines/smwebsdk/./src/types/scene.ts","webpack://@soulmachines/smwebsdk/./src/enums/ConnectionStateTypes.ts","webpack://@soulmachines/smwebsdk/./src/Session.ts","webpack://@soulmachines/smwebsdk/./src/websocket-message/enums/WebsocketCategory.ts","webpack://@soulmachines/smwebsdk/./src/websocket-message/enums/WebsocketKind.ts","webpack://@soulmachines/smwebsdk/./src/websocket-message/enums/SpeechState.ts","webpack://@soulmachines/smwebsdk/./src/WebSocketSession.ts","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/freeze.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/element.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/global.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/process.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/scheduler.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObservation.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","webpack://@soulmachines/smwebsdk/./node_modules/@juggle/resize-observer/lib/ResizeObserver.js","webpack://@soulmachines/smwebsdk/./src/utils/allImagesLoaded.ts","webpack://@soulmachines/smwebsdk/./src/utils/debounce.ts","webpack://@soulmachines/smwebsdk/./src/ContentAwareness.ts","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/version.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/internal/semver.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/diag/types.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/api/diag.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/baggage/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/context/context.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/api/context.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/status.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/api/trace.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/api/propagation.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api/build/esm/index.js","webpack://@soulmachines/smwebsdk/./src/utils/convertToUserMedia.ts","webpack://@soulmachines/smwebsdk/./src/utils/utils.ts","webpack://@soulmachines/smwebsdk/./src/enums/ConversationStateTypes.ts","webpack://@soulmachines/smwebsdk/./src/ConversationState.ts","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://@soulmachines/smwebsdk/./src/ContentCardFormatter.ts","webpack://@soulmachines/smwebsdk/./src/Conversation.ts","webpack://@soulmachines/smwebsdk/./src/MetadataSender.ts","webpack://@soulmachines/smwebsdk/./src/ConnectionState.ts","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/version.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/resources/build/esm/Resource.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/utils/merge.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/common/attributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/Sampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOffSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOnSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/ParentBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/TraceIdRatioBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/RandomIdGenerator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/version.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/version.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/build/esm/util.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/build/esm/OTLPExporterBase.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/build/esm/types.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/util.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/OTLPExporterBrowserBase.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/build/esm/trace/types.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/build/esm/common/internal.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/version.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/build/esm/trace/internal.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/otlp-transformer/build/esm/trace/index.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/NoopMeter.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/types/Metric.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/NoopMeterProvider.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/api/global-utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/AggregationTemporality.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricData.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/api/metrics.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/api-metrics/build/esm/index.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/types.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Drop.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/InstrumentDescriptor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Histogram.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/version.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/LastValue.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Sum.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/Aggregation.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/AggregationSelector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricReader.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/PeriodicExportingMetricReader.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/ConsoleMetricExporter.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/export/InMemoryMetricExporter.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/platform/browser/detect-resources.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/detectors/NoopDetector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/Resource.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/detectors/BrowserDetector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/detectors/ProcessDetector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/ViewRegistry.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/Instruments.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/Meter.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorage.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/HashMap.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/DeltaMetricProcessor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/TemporalMetricProcessor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/AsyncMetricStorage.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/RegistrationConflicts.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorageRegistry.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/MultiWritableMetricStorage.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/ObservableResult.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/ObservableRegistry.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/SyncMetricStorage.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/AttributesProcessor.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/MeterSharedState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/MeterProviderSharedState.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricCollector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/MeterProvider.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/Predicate.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/InstrumentSelector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/sdk-metrics/build/esm/view/MeterSelector.js","webpack://@soulmachines/smwebsdk/./node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/platform/browser/OTLPTraceExporter.js","webpack://@soulmachines/smwebsdk/./src/SmTelemetry.ts","webpack://@soulmachines/smwebsdk/./src/env-vars.ts","webpack://@soulmachines/smwebsdk/./src/Scene.ts","webpack://@soulmachines/smwebsdk/./src/SmWebSdk.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\n/**\n * An event which can have a set of listeners registered against it using addListener().\n * @public\n */\nexport class SmEvent {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _callbacks: Function[] = [];\n\n  /**\n   * Register a new listener for this event.\n   * @param callback - Function called each time the event is triggered.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public addListener(callback: Function): void {\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Deregister a existing listener for this event.\n   * @param callback - Previously registered function to be removed. It is a safe no-op to pass\n   * a callback which was never registered against this event.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public removeListener(callback: Function): void {\n    const callbackIndex = this._callbacks.indexOf(callback);\n    if (callbackIndex > -1) {\n      this._callbacks.splice(callbackIndex, 1);\n    }\n  }\n\n  /**\n   * Trigger the event, calling each registered listener, and passing on any parameters.\n   */\n  public call(...args: any[]) {\n    this._callbacks.forEach((callback) => {\n      callback.apply(callback, args);\n    }, this);\n  }\n}\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { Scene } from './Scene';\nimport { SmEvent } from './SmEvent';\nimport {\n  ConversationSetVariablesRequestBody,\n  StartSpeakingOptionalArgs,\n  StartSpeakingRequestBody,\n  PersonaRequestBody,\n  ConversationSendRequestBody,\n  AnimateToNamedCameraRequestBody,\n  PlayAnimationRequestBody,\n  StopBlProfilingRequestBody,\n  GetModelFilterSearchResultRequestBody,\n  GetModelChildrenRequestBody,\n  GetModelVariableFilterSearchResultRequestBody,\n  GetModelVariablesListRequestBody,\n  GetVariablesListRequestBody,\n  SetVariablesRequestBody,\n  GetVariablesRequestBody,\n} from './websocket-message/scene/index';\nimport { VariablesModel, AnimationModel } from './models/index';\nimport { PersonaId } from './models/PersonaId';\n\n/**\n * Persona class to control a scene persona\n * @public\n */\nexport class Persona {\n  protected _scene: Scene;\n  protected _personaId: PersonaId;\n\n  private _onConversationResultEvent: SmEvent;\n  private _onSpeechMarkerEvent: SmEvent;\n\n  /**\n   * @param scene - The scene the persona resides in\n   * @param personaId - The id of the persona as received in a state callback\n   */\n  constructor(scene: Scene, personaId: PersonaId) {\n    this._scene = scene;\n    this._personaId = personaId;\n\n    if (!this._scene.onConversationResultEvents[personaId]) {\n      this._scene.onConversationResultEvents[personaId] = new SmEvent();\n    }\n\n    // /** Event which will be triggered whenever conversation results are received. Use\n    //   *  onConversationResultEvents.addListener() to register a callback for this event.\n    //   *  The single parameter to the callback will be an object with the fields:\n    //   *    - **status**        - Status code\n    //   *    - **errorMessage**  - Optional error strubg\n    //   *    - **personaId**     - Numeric ID of Persona\n    //   *    - **output:**\n    //   *      - **text**        - Textual response from the converstation backend\n    //   *    - **context**       - Dictionary of public conversation variables\n    //   *    - **provider:**\n    //   *      - **kind**        - Conversation backend name, eg \"watson\"\n    //   *      - **meta**        - Conversation backend specific metadata\n    //   */\n    this._onConversationResultEvent =\n      this._scene.onConversationResultEvents[personaId];\n\n    if (!this._scene.onSpeechMarkerEvents[personaId]) {\n      this._scene.onSpeechMarkerEvents[personaId] = new SmEvent();\n    }\n\n    // /** Event which will be triggered whenever a speech marker is reached. Use\n    //   * onSpeechMarkerEvents.addListener() to register a callback for this event.\n    //   * A speech marker is triggered using the format @marker(markername, param0,... paramn)\n    //   * in speech. There are also other verbs which establish speech markers.\n    //   * Eg @showcards(cardA, cardB). When using a speech marker with Watson Assistant,\n    //   * the @ symbol must be escaped with a backslash, as follows:\n    //   * \\@marker(markername, param0,... paramn)\n    //   * The single parameter to the callback will be an object with the fields:\n    //   *    - **personaId**     - Numeric ID of Persona\n    //   *    - **name**          - Kind of speech marker, eg, \"showcards\", \"hidecards\"\n    //   *    - **arguements**    - Marker specific arguements.\n    //   */\n    this._onSpeechMarkerEvent = this._scene.onSpeechMarkerEvents[personaId];\n  }\n\n  /**\n   * Start speaking the given text\n   * @param text - The text to speak\n   * @param context - The context included in the transcript\n   * @param optionalArgs - Optional start speaking arguments or null\n   */\n  public startSpeaking(\n    text: string,\n    context: string | null = null,\n    optionalArgs: StartSpeakingOptionalArgs | null = null\n  ): Promise<any> {\n    const body: StartSpeakingRequestBody = {\n      personaId: this._personaId,\n      text,\n    };\n    if (context) {\n      body.context = context;\n    }\n    if (optionalArgs) {\n      body.optionalArgs = optionalArgs;\n    }\n    return this._scene.sendRequest('startSpeaking', body);\n  }\n\n  /**\n   * Stop speaking\n   */\n  public stopSpeaking(): Promise<any> {\n    const body: PersonaRequestBody = {\n      personaId: this._personaId,\n    };\n    return this._scene.sendRequest('stopSpeaking', body);\n  }\n\n  /**\n   * Send a chat message to conversation\n   * @param text - Text to send to conversation\n   * @param variables - Variables to send to the conversation provider\n   * @param optionalArgs - Optional arguments object (none currently supported)\n   */\n  public conversationSend(\n    text: string,\n    variables: VariablesModel,\n    optionalArgs: Record<string, unknown>\n  ): Promise<any> {\n    const body: ConversationSendRequestBody = {\n      personaId: this._personaId,\n      text,\n      variables,\n      optionalArgs,\n    };\n    return this._scene.sendRequest('conversationSend', body);\n  }\n\n  /**\n   * Set variables that will be applied on the next conversation request\n   * triggered by speech to text or a conversationSend()\n   * @param variables - Variables to send to the conversation provider\n   */\n  public conversationSetVariables(variables: VariablesModel): Promise<any> {\n    const body: ConversationSetVariablesRequestBody = {\n      personaId: this._personaId,\n      variables,\n    };\n    return this._scene.sendRequest('conversationSetVariables', body);\n  }\n\n  /**\n   * Get variables will return the current conversation variable values\n   * in the promise completion.\n   * Completion/promise receives an object with member 'variables'.\n   */\n  public conversationGetVariables(): Promise<any> {\n    const body: PersonaRequestBody = {\n      personaId: this._personaId,\n    };\n    return this._scene.sendRequest('conversationGetVariables', body);\n  }\n\n  /**\n   * Cut or animate to a named camera position, with support for camera adjustment.\n   * @param cameraName - Named camera position. The currently supported option is \"CloseUp\".\n   * @param time - Time in seconds for the animation to run. 0 indicates a cut.\n   * @param orbitDegX - Degrees of horizontal rotation around implicit orbit point of camera position (typically the middle of the Persona's head)\n   * @param orbitDegY - Degrees of vertical rotation around implicit orbit point of camera position (typically the middle of the Persona's head)\n   * @param panDeg - Degrees of camera pan. Orbital adjustment is applied before pan adjustment.\n   * @param tiltDeg - Degrees of camera tilt. Orbital adjustment is applied before tilt adjustment.\n   */\n  public animateToNamedCameraWithOrbitPan(\n    cameraName: string,\n    time: number,\n    orbitDegX: number,\n    orbitDegY: number,\n    panDeg: number,\n    tiltDeg: number\n  ): Promise<VariablesModel> {\n    const body: AnimateToNamedCameraRequestBody = {\n      personaId: this._personaId,\n      cameraName,\n      time,\n      orbitDegX,\n      orbitDegY,\n      panDeg,\n      tiltDeg,\n    };\n    return this._scene.sendRequest('animateToNamedCamera', body);\n  }\n\n  /**\n   * Play an animation.\n   * @internal\n   * @param animation - Structured animation data.\n   */\n  public playAnimation(animation: AnimationModel): Promise<VariablesModel> {\n    const body: PlayAnimationRequestBody = {\n      personaId: this._personaId,\n      animation,\n    };\n    return this._scene.sendRequest('playAnimation', body);\n  }\n\n  /**\n   * Get & Set bl variables.\n   * @internal\n   */\n  public getVariables(\n    names: string[],\n    errorTolerant = false,\n    format = ''\n  ): Promise<VariablesModel> {\n    const body: GetVariablesRequestBody = {\n      personaId: this._personaId,\n      names,\n      errorTolerant,\n      format,\n    };\n    return this._scene.sendRequest('getVariables', body);\n  }\n\n  /**\n   * @internal\n   */\n  public setVariables(variables: VariablesModel): Promise<any> {\n    const body: SetVariablesRequestBody = {\n      personaId: this._personaId,\n      Variables: variables,\n    };\n    return this._scene.sendRequest('setVariables', body);\n  }\n\n  /**\n   * @internal\n   */\n  public setVariablesOneway(variables: VariablesModel): void {\n    const body: SetVariablesRequestBody = {\n      personaId: this._personaId,\n      Variables: variables,\n    };\n    this._scene.sendOnewaySceneRequest('setVariables', body);\n  }\n\n  /**\n   * Get bl variables list.\n   * @internal\n   */\n  public getVariablesList(): Promise<any> {\n    const body: GetVariablesListRequestBody = {\n      personaId: this._personaId,\n    };\n    return this._scene.sendRequest('getVariablesList', body);\n  }\n\n  /**\n   * Get model bl variables list.\n   * @internal\n   */\n  public getModelVariablesList(modelName: string): Promise<any> {\n    const body: GetModelVariablesListRequestBody = {\n      personaId: this._personaId,\n      Models: modelName,\n    };\n    return this._scene.sendRequest('getModelVariablesList', body);\n  }\n\n  /**\n   * Get model children.\n   * @internal\n   */\n  public getModelChildren(modelName: string): Promise<any> {\n    const body: GetModelChildrenRequestBody = {\n      personaId: this._personaId,\n      Models: modelName,\n    };\n    return this._scene.sendRequest('getModelChildren', body);\n  }\n\n  /**\n   * Get model list by snippet.\n   * @internal\n   */\n  public getModelFilterSearchResult(modelName: string): Promise<any> {\n    const body: GetModelFilterSearchResultRequestBody = {\n      personaId: this._personaId,\n      Models: modelName,\n    };\n    return this._scene.sendRequest('getModelFilterSearchResult', body);\n  }\n\n  /**\n   * Get model variable list by snippet.\n   * @internal\n   */\n  public getModelVariableFilterSearchResult(\n    variableName: string\n  ): Promise<any> {\n    const body: GetModelVariableFilterSearchResultRequestBody = {\n      personaId: this._personaId,\n      Models: variableName,\n    };\n    return this._scene.sendRequest('getModelVariableFilterSearchResult', body);\n  }\n\n  /**\n   * Get connector entries.\n   * @internal\n   */\n  public getConnectorEntries(model: string): Promise<any> {\n    const body: any = {\n      personaId: this._personaId,\n      model,\n    };\n    return this._scene.sendRequest('getConnectorEntries', body);\n  }\n\n  /**\n   * Start BL profiling.\n   * @internal\n   */\n  public startBlProfiling(): Promise<any> {\n    const body: PersonaRequestBody = {\n      personaId: this._personaId,\n    };\n    return this._scene.sendRequest('startBlProfiling', body);\n  }\n\n  /**\n   * Stop BL profiling.\n   * @internal\n   */\n  public stopBlProfiling(reverse: boolean): Promise<any> {\n    const body: StopBlProfilingRequestBody = {\n      personaId: this._personaId,\n      reverse,\n    };\n    return this._scene.sendRequest('stopBlProfiling', body);\n  }\n\n  /**\n   * Get model hierarchy.\n   * @internal\n   */\n  public getModelHierarchy(model: string): Promise<any> {\n    const body: any = {\n      personaId: this._personaId,\n      model,\n    };\n    return this._scene.sendRequest('getModelHierarchy', body);\n  }\n\n  /**\n   * Monitor bl variables.\n   * @internal\n   */\n  public createMonitorSet(\n    setName: string,\n    variables: Record<string, unknown>\n  ): Promise<any> {\n    const body = {\n      personaId: this._personaId,\n      setName: [{ SetName: setName }],\n      variables,\n    };\n    return this._scene.sendRequest('createMonitorSet', body);\n  }\n\n  /**\n   * @internal\n   */\n  public removeMonitorSet(setName: string): Promise<any> {\n    const body = {\n      personaId: this._personaId,\n      setName: [{ SetName: setName }],\n    };\n    return this._scene.sendRequest('removeMonitorSet', body);\n  }\n\n  /**\n   * @internal\n   */\n  public addVariableToMonitorSet(\n    setName: string,\n    variables: Record<string, unknown>\n  ): Promise<any> {\n    const body = {\n      personaId: this._personaId,\n      setName: [{ SetName: setName }],\n      variables,\n    };\n    return this._scene.sendRequest('addVariableToMonitorSet', body);\n  }\n\n  /**\n   * @internal\n   */\n  public removeVariableFromMonitorSet(\n    setName: string,\n    variables: Record<string, unknown>\n  ): Promise<any> {\n    const body = {\n      personaId: this._personaId,\n      setName: [{ SetName: setName }],\n      variables,\n    };\n    return this._scene.sendRequest('removeVariableFromMonitorSet', body);\n  }\n\n  /**\n   * @internal\n   */\n  public renderModel(modelName: string): Promise<any> {\n    const body = {\n      personaId: this._personaId,\n      modelName,\n    };\n    return this._scene.sendRequest('renderModel', body);\n  }\n\n  get onConversationResultEvent(): SmEvent {\n    return this._onConversationResultEvent;\n  }\n\n  get onSpeechMarkerEvent(): SmEvent {\n    return this._onSpeechMarkerEvent;\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\n/**\n * Deferred class\n * @preferred\n */\nexport class Deferred<T> {\n  public promise: Promise<T>;\n\n  private fate: 'resolved' | 'unresolved';\n  private state: 'pending' | 'fulfilled' | 'rejected';\n\n  private _resolve!: (value: any) => void;\n  private _reject!: (value: any) => void;\n\n  constructor() {\n    this.state = 'pending';\n    this.fate = 'unresolved';\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.promise.then(\n      () => (this.state = 'fulfilled'),\n      () => (this.state = 'rejected')\n    );\n  }\n\n  resolve(value?: any) {\n    if (this.fate === 'resolved') {\n      console.error('Deferred cannot be resolved twice');\n      return;\n    }\n    this.fate = 'resolved';\n    this._resolve(value);\n  }\n\n  reject(reason?: any) {\n    if (this.fate === 'resolved') {\n      console.error('Deferred cannot be resolved twice');\n      return;\n    }\n    this.fate = 'resolved';\n    this._reject(reason);\n  }\n\n  isResolved() {\n    return this.fate === 'resolved';\n  }\n\n  isPending() {\n    return this.state === 'pending';\n  }\n\n  isFulfilled() {\n    return this.state === 'fulfilled';\n  }\n\n  isRejected() {\n    return this.state === 'rejected';\n  }\n}\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\n/**\n * Features class\n *\n * An instance of this class can also be created by the convenience API function DetectCapabilities()\n *\n * ```ts\n * var features  = window.smwebsdk.DetectCapabilities();\n * ```\n *\n * which also calls the detectWebRTCFeatures() method.\n */\nexport class Features {\n  private _hasMicrophone = false;\n  private _hasCamera = false;\n  private _isAndroid = false;\n  private _isBrowserSupported = false;\n  private _isEdge = false;\n  private _isIos = false;\n\n  constructor() {\n    this._isAndroid = this.detectAndroid();\n    this._isEdge = this.detectEdge();\n    this._isIos = this.detectIos();\n  }\n\n  private detectEdge(): boolean {\n    return this.userAgentMatches('Edge');\n  }\n\n  private detectAndroid(): boolean {\n    return this.userAgentMatches('Android');\n  }\n\n  private detectIos(): boolean {\n    const isIOS =\n      (/iPad|iPhone|iPod/i.test(navigator.platform) ||\n        (navigator &&\n          navigator.platform === 'MacIntel' &&\n          navigator.maxTouchPoints > 1)) &&\n      !window.MSStream;\n    return isIOS;\n  }\n\n  private userAgentMatches(text: string): boolean {\n    const userAgent = window.navigator.userAgent;\n    const matches: RegExpMatchArray | null = userAgent.match(text);\n    if (matches) {\n      return matches.length > 0 ? true : false;\n    }\n    return false;\n  }\n\n  public detectWebRTCFeatures(): Promise<Features> {\n    return new Promise(\n      (resolve: (value: any) => void, reject: (value: any) => void) => {\n        // Check for runtime host\n        if (window.SmIsUnderRuntimeHost) {\n          // TODO - detect whether camera/microphone is available in runtime host\n          this._isBrowserSupported = true;\n          this._hasMicrophone = true;\n          this._hasCamera = true;\n          resolve(this);\n        }\n\n        // This approach heavily influenced by the helpful and MIT licensed:\n        //    https://github.com/muaz-khan/DetectRTC/blob/master/DetectRTC.js\n\n        // Detect webrtc support\n        let isWebRTCSupported = false;\n        [\n          'RTCPeerConnection',\n          'webkitRTCPeerConnection',\n          'mozRTCPeerConnection',\n          'RTCIceGatherer',\n        ].forEach((item) => {\n          if (isWebRTCSupported) {\n            return;\n          }\n\n          if (item in window) {\n            isWebRTCSupported = true;\n          }\n        });\n\n        // Apparently IE11 injected iPhone into user agent string, hence check for not MSStream\n        const iOS =\n          navigator.userAgent.match(/iPhone|iPad|iPod/i) && !window.MSStream;\n        const isSafari = /^((?!chrome|android).)*safari/i.test(\n          navigator.userAgent\n        );\n        if (isWebRTCSupported && iOS && !isSafari) {\n          // Webrtc is not supported on an iOS device using webview instead of full Safari\n          isWebRTCSupported = false;\n        }\n\n        this._isBrowserSupported = isWebRTCSupported;\n\n        if (!this._isBrowserSupported) {\n          resolve(this);\n        }\n\n        // Find the enumerate devices function if available\n        let navEnumerateDevices = null;\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n          // Firefox 38+ seems having support of enumerateDevices\n          // Thanks @xdumaine/enumerateDevices\n          // eslint-disable-next-line @typescript-eslint/ban-types\n          navEnumerateDevices = (callback: Function) => {\n            Promise.resolve(navigator.mediaDevices.enumerateDevices())\n              .then((value: MediaDeviceInfo[] = []) => {\n                callback(value);\n              })\n              .catch(() => {\n                callback([]);\n              });\n          };\n        }\n\n        const { MediaStreamTrack } = window;\n        if (\n          !navEnumerateDevices &&\n          MediaStreamTrack &&\n          MediaStreamTrack.getSources\n        ) {\n          navEnumerateDevices =\n            MediaStreamTrack.getSources.bind(MediaStreamTrack);\n        }\n\n        if (!navEnumerateDevices && navigator.enumerateDevices) {\n          // ! block was originally unreachable until bug is fixed in trunk\n          navEnumerateDevices = navigator.enumerateDevices.bind(navigator);\n        }\n\n        // Enumerate the media devices\n        if (navEnumerateDevices) {\n          navEnumerateDevices((devices: MediaDeviceInfo[]) => {\n            devices.forEach((device: MediaDeviceInfo) => {\n              if (device.kind === 'audioinput') {\n                this._hasMicrophone = true;\n              }\n              if (device.kind === 'videoinput') {\n                this._hasCamera = true;\n              }\n            });\n\n            resolve(this);\n          });\n        } else {\n          resolve(this);\n        }\n      }\n    );\n  }\n\n  get hasMicrophone(): boolean {\n    return this._hasMicrophone;\n  }\n\n  get hasCamera(): boolean {\n    return this._hasCamera;\n  }\n\n  get isAndroid(): boolean {\n    return this._isAndroid;\n  }\n\n  get isBrowserSupported(): boolean {\n    return this._isBrowserSupported;\n  }\n\n  get isEdge(): boolean {\n    return this._isEdge;\n  }\n\n  get isIos(): boolean {\n    return this._isIos;\n  }\n}\n","const logLevels = ['debug', 'log', 'warn', 'error'] as const;\n\n/**\n * @public\n */\nexport type LogLevel = typeof logLevels[number];\n\nexport class Logger {\n  private availableLogLevels: LogLevel[] = [];\n  private _minLogLevel: LogLevel = 'log';\n\n  constructor(minLogLevel: LogLevel = 'log', public isEnabled = true) {\n    this.setMinLogLevel(minLogLevel);\n  }\n\n  log(type: LogLevel, ...args: any) {\n    if (this.isEnabled && this.availableLogLevels.includes(type)) {\n      console[type](...args);\n    }\n  }\n\n  enableLogging(enable: boolean) {\n    this.isEnabled = enable;\n  }\n\n  getMinLogLevel() {\n    return this._minLogLevel;\n  }\n\n  setMinLogLevel(level: LogLevel) {\n    const index = logLevels.indexOf(level);\n\n    this._minLogLevel = level;\n    this.availableLogLevels = logLevels.slice(index);\n  }\n}\n","export function makeError(message: string, reason: string): Error {\n  const error = new Error(message);\n  error.name = reason;\n  return error;\n}\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { Deferred } from './Deferred';\nimport { Features } from './Features';\nimport { Logger, LogLevel } from './utils/Logger';\nimport { makeError } from './utils/make-error';\nimport { WebsocketResponse } from './websocket-message/index';\n\nexport interface MessageFunction {\n  (message: string): void;\n}\n\nexport interface WebsocketFunction {\n  (message: WebsocketResponse): void;\n}\n\nexport interface SessionFunction {\n  (\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n  ): void;\n}\n\n/**\n *  LocalSession class\n */\nexport class LocalSession {\n  private _viewport_element: HTMLVideoElement | undefined;\n  private _isMicrophoneConnected = false;\n  private _isCameraConnected = false;\n\n  private _onConnectedStorage: SessionFunction = (\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ) => {};\n  private _onClose: MessageFunction;\n  private _onMessage: WebsocketFunction;\n  private _onUserText: MessageFunction;\n\n  private _closed = false;\n\n  private _sessionId: string | undefined;\n  private _outgoingQueue: any[] = [];\n\n  private _features: Features;\n\n  private _serverConnection!: WebSocket;\n\n  // Duration that microphone mute is maintained by the web sdk after the persona has\n  // finished speaking.  Set to -1 to disable.  Default value is -1 (disabled).\n  private _microphoneMuteDelay = -1;\n\n  private _offsetX = 0;\n  private _offsetY = 0;\n\n  constructor(\n    videoElement: HTMLVideoElement | undefined,\n    private logger = new Logger()\n  ) {\n    if (videoElement) {\n      this._viewport_element = videoElement;\n    }\n\n    window.SmRuntimeHostReceiveMessage = this.receiveMessage.bind(this);\n\n    if (typeof window.SmRuntimeHostStyleViewportElement === 'function') {\n      window.SmRuntimeHostStyleViewportElement(this._viewport_element);\n    }\n\n    // owner specifies custom close method\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onClose = (reason: string) => {};\n    // owner specifies custom message handler\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onMessage = (message: WebsocketResponse) => {};\n    // owner specifies custom rtc user text message handler\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onUserText = (text: string) => {};\n\n    this.sendVideoBounds(0, 0);\n\n    // The initial positioning can take a while. Would be nice to make this more deterministic.\n    setTimeout(() => {\n      this.sendVideoBounds(0, 0);\n    }, 3000);\n\n    this._features = new Features();\n\n    this.log('Local session created!');\n  }\n\n  public receiveMessage(raw_text: string) {\n    const message = JSON.parse(raw_text);\n    this.log(`message received: ${raw_text}`);\n    this._onMessage(message);\n    if (\n      message.name === 'state' &&\n      message.category === 'scene' &&\n      message.body?.session?.state === 'idle'\n    ) {\n      this.log('Local session ending - conversationEnded');\n      this.close(true, 'conversationEnded');\n    }\n  }\n\n  set onConnected(sessionFunction: SessionFunction) {\n    this._onConnectedStorage = sessionFunction;\n  }\n\n  set onClose(closeFunction: MessageFunction) {\n    this._onClose = closeFunction;\n  }\n\n  set onMessage(messageFunction: WebsocketFunction) {\n    this._onMessage = messageFunction;\n  }\n\n  set onUserText(userTextFunction: MessageFunction) {\n    this._onUserText = userTextFunction;\n  }\n\n  /**\n   * @deprecated use setLogging(boolean).\n   */\n  set loggingEnabled(enable: boolean) {\n    this.logger.log(\n      'warn',\n      'loggingEnabled is deprecated and will be removed in a future version. Please use setLogging(boolean)'\n    );\n    this.logger.enableLogging(enable);\n  }\n\n  get loggingEnabled(): boolean {\n    return this.logger.isEnabled;\n  }\n\n  public setMinLogLevel(level: LogLevel) {\n    this.logger.setMinLogLevel(level);\n  }\n\n  public setLogging(enable: boolean) {\n    this.logger.enableLogging(enable);\n  }\n\n  public log(text: string): void {\n    this.logger.log('log', text);\n  }\n\n  public sendVideoBounds(widthIgnored: number, heightIgnored: number) {\n    // We need to defer the update very slightly to give the browser time to reflow,\n    // otherwise we get out of date values for width, height etc:\n    setTimeout(() => {\n      // Brute-force method for getting pos and dimensions, as\n      // getBoundingClientRect seems to be unreliable (sometimes\n      // returning zeroes for left and right):\n      let el: HTMLVideoElement | undefined = this._viewport_element;\n      if (el) {\n        const view = document.defaultView || window;\n        const width = parseInt(<string>view.getComputedStyle(el).width, 10);\n        const height = parseInt(<string>view.getComputedStyle(el).height, 10);\n\n        this._offsetX = 0;\n        this._offsetY = 0;\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n          this._offsetX += el.offsetLeft - el.scrollLeft;\n          this._offsetY += el.offsetTop - el.scrollTop;\n          el = <HTMLVideoElement>el.offsetParent;\n        }\n\n        if (document.documentElement) {\n          const x_off = document.documentElement.scrollLeft;\n          const y_off = document.documentElement.scrollTop;\n\n          this._offsetX -= x_off;\n          this._offsetY -= y_off;\n        }\n\n        this.log(\n          `Updating bounds: x =  ${this._offsetX} , y = ${this._offsetY}', w = ${width}, h = ${height}`\n        );\n\n        // update bounds\n        const top = this._offsetY;\n        const left = this._offsetX;\n        const bottom = this._offsetY + height;\n        const right = this._offsetX + width;\n\n        const payload = {\n          name: 'videoBounds',\n          body: { top, left, bottom, right },\n          category: 'local',\n          kind: 'event',\n        };\n        this.sendMessage(payload);\n      }\n    }, 0);\n  }\n\n  private hideVideo() {\n    const top = 0;\n    const left = 0;\n    const bottom = 0;\n    const right = 0;\n\n    const payload = {\n      name: 'videoBounds',\n      body: { top, left, bottom, right },\n      category: 'local',\n      kind: 'event',\n    };\n    this.sendMessage(payload);\n  }\n\n  public sendRtcEvent(name: string, body: any) {\n    // NOOP: Stuff for compatibility with Session in Scene\n  }\n\n  public async connect(): Promise<string | undefined | any> {\n    const deferred = new Deferred<any>();\n\n    this.log('Local session connecting!');\n    this._closed = false;\n\n    const result = await this._features.detectWebRTCFeatures();\n    this._closed = false;\n    this._sessionId = undefined;\n    this._isMicrophoneConnected = result.hasMicrophone;\n    this._isCameraConnected = result.hasCamera;\n\n    if (typeof window.local_websocket_port === 'number') {\n      this._serverConnection = new WebSocket(\n        'ws://localhost:' + window.local_websocket_port\n      );\n      this.log('websocket open');\n\n      this._serverConnection.onmessage = (msg: MessageEvent) => {\n        this.gotMessageFromServer(msg);\n      };\n\n      this._serverConnection.onerror = (event) => {\n        if (deferred.isPending()) {\n          deferred.reject(\n            makeError('websocket failed', 'serverConnectionFailed')\n          );\n        }\n      };\n\n      this._serverConnection.onopen = (event: Event) => {\n        // disable SmRuntimeHostReceiveMessage\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        window.SmRuntimeHostReceiveMessage = () => {};\n        this.log('Local session connected!');\n\n        // send out messages in queue\n        for (let i = 0; i < this._outgoingQueue.length; i++) {\n          this._serverConnection.send(JSON.stringify(this._outgoingQueue[i]));\n          this.logger.log(\n            'log',\n            'SmLocalSession.prototype.sendMessage, forwarding message to Web Socket: ' +\n              this._outgoingQueue[i]\n          );\n        }\n        this._outgoingQueue = [];\n\n        if (deferred.isPending()) {\n          deferred.resolve();\n        }\n      };\n\n      this._serverConnection.onclose = (event: CloseEvent) => {\n        this.logger.log(\n          'log',\n          `websocket closed: code(${event.code}), reason(${event.reason}), clean(${event.wasClean})`\n        );\n        if (!deferred.isRejected) {\n          this.close(false, 'normal');\n        }\n      };\n    } else {\n      this.log('local_websocket_port not found! Failed to create WebSocket');\n\n      if (deferred.isPending()) {\n        deferred.reject(\n          makeError('websocket failed', 'local_websocket_port not found')\n        );\n      }\n    }\n\n    const payload = {\n      name: 'startSession',\n      body: {},\n      category: 'scene',\n      kind: 'request',\n    };\n    this.sendMessage(payload);\n    return deferred.promise;\n  }\n\n  private gotMessageFromServer(websocket_message: MessageEvent): void {\n    const raw_text = websocket_message.data;\n    const message = JSON.parse(raw_text);\n\n    const category = message.category;\n    const name = message.name;\n    const body = message.body;\n\n    if (category !== 'webrtc') {\n      // forward on non-webrtc messages (e.g. scene)\n      this._onMessage(message);\n    } else if (name === 'close') {\n      this.close(false, body.reason);\n    }\n\n    if (\n      name === 'state' &&\n      category === 'scene' &&\n      body.session !== null &&\n      body.session !== undefined &&\n      body.session.state === 'idle'\n    ) {\n      this.log('Local session ending due to server idle message');\n      this.close(true, 'conversationEnded');\n    }\n  }\n\n  public sendMessage(message: any): void {\n    const msg = JSON.stringify(message);\n    if (\n      this._serverConnection &&\n      this._serverConnection.readyState === WebSocket.OPEN\n    ) {\n      this._serverConnection.send(msg);\n      this.log(\n        `SmLocalSession.prototype.sendMessage, forwarding message to Web Socket: ${msg}`\n      );\n    } else {\n      this._outgoingQueue.push(message);\n    }\n  }\n\n  public sendUserText(text: string): void {\n    this.logger.log(\n      'log',\n      'SmLocalSession.prototype.sendUserText, discarding text: ' + text\n    );\n  }\n\n  public close(sendRtcClose = true, reason = 'normal'): void {\n    if (this._closed) {\n      return;\n    }\n\n    this._closed = true;\n    this._onClose(reason);\n    this._isMicrophoneConnected = false;\n    this._isCameraConnected = false;\n\n    this.hideVideo();\n\n    if (this._serverConnection) {\n      this.log('closing server connection');\n      const normalClosureCode = 1000;\n      this._serverConnection.close(normalClosureCode, reason);\n    }\n  }\n\n  get peerConnection(): RTCPeerConnection | null {\n    return null;\n  }\n\n  get userMediaStream(): MediaStream | null {\n    return null;\n  }\n\n  get serverConnection(): WebSocket {\n    return this._serverConnection;\n  }\n\n  get sessionId(): string | undefined {\n    return this._sessionId;\n  }\n\n  get isMicrophoneConnected(): boolean {\n    return this._isMicrophoneConnected;\n  }\n\n  get isCameraConnected(): boolean {\n    return this._isCameraConnected;\n  }\n\n  get features(): Features {\n    return this._features;\n  }\n\n  get microphoneMuteDelay(): number {\n    return this._microphoneMuteDelay;\n  }\n\n  set microphoneMuted(mute: boolean) {\n    // todo - RuntimeHost does not yet support this,\n    //        currently only needed in webrtc sessions and tests\n    if (typeof window.SmRuntimeHostMuteMicrophone === 'function') {\n      window.SmRuntimeHostMuteMicrophone(mute);\n    }\n  }\n\n  get microphoneMuted(): boolean {\n    // todo - RuntimeHost does not yet support this,\n    //        currently only needed in webrtc sessions and tests\n    if (typeof window.SmRuntimeHostIsMicrophoneMuted === 'function') {\n      return window.SmRuntimeHostIsMicrophoneMuted();\n    }\n\n    return false;\n  }\n\n  get offsetX(): number {\n    return this._offsetX;\n  }\n\n  get offsetY(): number {\n    return this._offsetY;\n  }\n\n  isMicrophoneActive(): boolean {\n    return this.isMicrophoneConnected && !this.microphoneMuted;\n  }\n\n  isCameraActive(): boolean {\n    return this.isCameraConnected;\n  }\n\n  async setMediaDeviceActive({\n    microphone,\n    camera,\n  }: {\n    microphone?: boolean;\n    camera?: boolean;\n  }): Promise<void> {\n    throw makeError(\n      'setMediaDeviceActive not supported on LocalSession',\n      'notSupported'\n    );\n  }\n}\n","import { PersonaId } from '../../../models/PersonaId';\n\nexport enum SpeechMarkerName {\n  Showcards = 'showcards',\n  Hidecards = 'hidecards',\n  Feature = 'feature',\n  Marker = 'marker',\n}\n\nexport interface SpeechMarker {\n  name:\n    | SpeechMarkerName.Showcards\n    | SpeechMarkerName.Hidecards\n    | SpeechMarkerName.Feature\n    | SpeechMarkerName.Marker;\n  arguments: string[];\n  personaId?: string;\n}\n\n/**\n * @public\n */\nexport interface SpeechMarkerResponseBody {\n  personaId: PersonaId;\n  name: string;\n  arguments: string[];\n}\n","import { ConfigurationModel } from '../../../models/index';\nimport { SpeechState } from '../../enums/SpeechState';\n\nexport enum FeatureFlag {\n  UI_CONTENT_AWARENESS = 'UI_CONTENT_AWARENESS',\n  UI_SDK_CAMERA_CONTROL = 'UI_SDK_CAMERA_CONTROL',\n}\n/**\n * @public\n */\nexport interface StateResponseBody {\n  scene?: {\n    featureFlags?: FeatureFlag[];\n    runtime?: string;\n    runtimeBuild?: string;\n    sceneId?: string;\n    sdkVersion?: string;\n    [key: string]: unknown;\n  };\n  configuration?: ConfigurationModel;\n  persona?: {\n    [index: string]: {\n      conversationProvider?: string;\n      lastPreset?: string;\n      users?: Record<string, unknown>[];\n      speechState?: SpeechState;\n      currentSpeech?: string;\n      currentSpeechEML?: string;\n      currentSpeechContext?: string;\n      [index: string]: any;\n    };\n  };\n  recognizing?: boolean;\n  session?: {\n    sessionId: string;\n    state: string;\n    userInfo?: string;\n  };\n}\n","/**\n * @public\n */\nexport class SceneResponseError extends Error {\n  requestName = '';\n  status = 0;\n  responseBody: any;\n\n  get message() {\n    return `Scene response failed, status: ${this.status}`;\n  }\n}\n","import { LogLevel } from '../utils/Logger';\nexport * from '../websocket-message/scene';\nexport * from '../models/Conversation';\n\n/**\n * Represents the different combinations of User Media that are supported\n * @public\n */\nexport enum UserMedia {\n  None,\n  Microphone,\n  MicrophoneAndCamera,\n  Camera,\n}\n\n/**\n * @public\n */\nexport enum NLPIntent {\n  PAGE_METADATA = 'PAGE_METADATA',\n}\n\n/**\n * @public\n */\nexport interface RetryOptions {\n  maxRetries?: number;\n  delayMs?: number;\n}\n\n/**\n * @public\n */\nexport type LoggingConfig = Record<\n  'session' | 'contentAwareness',\n  {\n    minLogLevel?: LogLevel;\n    enabled?: boolean;\n  }\n>;\n\n/**\n * @public\n */\nexport type MediaDeviceOptions = {\n  microphone?: boolean;\n  camera?: boolean;\n};\n","/**\n * @public\n */\nexport enum ConnectionStateTypes {\n  Disconnected = 'Disconnected',\n  //websocket open - searching for an available DP scene, may require queuing\n  SearchingForDigitalPerson = 'SearchingForDigitalPerson',\n  //established - scene is available/found, downloading/preparing DP assets on the server\n  DownloadingAssets = 'DownloadingAssets',\n  //accepted - DP is starting / forming webrtc connection\n  ConnectingToDigitalPerson = 'ConnectingToDigitalPerson',\n  //connected - DP is started and ready the webrtc session has connected\n  Connected = 'Connected',\n}\n\n/**\n * @public\n */\nexport interface ConnectionStateData {\n  name: ConnectionStateTypes;\n  currentStep: number;\n  totalSteps: number;\n  percentageLoaded: number;\n}\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { Deferred } from './Deferred';\nimport { Features } from './Features';\nimport { SmEvent } from './SmEvent';\nimport { Logger, LogLevel } from './utils/Logger';\nimport { WebsocketResponse } from './websocket-message/index';\nimport { UserMedia } from './types/scene';\nimport { makeError } from './utils/make-error';\nimport { ConnectionStateTypes } from './enums/ConnectionStateTypes';\nimport { ConnectionState } from './ConnectionState';\n\n// Reexporting here to keep backwards compatibility\nexport { UserMedia } from './types/scene';\n\nexport interface MessageFunction {\n  (message: string): void;\n}\n\nexport interface WebsocketFunction {\n  (message: WebsocketResponse): void;\n}\n\nexport interface SessionFunction {\n  (\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n  ): void;\n}\n\nexport interface ConnectionStateFunction {\n  (connectionState: ConnectionStateTypes): void;\n}\n\ninterface JwtResponse {\n  url: string;\n  jwt: string;\n}\n\ninterface ChangeUserMediaOp {\n  deferred: Deferred<any>;\n  microphone: boolean | undefined;\n  camera: boolean | undefined;\n}\n\ninterface RemoveListener {\n  target: any;\n  name: string;\n  callback: any;\n}\n\n/**\n *  Session class\n */\nexport class Session {\n  private _videoElement: HTMLVideoElement;\n  private _serverUri: string;\n  private _connectUserText: string;\n  private _accessToken: string;\n  private _peerConnection!: RTCPeerConnection;\n  private _localStream!: MediaStream | null;\n  private _remoteStream!: MediaStream | null;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _connectPendingRemoteStream: Function | null = null;\n  private _serverConnection!: WebSocket;\n  private _sessionId!: string;\n  private _resumeRequested = false;\n  private _isResumedSession = false;\n  private _outgoingQueue: any[] = [];\n\n  private _server!: string;\n  private _sceneId!: number;\n\n  private _controlUrl!: string;\n  private _controlConnection!: WebSocket;\n  private _controlOpen = false;\n  private _controlQueue: any[] = [];\n\n  private _audioOnly: boolean;\n  private _requestedUserMedia: UserMedia = UserMedia.None;\n  private _requiredUserMedia: UserMedia = UserMedia.None;\n\n  private _onConnected: SessionFunction = (\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ) => {};\n  private _onClose: MessageFunction;\n  private _onMessage: WebsocketFunction;\n  private _onUserText: MessageFunction;\n  private _sessionError: MessageFunction;\n\n  private _pendingLog: string[] = [];\n\n  private _closed = false;\n\n  private _shouldLogToServer = false;\n\n  private _features: Features;\n\n  private _connectionState: ConnectionState;\n\n  private _logger: Logger;\n\n  // Duration that microphone mute is maintained by the web sdk after the persona has\n  // finished speaking.  Set to -1 to disable.  Default value is -1 (disabled) if not specified\n  // by server in 'established' message.\n  private _microphoneMuteDelay = -1;\n\n  private _changeUserMediaQueue: Array<ChangeUserMediaOp> =\n    new Array<ChangeUserMediaOp>();\n\n  private _onMicrophoneActive?: SmEvent;\n  private _onCameraActive?: SmEvent;\n\n  private _removeListeners: Array<RemoveListener> = new Array<RemoveListener>();\n\n  private _videoOptions: MediaTrackConstraints = {\n    frameRate: 10.0,\n    width: 640.0,\n    height: 480.0,\n    facingMode: 'user',\n  };\n\n  // TypeScript support to MediaTrackConstraints is not complete, thus using any here\n  private _audioOptions: Record<string, any> = {\n    noiseSuppression: false,\n    autoGainControl: false,\n    channelCount: 1,\n    sampleRate: 16000,\n    sampleSize: 16,\n    echoCancellation: true,\n  };\n\n  constructor(\n    videoElement: HTMLVideoElement,\n    serverUri: string,\n    connectUserText: string | undefined,\n    accessToken: string,\n    audioOnly: boolean,\n    requestedUserMedia: UserMedia,\n    requiredUserMedia: UserMedia,\n    echoCancellationEnabled: boolean,\n    logger: Logger,\n    connectionState: ConnectionState\n  ) {\n    this._videoElement = videoElement;\n    this._serverUri = serverUri;\n    this._connectUserText = connectUserText || '';\n    this._accessToken = accessToken;\n    this._audioOnly = audioOnly;\n    this._audioOptions.echoCancellation = echoCancellationEnabled;\n    this._requiredUserMedia = requiredUserMedia;\n    this._requestedUserMedia = requestedUserMedia;\n    this._logger = logger;\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onClose = (reason: string) => {}; // owner specifies custom close method\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onMessage = (message: WebsocketResponse) => {}; // owner specifies custom message handler\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onUserText = (text: string) => {}; // owner specifies custom rtc user text message handler\n\n    this._sessionError = (error: string) => {\n      // owner can specify custom session error handler\n      this.log(`session error: ${error}`, 'error');\n    };\n\n    this._features = new Features();\n    this._connectionState = connectionState;\n  }\n\n  set onConnected(sessionFunction: SessionFunction) {\n    this._onConnected = sessionFunction;\n  }\n\n  set onClose(closeFunction: MessageFunction) {\n    this._onClose = closeFunction;\n  }\n\n  set onMessage(messageFunction: WebsocketFunction) {\n    this._onMessage = messageFunction;\n  }\n\n  set onUserText(userTextFunction: MessageFunction) {\n    this._onUserText = userTextFunction;\n  }\n\n  /**\n   * @deprecated use Scene\n   */\n  set loggingEnabled(enable: boolean) {\n    this.log(\n      'loggingEnabled is deprecated and will be removed in a future version. Please use setLogging(boolean)',\n      'warn'\n    );\n\n    this._logger.enableLogging(enable);\n  }\n\n  /**\n   * @deprecated use Scene method\n   */\n  get loggingEnabled(): boolean {\n    return this._logger.isEnabled;\n  }\n\n  /**\n   * @deprecated use Scene method\n   */\n  public setMinLogLevel(level: LogLevel) {\n    this._logger.setMinLogLevel(level);\n  }\n\n  /**\n   * @deprecated use Scene method\n   */\n  public setLogging(enable: boolean) {\n    this._logger.enableLogging(enable);\n  }\n\n  public log(text: string, level: LogLevel = 'debug') {\n    if (this._logger.isEnabled) {\n      const now = new Date();\n      const msg = `smsdk: ${now.toISOString()}: ${text}`;\n\n      if (this._shouldLogToServer) {\n        this.logToServer(msg);\n      }\n      this._logger.log(level, msg);\n    }\n  }\n\n  private logToServer(msg: string) {\n    if (this.sessionId) {\n      this.sendlogMessage([msg]);\n    } else {\n      this._pendingLog.push(msg);\n    }\n  }\n\n  public sendlogMessage(textArray: string[]): void {\n    if (this._sessionId && textArray && textArray.length > 0) {\n      const payload: any = {\n        category: 'diagnostics',\n        kind: 'event',\n        name: 'log',\n        body: { name: 'browser', text: textArray },\n      };\n      this.sendMessage(payload);\n    }\n  }\n\n  public async connect(userText?: string): Promise<string | undefined | any> {\n    const deferred = new Deferred<any>();\n\n    this._closed = false;\n    if (userText) {\n      this._connectUserText = userText;\n    }\n\n    if (\n      this._serverUri &&\n      (this._serverUri.startsWith('ws:') || this._serverUri.startsWith('wss:'))\n    ) {\n      // A server uri has been specified, continue with the connection\n      // by acquiring user media (microphone/camera) as needed\n      this.selectUserMedia(\n        this._requestedUserMedia,\n        this._requiredUserMedia,\n        deferred,\n        this.getUserMediaSuccess.bind(this)\n      );\n      return deferred.promise;\n    }\n\n    // Attempt to use the implicit /api/jwt REST get url to aquire\n    // an access token from the server this site was served from\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', '/api/jwt' + window.location.search);\n    xhr.onreadystatechange = async (ev: Event) => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          this.log(`JWT request returned: ${xhr.responseText}`);\n          const response = JSON.parse(xhr.responseText) as JwtResponse;\n          this._serverUri = response.url;\n          this._accessToken = response.jwt;\n\n          this.selectUserMedia(\n            this._requestedUserMedia,\n            this._requiredUserMedia,\n            deferred,\n            this.getUserMediaSuccess.bind(this)\n          );\n        } else {\n          this.log(`JWT Request failed, status: ${xhr.statusText}`, 'error');\n          deferred.reject(\n            makeError('Failed to acquire jwt at /api/jwt', 'noServer')\n          );\n        }\n      }\n    };\n\n    xhr.send();\n    return deferred.promise;\n  }\n\n  private webcamRequested(\n    requestedMedia: UserMedia,\n    requiredMedia: UserMedia\n  ): boolean {\n    return (\n      !this._audioOnly &&\n      [UserMedia.MicrophoneAndCamera, UserMedia.Camera].some((r) =>\n        [requestedMedia, requiredMedia].includes(r)\n      )\n    );\n  }\n\n  private micRequested(requestedMedia: UserMedia, requiredMedia: UserMedia) {\n    return [UserMedia.Microphone, UserMedia.MicrophoneAndCamera].some((r) =>\n      [requestedMedia, requiredMedia].includes(r)\n    );\n  }\n\n  public getMediaConstraints(\n    requestedMedia: UserMedia,\n    requiredMedia: UserMedia\n  ): MediaStreamConstraints {\n    // checking supported constraints only for debugging purpose, no need to use it when applying constraints\n    // as providing specific values for constraints, means they are a 'best effort' rather than required\n    // https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API/Constraints#requesting_a_specific_value_for_a_setting\n\n    const supports = navigator.mediaDevices.getSupportedConstraints() as any;\n    this.log(`Browser supports media constraints: ${supports}`);\n\n    return {\n      audio: this.micRequested(requestedMedia, requiredMedia)\n        ? this.buildAudioOptions()\n        : false,\n      video: this.webcamRequested(requestedMedia, requiredMedia)\n        ? this._videoOptions\n        : false,\n    };\n  }\n\n  private buildAudioOptions() {\n    const supportedConstraints: Record<string, any> =\n      navigator.mediaDevices.getSupportedConstraints();\n    const constraints = { ...this._audioOptions };\n\n    // Remove unknown and unsupported constraints, as these were causing errors in the latest version on Safari\n    Object.keys(constraints).forEach((constraint) => {\n      if (!supportedConstraints[constraint]) {\n        delete constraints[constraint];\n      }\n    });\n\n    return constraints;\n  }\n\n  selectUserMedia(\n    requestedMedia: UserMedia,\n    requiredMedia: UserMedia,\n    deferred: Deferred<any>,\n    completion: (stream: MediaStream | null, deferred: Deferred<any>) => any\n  ) {\n    if (requestedMedia === UserMedia.None && requiredMedia === UserMedia.None) {\n      // no microphone or camera is required or requested\n      completion(null, deferred);\n      return;\n    }\n\n    if (navigator.mediaDevices.getUserMedia) {\n      const constraints = this.getMediaConstraints(\n        requestedMedia,\n        requiredMedia\n      );\n      this.log(`Best video constraints: ${constraints}`);\n\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then((stream) => {\n          completion(stream, deferred);\n        })\n        .catch((error: DOMException) => {\n          //fail when required media wasn't obtained\n          if (requiredMedia === requestedMedia) {\n            this.log(\n              `getUserMedia could not get required media, error given: ${error}`,\n              'error'\n            );\n\n            deferred.reject(this.MakeErrorForUserMedia(error));\n          }\n          //re-try required media fallback\n          else if (requiredMedia !== UserMedia.None) {\n            this.getUserMediaRequiredOnlyFallback(\n              requiredMedia,\n              deferred,\n              completion\n            );\n          }\n          //re-try mic only fallback\n          else if (requestedMedia === UserMedia.MicrophoneAndCamera) {\n            this.getUserMediaAudioOnlyFallback(deferred, completion);\n          }\n          //complete without a stream\n          else {\n            completion(null, deferred);\n          }\n        });\n    } else {\n      deferred.reject(\n        makeError(\n          'Your browser does not support getUserMedia API',\n          'notSupported'\n        )\n      );\n    }\n  }\n\n  private getUserMediaRequiredOnlyFallback(\n    requiredMedia: UserMedia,\n    deferred: Deferred<any>,\n    completion: (stream: MediaStream | null, deferred: Deferred<any>) => any\n  ) {\n    this.log('Retrying with required media only');\n    const constraints = this.getMediaConstraints(UserMedia.None, requiredMedia);\n    this.log(`Attempt constraints: ${constraints}`);\n    return navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        completion(stream, deferred);\n      })\n      .catch((error: DOMException) => {\n        this.log(\n          `getUserMedia could not get required media, error given: ${error}`,\n          'error'\n        );\n        //fail when required media wasn't obtained\n        deferred.reject(this.MakeErrorForUserMedia(error));\n      });\n  }\n\n  private getUserMediaAudioOnlyFallback(\n    deferred: Deferred<any>,\n    completion: (stream: MediaStream | null, deferred: Deferred<any>) => any\n  ) {\n    this.log('Retrying with microphone only');\n    const constraints = {\n      video: false,\n      audio: this.buildAudioOptions(),\n    };\n    this.log(`Attempt constraints: ${constraints}`);\n    return navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        completion(stream, deferred);\n      })\n      .catch((error: DOMException) => {\n        this.log(\n          `getUserMedia could not get microphone audio, error given: ${error}`,\n          'error'\n        );\n\n        // still succeed as fallback is only tried if media was required, not requested\n        completion(null, deferred);\n      });\n  }\n\n  private MakeErrorForUserMedia(error: DOMException): Error {\n    const name = 'noUserMedia';\n    // Returning more specific errors below is considered a breaking change which we\n    // cannot accommodate currently. This will be reinstated in the future, likely for v15\n    // At that time, the error codes in Scene.connect() and scene.setMediaDeviceActive() need re-documenting -\n    // see https://github.com/soulmachines/smwebsdk/blob/dfe3e1dc8d57aac17cb0be38fa2527190cd78ef4/src/Scene.ts#L916-L918\n\n    // if (error.name === 'NotAllowedError' || error.name === 'SecurityError') {\n    //   name = 'userMediaNotAllowed';\n    // } else if (\n    //   error.name === 'AbortError' ||\n    //   error.name === 'NotReadableError'\n    // ) {\n    //   name = 'userMediaFailed';\n    // }\n    return makeError(error.message, name);\n  }\n\n  private getUserMediaSuccess(\n    stream: MediaStream | null,\n    deferred: Deferred<any>\n  ): void {\n    this.log('Got user media');\n\n    this._localStream = stream;\n    this.microphoneMuted = true; // mute the local microphone until the DP is visible\n\n    // Connect to the session server\n\n    // To pass the Json Web Token (jwt) to the server when opening the websocket\n    // we basically have three options with the available javascript api:\n    // 1) pass as a 'access_token' query parameter similar to auth2 bearer tokens when not auth header\n    // 2) pass as basic auth user/pass embedded in the url\n    // 3) pass as a custom protocol which is translated into the 'Sec-WebSocket-Protocol' request header\n    //    more info here: https://stackoverflow.com/questions/4361173/http-headers-in-websockets-client-api\n    // We've gone with using a query parameter with ssl.\n\n    // create and connect the websocket\n    // Note that javscript websockets do not allow most request headers to be set.  The two exceptions\n    // are the Authorization header (via basic auth) and the protocol header - neither of which\n    // are ideal for our jwt token.  Hence instead we pass the jwt as a query parameter.\n    this.log(`connecting to: ${this._serverUri}`);\n    if (!this._accessToken) {\n      this._serverConnection = new WebSocket(this._serverUri);\n    } else {\n      this._serverConnection = new WebSocket(\n        this._serverUri + '?access_token=' + this._accessToken\n      );\n    }\n\n    this._serverConnection.onmessage = (msg: MessageEvent) => {\n      try {\n        this.gotMessageFromServer(msg, deferred);\n      } catch (e) {\n        this.log(\n          `unexpected exception processing received message: ${e}`,\n          'error'\n        );\n      }\n    };\n\n    this._serverConnection.onerror = (event) => {\n      if (deferred.isPending()) {\n        deferred.reject(\n          makeError('websocket failed', 'serverConnectionFailed')\n        );\n      }\n    };\n\n    // wait for the websocket to open, then continue with setup\n    this._serverConnection.onopen = (event: Event) => {\n      this.log('Websocket open');\n      // wait for the welcome 'established' message to receive the ice servers, hence nothing more to do here\n      // websocket open - searching for an available DP scene, may require queuing\n      this._connectionState.setConnectionState(\n        ConnectionStateTypes.SearchingForDigitalPerson\n      );\n    };\n\n    // setup a close handler\n    this._serverConnection.onclose = (event: CloseEvent) => {\n      this.log(\n        `websocket closed: code(${event.code}), reason(${event.reason}), clean(${event.wasClean})`\n      );\n      if (!deferred.isRejected) {\n        this.close(false, 'normal', deferred);\n      }\n    };\n  }\n\n  private hasTurnServer(iceServers: RTCIceServer[]): boolean {\n    // Check for at least one turn server by url in the array of ice servers\n    if (!iceServers) {\n      return false;\n    }\n\n    for (const server of iceServers) {\n      if (!server || !server.urls) {\n        continue;\n      }\n\n      for (const url of server.urls) {\n        if (url.indexOf('turn:') === 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private gotMessageFromServer(\n    websocket_message: MessageEvent,\n    deferred?: Deferred<any>\n  ): void {\n    const raw_text = websocket_message.data;\n    this.log(`message received: ${raw_text}`);\n    const message = JSON.parse(raw_text);\n\n    const category = message.category;\n    const name = message.name;\n    const body = message.body;\n\n    if (category !== 'webrtc') {\n      // If there is a control connection then forward 'scene' messages to that\n      if (this._controlConnection !== null && category === 'scene') {\n        if (\n          this._controlOpen &&\n          this._serverConnection.readyState === WebSocket.OPEN\n        ) {\n          this._controlConnection.send(raw_text);\n        } else {\n          this._controlQueue.push(raw_text);\n        }\n      }\n\n      // forward on non-webrtc messages (e.g. scene)\n      this._onMessage(message);\n      return;\n    }\n\n    if (message.kind !== 'event') {\n      // currently ignore requests and responses\n      return;\n    }\n\n    if (name === 'established') {\n      // established - scene is available/found, downloading/preparing DP assets on the server\n      this._connectionState.setConnectionState(\n        ConnectionStateTypes.DownloadingAssets\n      );\n\n      // Create the peer connection configuration from the established body\n      // which includes the ice servers we should use\n      const config: RTCConfiguration = { iceServers: [] };\n      if (body.iceServers) {\n        config.iceServers = body.iceServers;\n\n        // If at least one ice server is a turn server then force\n        // our traffic to route over turn (relay)\n        if (this.hasTurnServer(body.iceServers)) {\n          this.log('Detected turn server, forcing relay mode');\n          config.iceTransportPolicy = 'relay';\n        }\n      }\n      this.log(`selected ice servers: ${config.iceServers}`);\n\n      if (\n        body.settings &&\n        typeof body.settings.microphoneMuteDelay === 'number'\n      ) {\n        this._microphoneMuteDelay = body.settings.microphoneMuteDelay;\n      }\n      this.log(\n        `microphone mute delay after persona speech: ${this._microphoneMuteDelay}`\n      );\n\n      // Send logging to server if requested by the server\n      this._shouldLogToServer = body.settings?.logToServer ?? false;\n\n      // Setup the WebRTC peer connection\n      this._peerConnection = new RTCPeerConnection(config);\n      // ref: Ice candidate will only trigger when media video is enabled in Safari\n      // https://stackoverflow.com/a/53914556\n      this._peerConnection.onicecandidate = this.gotIceCandidate.bind(this);\n      if ('ontrack' in this._peerConnection && !this._features.isEdge) {\n        // todo update when angular 7\n        // This doesnt work with angular yet because of old definitions\n        // this._peerConnection.ontrack = (event:RTCTrackEvent)=>{\n        (this._peerConnection as any).ontrack = (event: any) => {\n          if (event.track.kind === 'video' || event.track.kind === 'audio') {\n            if (\n              !this._remoteStream ||\n              (!this._audioOnly && event.track.kind === 'video')\n            ) {\n              this.onRemoteStream(event.streams[0]);\n            }\n          }\n        };\n\n        // Attach a video loaded event so the server can be notified when the video is\n        // ready to start playing\n        this._videoElement.addEventListener(\n          'loadeddata',\n          this.onVideoLoaded.bind(this)\n        );\n        this._removeListeners.push({\n          target: this._videoElement,\n          name: 'loadeddata',\n          callback: this.onVideoLoaded,\n        });\n      } else {\n        // fallback to stream (for IE/Safari plugin)\n        // onaddstream is deprecated\n        // This feature has been removed from the Web standards.\n        // Though some browsers may still support it, it is in the process of being dropped.\n        // Writing like this to pass type checking as this isnt in current spec and therefore\n        // neither the type definitions\n        (this._peerConnection as any).onaddstream = (\n          // as any because MediaStreamEvent has been removed from lib.dom.d.ts\n          streamEvent: any\n        ) => {\n          this.onRemoteStream(streamEvent.stream);\n        };\n      }\n      this._peerConnection.oniceconnectionstatechange = (e) => {\n        // `this._peerConnection.iceConnectionState === 'disconnected'` is quite handy\n        this.log(\n          `ICE connection state: ${this._peerConnection.iceConnectionState}`\n        );\n        if (this._peerConnection.iceConnectionState === 'failed') {\n          makeError('ice connection failed', 'mediaStreamFailed');\n          if (deferred && deferred.isPending()) {\n            // Close the connection and reject the connect()\n            this._serverConnection.close();\n            if (\n              this._controlConnection &&\n              (this._controlConnection.readyState === WebSocket.OPEN ||\n                this._controlConnection.readyState === WebSocket.CONNECTING)\n            ) {\n              this._controlConnection.close();\n            }\n            deferred.reject(\n              makeError('ice connection failed', 'mediaStreamFailed')\n            );\n          }\n        }\n      };\n      this.log('adding local media stream if any');\n      if (this._localStream) {\n        if (!(this._peerConnection as any).addTrack) {\n          (this._peerConnection as any).addStream(this._localStream);\n          this.log('adding local media stream by stream');\n        } else {\n          try {\n            this.log('adding local media stream by track');\n            this._localStream.getTracks().forEach((track) => {\n              (this._peerConnection as any).addTrack(\n                track,\n                this._localStream as MediaStream\n              );\n            });\n          } catch (e) {\n            this.log(`error: ${e}`, 'error');\n          }\n        }\n      }\n\n      // Add an audio and video transceiver that are send and receive,\n      // regardless of whether the user microphone / camera is currently\n      // available.\n      this._peerConnection.addTransceiver('audio', { direction: 'sendrecv' });\n      this._peerConnection.addTransceiver('video', { direction: 'sendrecv' });\n\n      // create updateOffer if resumeSessionId exists\n      if (body.resumeSessionId) {\n        const offerOptions: any = {\n          voiceActivityDetection: false,\n          iceRestart: true,\n        };\n        this._sessionId = body.resumeSessionId;\n        this._isResumedSession = true;\n        this.log(\n          `established, trying to resume session with session_id = ${body.resumeSessionId}`\n        );\n        this.createOffer(this._peerConnection, offerOptions)\n          .then((sessionDescription: RTCSessionDescriptionInit) => {\n            this.createdDescription.bind(this);\n            this.createdDescription(sessionDescription, 'updateOffer');\n          })\n          .catch(this._sessionError.bind(this));\n      } else {\n        // Create a webrtc offer\n        const offerOptions: any = {\n          voiceActivityDetection: false,\n          iceRestart: false,\n        };\n        this._isResumedSession = false;\n        this.createOffer(this._peerConnection, offerOptions)\n          .then(this.createdDescription.bind(this))\n          .catch(this._sessionError.bind(this));\n      }\n    } else if (name === 'accepted') {\n      // accepted - DP is starting / forming webrtc connection\n      this._connectionState.setConnectionState(\n        ConnectionStateTypes.ConnectingToDigitalPerson\n      );\n\n      this.log(`accepted, session_id = ${body.sessionId}`);\n\n      this._sessionId = body.sessionId;\n      this._resumeRequested = body.resumeRequested;\n\n      this._server = body.server;\n      this._sceneId = body.sceneId;\n\n      // The session has been accepted, send any outgoing queued messages\n      for (let i = 0; i < this._outgoingQueue.length; i++) {\n        this._outgoingQueue[i].body.sessionId = this._sessionId;\n        this.sendMessage(this._outgoingQueue[i]);\n      }\n      this._outgoingQueue = [];\n\n      // Monitor for orientation change events to update the camera rotation\n      const callback = () => {\n        if (this) {\n          this.sendCameraRotation();\n        }\n      };\n      window.addEventListener('orientationchange', callback);\n      this._removeListeners.push({\n        target: window,\n        name: 'orientationchange',\n        callback: callback,\n      });\n\n      this.sendCameraRotation();\n      const view = document.defaultView || window;\n      const style = view.getComputedStyle(this._videoElement);\n      const video_width = parseInt(`${style.width}`, 10); // cs check changed frm this.videoElement\n      const video_height = parseInt(`${style.height}`, 10);\n      this.log(\n        `accepted, sending video width/height: ${video_width} / ${video_height}`\n      );\n      this.sendVideoBounds(video_width, video_height);\n\n      // Send all pending log messages\n      this.sendlogMessage(this._pendingLog);\n      this._pendingLog = [];\n\n      // Check whether the the server needs us to route control messages to the\n      // orchestration server.\n      if (body.controlUrl) {\n        this._controlUrl = body.controlUrl;\n        this._controlQueue = [];\n        this._controlOpen = false;\n        this._controlConnection = new WebSocket(\n          body.controlUrl + '?access_token=' + this._accessToken\n        );\n\n        this._controlConnection.onmessage = (msg: MessageEvent) => {\n          const raw_text = msg.data;\n          if (raw_text) {\n            // forward this message to the session server\n            if (this._serverConnection.readyState === WebSocket.OPEN) {\n              this._serverConnection.send(raw_text);\n            }\n          }\n        };\n        this._controlConnection.onerror = () => {\n          this.close(true, 'controlFailed', deferred);\n        };\n\n        // wait for the websocket to open, then continue with setup\n        this._controlConnection.onopen = (event: Event) => {\n          this.log('control websocket open');\n          if (!this._controlOpen) {\n            this._controlOpen = true;\n\n            // send any pending orchestration/control messages in the order they were received\n            for (let i = 0; i < this._controlQueue.length; i++) {\n              this.log(\n                `control websocket now open, forwarding queued message: ${this._controlQueue[i]}`\n              );\n              this._controlConnection.send(this._controlQueue[i]);\n            }\n\n            this._controlQueue = [];\n          }\n        };\n\n        // setup a close handler\n        this._controlConnection.onclose = (event: CloseEvent) => {\n          this.log(\n            `control closed: code(${event.code}), reason(${event.reason}), clean(${event.wasClean})`\n          );\n          this.close(true, 'controlDisconnected', deferred);\n        };\n      }\n    } else if (name === 'answer') {\n      this.log('set remote description');\n      this.log(JSON.stringify(body));\n\n      const sessionDescription: RTCSessionDescriptionInit = {\n        sdp: body.sdp,\n        type: 'answer',\n      };\n      this.setRemoteDescription(this._peerConnection, sessionDescription)\n        .then(() => {\n          // Currently there's nothing to do\n        })\n        .catch(this._sessionError.bind(this));\n    } else if (name === 'connected') {\n      if (this._remoteStream) {\n        // connected - DP is started and ready the webrtc session has connected\n        this._connectionState.setConnectionState(\n          ConnectionStateTypes.Connected\n        );\n        this.onConnectedSuccess();\n        if (deferred) {\n          deferred.resolve(body.sessionId);\n        }\n      } else {\n        this.log('Connected but no remote media stream available');\n        // The remote stream has not connected yet, give it more time to connect\n        this._connectPendingRemoteStream = () => {\n          this.onConnectedSuccess();\n          if (deferred) {\n            deferred.resolve(body.sessionId);\n          }\n        };\n      }\n    } else if (name === 'ice') {\n      this.log('add ice candidate');\n      let addCandidate: Promise<void> | undefined;\n      if (body.complete) {\n        if (this._features.isEdge) {\n          addCandidate = this._peerConnection.addIceCandidate(\n            new RTCIceCandidate({\n              candidate: '',\n              sdpMid: '',\n              sdpMLineIndex: 0,\n            })\n          );\n        }\n      } else {\n        const iceCandidate = new RTCIceCandidate({\n          candidate: body.candidate,\n          sdpMid: body.sdpMid,\n          sdpMLineIndex: body.sdpMLineIndex,\n        });\n        addCandidate = this._peerConnection.addIceCandidate(iceCandidate);\n      }\n      if (addCandidate) {\n        addCandidate.catch(this._sessionError.bind(this));\n      }\n    } else if (name === 'offer') {\n      // NB: For calls inbound to browser, currently not used\n      //     Perhaps we might use this for queueing to talk to an avatar?\n      this._sessionId = body.sessionId;\n\n      const sessionDescription: RTCSessionDescriptionInit = {\n        sdp: body.sdp,\n        type: 'offer',\n      };\n      this.setRemoteDescription(this._peerConnection, sessionDescription)\n        // Create an answer in response to the offer\n        .then(() => this.createAnswer(this._peerConnection))\n        .then(this.createdDescription.bind(this))\n        .catch(this._sessionError.bind(this));\n    } else if (name === 'userText') {\n      this.log(`rtc - user text message received: ${body.userText}`);\n      this._onUserText(body.userText);\n    } else if (name === 'close') {\n      this.close(false, body.reason, deferred);\n    }\n  }\n\n  private gotIceCandidate(event: RTCPeerConnectionIceEvent) {\n    if (event.candidate) {\n      this.log('got local ice candidate');\n      // Note we name each ice field as the IE/Safari plugin doesn't reflect these for json serialization\n      this.sendRtcEvent('ice', {\n        complete: false,\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex,\n      });\n    } else {\n      this.log('end ice candidate');\n      // all ice candidates have been gathered, send an end of ice notification\n      this.sendRtcEvent('ice', {\n        complete: true,\n        candidate: '',\n        sdpMid: '',\n        sdpMLineIndex: 0,\n      });\n    }\n  }\n\n  private createdDescription(\n    description: RTCSessionDescriptionInit,\n    messageName = 'offer'\n  ) {\n    this.log('got description');\n\n    // Note we name each ice field as the IE/Safari plugin doesn't  reflect these for json serialization\n    const descriptionObj = { sdp: description.sdp, type: description.type };\n    this.log(JSON.stringify({ sdp: descriptionObj }));\n\n    this.setLocalDescription(this._peerConnection, description)\n      .then(() => {\n        // Note with the sdp offer information we also send the\n        // current video element width/height to remote end when\n        // setting up webrtc session so that it can send the best\n        // width/height\n        this.log('send sdp offer to server');\n\n        // Note we name each sdp field as the IE/Safari plugin doesn't  reflect these for json serialization\n        this.sendRtcEvent(messageName, {\n          sdp: this._peerConnection.localDescription\n            ? this._peerConnection.localDescription.sdp\n            : null,\n          type: this._peerConnection.localDescription\n            ? this._peerConnection.localDescription.type\n            : null,\n          user_text: this._connectUserText,\n          features: { videoStartedEvent: true },\n        });\n      })\n      .catch(this._sessionError.bind(this));\n  }\n\n  private onRemoteStream(stream: MediaStream | null) {\n    this.log('got remote stream');\n    this._remoteStream = stream;\n\n    this.log(\n      `ICE connection state: ${this._peerConnection.iceConnectionState}`\n    );\n    if (this._connectPendingRemoteStream) {\n      // A connect has been received however it has been paused while\n      // we waited for the remote stream - continue it now\n      this._connectPendingRemoteStream();\n      this._connectPendingRemoteStream = null;\n    }\n  }\n\n  private onConnectedSuccess() {\n    this._onConnected(\n      this._resumeRequested,\n      this._isResumedSession,\n      this._server,\n      this.sessionId\n    );\n\n    this._videoElement.hidden = false; // remote video stream\n    this._videoElement.srcObject = this._remoteStream;\n\n    const callback = async (event: RTCTrackEvent) => {\n      if (this._remoteStream) {\n        this._remoteStream.addTrack(event.track);\n      }\n    };\n    this._peerConnection.addEventListener('track', callback);\n    this._removeListeners.push({\n      target: this._peerConnection,\n      name: 'track',\n      callback: callback,\n    });\n\n    this.log('video enabled');\n\n    // Update the server of the current camera active state\n    this.sendUserCamera();\n\n    // Update the application of the current microphone & camera state\n    this._onMicrophoneActive?.call(this.isMicrophoneActive());\n    this._onCameraActive?.call(this.isCameraActive());\n  }\n\n  private onVideoLoaded(e: Event) {\n    this.log('video has loaded');\n\n    const videoStarted = () => {\n      this.log('video has started playing');\n      this.sendRtcEvent('videoStarted', {});\n      this.microphoneMuted = false; // allow the user to speak now that the DP is visible\n    };\n\n    // If the video element isn't muted the videoStarted event can be sent immediately\n    if (!this._videoElement.muted) {\n      videoStarted();\n      return;\n    }\n\n    // The video element is muted, wait for it to be unmuted before declaring the video fully started\n    // there isn't an event for unmuted however volumechange apparently provides a\n    // fair alternative: https://stackoverflow.com/questions/25105414/html5-video-onmuted-and-onloop-event\n    const unmuteCallback = () => {\n      videoStarted();\n      this._videoElement.removeEventListener('volumechange', unmuteCallback);\n    };\n\n    this._videoElement.addEventListener('volumechange', unmuteCallback, false);\n  }\n\n  public sendRtcEvent(name: string, body: any) {\n    if (this._serverConnection === null) {\n      return;\n    }\n\n    if (this._sessionId) {\n      body.sessionId = this._sessionId;\n    }\n\n    const payload = { category: 'webrtc', kind: 'event', name, body };\n\n    if (this._sessionId || name === 'offer') {\n      this.sendMessage(payload);\n    } else {\n      // The session has not yet been accepted, queue the message until it is\n      this._outgoingQueue.push(payload);\n    }\n  }\n\n  public sendVideoBounds(width: number, height: number) {\n    this.sendRtcEvent('videoBounds', { width, height });\n  }\n\n  /**\n   * Sends updated user camera rotation to server\n   * this gives the app the chance to choose the required rotation of the user camera\n   * such that it matches the devices orientation.  Values can be 0, 90, 180, 270.\n   * @param rotation - The clockwise rotation in degrees of the user video feed (0, 90, 180 or 270)\n   * @internal\n   */\n  private sendUserCamera(rotation?: number) {\n    const body = { active: this.isCameraActive() } as Record<string, any>;\n    if (rotation !== undefined) {\n      body.rotation = rotation;\n    }\n    this.sendRtcEvent('userCamera', body);\n  }\n\n  private sendCameraRotation() {\n    if (this._features.isIos) {\n      const orientation = window.orientation;\n      this.log(\n        `send updated camera rotation, device orientation: ${orientation}`\n      );\n\n      // Compute the camera orientation for iOS, degrees to rotate the image to the right\n      // to give it a correct orientation relative to how the iOS device is held\n      let rotateCamera = 0;\n\n      // NB: iOS safari fixedCameraOrientation = -90; - iOS front camera orientation in terms of window orientation positions\n      if (orientation === 0) {\n        rotateCamera = 90;\n      } else if (orientation === 90) {\n        rotateCamera = 180;\n      } else if (orientation === 180) {\n        rotateCamera = 270;\n      } else if (orientation === -90) {\n        rotateCamera = 0;\n      }\n\n      this.sendUserCamera(rotateCamera);\n    }\n  }\n\n  public sendMessage(message: any): void {\n    if (!this._serverConnection) {\n      return;\n    }\n\n    if (this._serverConnection.readyState === WebSocket.OPEN) {\n      // connected\n      this._serverConnection.send(JSON.stringify(message));\n    } else {\n      this.log(`server connection not ready, discarding message: ${message}`);\n    }\n  }\n\n  public sendUserText(text: string) {\n    this.sendRtcEvent('userText', { userText: text });\n  }\n\n  private hasCamera(userMedia: UserMedia): boolean {\n    return (\n      userMedia === UserMedia.Camera ||\n      userMedia === UserMedia.MicrophoneAndCamera\n    );\n  }\n\n  private hasMicrophone(userMedia: UserMedia): boolean {\n    return (\n      userMedia === UserMedia.Microphone ||\n      userMedia === UserMedia.MicrophoneAndCamera\n    );\n  }\n\n  private makeUserMedia(microphone: boolean, webcam: boolean): UserMedia {\n    if (microphone && webcam) {\n      return UserMedia.MicrophoneAndCamera;\n    } else if (microphone) {\n      return UserMedia.Microphone;\n    } else if (webcam) {\n      return UserMedia.Camera;\n    }\n    return UserMedia.None;\n  }\n\n  private findSenderTrackByKind(kind: string): MediaStreamTrack | null {\n    if (!this._peerConnection) {\n      return null;\n    }\n\n    const senders = this._peerConnection.getSenders();\n    for (const sender of senders) {\n      if (sender.track && sender.track?.kind === kind) {\n        return sender.track;\n      }\n    }\n    return null;\n  }\n\n  private findSenderByKind(kind: string): RTCRtpSender | null {\n    if (!this._peerConnection) {\n      return null;\n    }\n\n    for (const transceiver of this._peerConnection.getTransceivers()) {\n      if (\n        transceiver.direction === 'sendrecv' &&\n        transceiver.receiver?.track?.kind === kind\n      ) {\n        return transceiver.sender;\n      }\n    }\n\n    for (const sender of this._peerConnection.getSenders()) {\n      if (sender.track === null || sender.track.kind === kind) {\n        return sender;\n      }\n    }\n\n    return null;\n  }\n\n  private async processChangeUserMediaQueue() {\n    let operation: ChangeUserMediaOp | undefined;\n\n    do {\n      operation =\n        this._changeUserMediaQueue.length > 0\n          ? this._changeUserMediaQueue[0]\n          : undefined;\n      if (operation) {\n        try {\n          const lastMicrophoneActive = this.isMicrophoneActive();\n          const lastCameraActive = this.isCameraActive();\n\n          // Change the media to that requested by the operation\n          await this.changeUserMediaInternal(\n            this.makeUserMedia(\n              operation.microphone ?? lastMicrophoneActive,\n              operation.camera ?? lastCameraActive\n            )\n          );\n\n          // Notify of any change of microphone state\n          if (\n            operation.microphone !== undefined &&\n            operation.microphone !== lastMicrophoneActive\n          ) {\n            this._onMicrophoneActive?.call(this.isMicrophoneActive());\n          }\n\n          // Notify of any change of camera state\n          if (\n            operation.camera !== undefined &&\n            operation.camera !== lastCameraActive\n          ) {\n            this._onCameraActive?.call(this.isCameraActive());\n          }\n\n          // The operation has completed successfully\n          operation.deferred.resolve();\n        } catch (e) {\n          operation.deferred.reject(e);\n        }\n\n        // Remove the operation as it's now finished\n        this._changeUserMediaQueue.shift();\n      }\n    } while (operation);\n  }\n\n  private async changeUserMediaInternal(\n    newUserMedia: UserMedia\n  ): Promise<void> {\n    const microphoneTrack = this.findSenderTrackByKind('audio');\n    const cameraTrack = this.findSenderTrackByKind('video');\n\n    // Find out if we need to upgrade the user media first (i.e. request a new microphone and/or camera track)\n    const needMicrophoneUpgrade =\n      this.hasMicrophone(newUserMedia) &&\n      (!microphoneTrack || microphoneTrack.readyState === 'ended');\n    const needCameraUpgrade =\n      this.hasCamera(newUserMedia) &&\n      (!cameraTrack || cameraTrack.readyState === 'ended');\n\n    let newMediaStream: MediaStream | null = null;\n\n    if (needMicrophoneUpgrade || needCameraUpgrade) {\n      // Either the microphone or camera is needed and not yet present,\n      // ensure we can get the required user media first\n      const requiredMedia = this.makeUserMedia(\n        needMicrophoneUpgrade,\n        needCameraUpgrade\n      );\n      const mediaDeferred = new Deferred<any>();\n\n      this.selectUserMedia(\n        requiredMedia,\n        requiredMedia,\n        mediaDeferred,\n        async (stream, deferred) => {\n          newMediaStream = stream;\n          deferred.resolve();\n        }\n      );\n\n      await mediaDeferred.promise;\n\n      if (!this._localStream) {\n        this._localStream = new MediaStream();\n      }\n    }\n\n    // Update the microphone track\n    await this.updateSenderTrack(\n      'audio',\n      this.hasMicrophone(newUserMedia),\n      newMediaStream\n    );\n\n    // Update the camera track\n    await this.updateSenderTrack(\n      'video',\n      this.hasCamera(newUserMedia),\n      newMediaStream\n    );\n\n    // Update the server of the current camera active state\n    this.sendUserCamera();\n  }\n\n  // Update the RTP sender / track to the given active state. If active then the newMediaStream must\n  // contain a track for the requested 'kind'\n  private async updateSenderTrack(\n    kind: 'audio' | 'video',\n    active: boolean,\n    newMediaStream: MediaStream | null\n  ): Promise<void> {\n    const sender = this.findSenderByKind(kind);\n    const track = sender?.track;\n\n    // Update the user media track\n    if (!!sender && (!track || active !== track.enabled)) {\n      this.log('new user ' + kind + ' active state = ' + active);\n      if (active) {\n        try {\n          if (track) {\n            this._localStream?.removeTrack(track);\n          }\n          if (newMediaStream) {\n            const newTrack = this.getTrackByKind(newMediaStream, kind);\n            if (newTrack) {\n              this._localStream?.addTrack(newTrack);\n              if (sender.track !== newTrack) {\n                this.log('replacing user ' + kind + ' track');\n                await sender.replaceTrack(newTrack);\n              }\n            }\n          }\n        } catch (e) {\n          this.log(`failed to get user ${kind} track, error: ${e}`, 'error');\n          throw makeError(\n            'failed to get user ' + kind + ': ' + e,\n            'failedUpgrade'\n          );\n        }\n      } else if (track) {\n        track.enabled = false;\n        track.stop();\n      }\n    }\n  }\n\n  private getTrackByKind(\n    stream: MediaStream | null,\n    kind: string\n  ): MediaStreamTrack | undefined {\n    if (stream) {\n      for (const track of stream.getTracks()) {\n        if (track.kind === kind) {\n          return track;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private isSenderTrackEnabled(kind: 'audio' | 'video'): boolean {\n    const track = this.findSenderTrackByKind(kind);\n    return Boolean(track?.enabled);\n  }\n\n  isMicrophoneActive(): boolean {\n    return this.isSenderTrackEnabled('audio');\n  }\n\n  isCameraActive(): boolean {\n    return this.isSenderTrackEnabled('video');\n  }\n\n  async setMediaDeviceActive({\n    microphone,\n    camera,\n  }: {\n    microphone?: boolean;\n    camera?: boolean;\n  }): Promise<void> {\n    // Queue changes to media so that we execute them one at a time to completion,\n    // this is particularly important when negotiating with the server to\n    // liven the new RTP sender\n    const deferred = new Deferred<any>();\n    this._changeUserMediaQueue.push({ microphone, camera, deferred });\n\n    if (this._changeUserMediaQueue.length === 1) {\n      this.processChangeUserMediaQueue();\n    }\n\n    return deferred.promise;\n  }\n\n  public close(\n    sendRtcClose = true,\n    reason = 'normal',\n    deferred?: Deferred<any>\n  ) {\n    if (this._closed) {\n      return;\n    }\n\n    this._closed = true;\n\n    if (this._peerConnection) {\n      try {\n        this._peerConnection.close();\n      } catch (e) {\n        this.log(`error: ${e}`, 'error');\n      }\n    }\n\n    if (this._localStream) {\n      try {\n        const tracks = this._localStream.getTracks();\n        for (const i in tracks) {\n          tracks[i].stop();\n        }\n      } catch (e) {\n        this.log(`error: ${e}`, 'error');\n      }\n    }\n\n    if (sendRtcClose) {\n      this.sendRtcEvent('close', { reason: 'normal' });\n    }\n\n    if (deferred) {\n      if (deferred.isResolved()) {\n        this._onClose(reason);\n      } else {\n        deferred.reject(makeError('websocket closed: ' + reason, reason));\n      }\n    }\n\n    if (this._serverConnection) {\n      this.log('closing server connection');\n      this._serverConnection.close();\n    }\n\n    if (this._controlConnection) {\n      this._controlConnection.close();\n    }\n\n    // Deregister event listeners\n    for (const listener of this._removeListeners) {\n      listener.target.removeEventListener(listener.name, listener.callback);\n    }\n  }\n\n  private createOffer(\n    peerConnection: RTCPeerConnection,\n    options: RTCOfferOptions\n  ) {\n    return peerConnection.createOffer(options);\n  }\n\n  private setRemoteDescription(\n    peerConnection: RTCPeerConnection,\n    sessionDescription: RTCSessionDescriptionInit\n  ) {\n    return peerConnection.setRemoteDescription(sessionDescription);\n  }\n\n  private setLocalDescription(\n    peerConnection: RTCPeerConnection,\n    description: RTCSessionDescriptionInit\n  ) {\n    return peerConnection.setLocalDescription(description);\n  }\n\n  private createAnswer(peerConnection: RTCPeerConnection) {\n    return peerConnection.createAnswer();\n  }\n\n  get peerConnection(): RTCPeerConnection | null {\n    return this._peerConnection;\n  }\n\n  get serverConnection(): WebSocket {\n    return this._serverConnection;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  get server(): string {\n    return this._server;\n  }\n\n  get sceneId(): number {\n    return this._sceneId;\n  }\n\n  get isMicrophoneConnected(): boolean {\n    return !!this.findSenderTrackByKind('audio');\n  }\n\n  get isCameraConnected(): boolean {\n    return !!this.findSenderTrackByKind('video');\n  }\n\n  get features(): Features {\n    return this._features;\n  }\n\n  get microphoneMuteDelay(): number {\n    return this._microphoneMuteDelay;\n  }\n\n  get userMediaStream(): MediaStream | null {\n    return this._localStream;\n  }\n\n  get microphoneMuted(): boolean {\n    if (!this._localStream) {\n      return true;\n    }\n    const audioTracks = this._localStream.getAudioTracks();\n    if (!audioTracks || audioTracks.length < 1) {\n      return true;\n    }\n\n    return !audioTracks[0].enabled;\n  }\n\n  set microphoneMuted(mute: boolean) {\n    if (!this._localStream) {\n      return;\n    }\n    const audioTracks = this._localStream.getAudioTracks();\n    if (!audioTracks || audioTracks.length < 1) {\n      return;\n    }\n    const audioSender = this.findSenderByKind('audio');\n    if (\n      audioSender?.track?.readyState === 'live' &&\n      audioSender.track === audioTracks[0]\n    ) {\n      const enable = !mute;\n      audioTracks[0].enabled = enable;\n      this.log(`microphone muted active notification: ${enable}`);\n      this._onMicrophoneActive?.call(enable);\n    }\n  }\n\n  get webcamMuted(): boolean {\n    if (!this._localStream) {\n      return true;\n    }\n    const videoTracks = this._localStream.getVideoTracks();\n    if (!videoTracks || videoTracks.length < 1) {\n      return true;\n    }\n\n    return !videoTracks[0].enabled;\n  }\n\n  set webcamMuted(mute: boolean) {\n    if (!this._localStream) {\n      return;\n    }\n    const videoTracks = this._localStream.getVideoTracks();\n    if (!videoTracks || videoTracks.length < 1) {\n      return;\n    }\n\n    const videoSender = this.findSenderByKind('video');\n    if (\n      videoSender?.track?.readyState === 'live' &&\n      videoSender.track === videoTracks[0]\n    ) {\n      const enable = !mute;\n      videoTracks[0].enabled = enable;\n      this._onCameraActive?.call(enable);\n    }\n  }\n\n  get offsetX(): number {\n    return 0;\n  }\n\n  get offsetY(): number {\n    return 0;\n  }\n\n  set microphoneActiveCallbacks(callbacks: SmEvent) {\n    this._onMicrophoneActive = callbacks;\n  }\n\n  set cameraActiveCallbacks(callbacks: SmEvent) {\n    this._onCameraActive = callbacks;\n  }\n}\n","export enum WebsocketCategory {\n  Scene = 'scene',\n}\n","/**\n * @public\n */\nexport enum WebsocketKind {\n  Response = 'response',\n  Request = 'request',\n}\n","/*\n * Copyright 2019-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nexport enum SpeechState {\n  Idle = 'idle',\n  Animating = 'animating',\n  Speaking = 'speaking',\n}\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { Deferred } from './Deferred';\nimport { Features } from './Features';\nimport { Logger, LogLevel } from './utils/Logger';\nimport { makeError } from './utils/make-error';\nimport { WebsocketResponse } from './websocket-message/index';\n\nexport interface MessageFunction {\n  (message: string): void;\n}\n\nexport interface WebsocketFunction {\n  (message: WebsocketResponse): void;\n}\n\nexport interface SessionFunction {\n  (\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n  ): void;\n}\n\n/**\n *  WebSocketSession class\n */\nexport class WebSocketSession {\n  private _serverUri: string;\n  private _accessToken: string;\n  private _serverConnection!: WebSocket;\n  private _sessionId!: string;\n  private _outgoingQueue: any[] = [];\n\n  private _onConnectedStorage: SessionFunction = (\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ) => {};\n  private _onClose: MessageFunction;\n  private _onMessage: WebsocketFunction;\n  private _sessionError: MessageFunction;\n\n  private _features: Features;\n  private _pendingLog: string[] = [];\n  private _closed = false;\n\n  private _shouldLogToServer = false;\n\n  constructor(\n    serverUri: string,\n    accessToken: string,\n    private logger = new Logger()\n  ) {\n    this._serverUri = serverUri;\n    this._accessToken = accessToken;\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onClose = (reason: string) => {}; // owner specifies custom close method\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onMessage = (message: WebsocketResponse) => {}; // owner specifies custom message handler\n\n    this._sessionError = (error: string) => {\n      // owner can specify custom session error handler\n      this.logger.log('error', `session error: ${error}`);\n    };\n\n    this._features = new Features();\n  }\n\n  set onConnected(sessionFunction: SessionFunction) {\n    this._onConnectedStorage = sessionFunction;\n  }\n\n  set onClose(closeFunction: MessageFunction) {\n    this._onClose = closeFunction;\n  }\n\n  set onMessage(messageFunction: WebsocketFunction) {\n    this._onMessage = messageFunction;\n  }\n\n  /**\n   * @deprecated use setLogging(boolean).\n   */\n  set loggingEnabled(enable: boolean) {\n    this.logger.log(\n      'warn',\n      'loggingEnabled is deprecated and will be removed in a future version. Please use setLogging(boolean)'\n    );\n    this.logger.enableLogging(enable);\n  }\n\n  get loggingEnabled(): boolean {\n    return this.logger.isEnabled;\n  }\n\n  public setMinLogLevel(level: LogLevel) {\n    this.logger.setMinLogLevel(level);\n  }\n\n  public setLogging(enable: boolean) {\n    this.logger.enableLogging(enable);\n  }\n\n  public log(text: string) {\n    if (this.loggingEnabled) {\n      if (this._shouldLogToServer) {\n        this.logToServer(text);\n      } else {\n        this.logger.log('log', text);\n      }\n    }\n  }\n\n  private logToServer(text: string) {\n    if (this.sessionId) {\n      this.sendlogMessage([text]);\n    } else {\n      this._pendingLog.push(text);\n    }\n  }\n\n  public sendlogMessage(textArray: string[]): void {\n    if (this._sessionId && textArray && textArray.length > 0) {\n      const payload: any = {\n        category: 'diagnostics',\n        kind: 'event',\n        name: 'log',\n        body: { name: 'browser', text: textArray },\n      };\n      this.sendMessage(payload);\n    }\n  }\n\n  public async connect(): Promise<string | undefined> {\n    const deferred = new Deferred<any>();\n    this._closed = false;\n    if (\n      this._serverUri &&\n      (this._serverUri.startsWith('ws:') || this._serverUri.startsWith('wss:'))\n    ) {\n      // A server uri has been specified, continue with the connection\n      this.connectByWebSocket(deferred);\n    }\n    return deferred.promise;\n  }\n\n  private connectByWebSocket(deferred: Deferred<any>): void {\n    this.log(`connecting to: ${this._serverUri}`);\n    if (!this._accessToken) {\n      this._serverConnection = new WebSocket(this._serverUri);\n    } else {\n      this._serverConnection = new WebSocket(\n        this._serverUri + '?access_token=' + this._accessToken\n      );\n    }\n\n    this._serverConnection.onmessage = (msg: MessageEvent) => {\n      this.gotMessageFromServer(msg, deferred);\n    };\n\n    this._serverConnection.onerror = (event) => {\n      if (deferred.isPending()) {\n        deferred.reject(\n          makeError('websocket failed', 'serverConnectionFailed')\n        );\n      }\n    };\n\n    // wait for the websocket to open, then continue with setup\n    this._serverConnection.onopen = (event: Event) => {\n      this.log('websocket open');\n      deferred.resolve();\n    };\n\n    // setup a close handler\n    this._serverConnection.onclose = (event: CloseEvent) => {\n      this.log(\n        `websocket closed: code(${event.code}), reason(${event.reason}), clean(${event.wasClean})`\n      );\n      if (!deferred.isRejected) {\n        this.close(false, 'normal', deferred);\n      }\n    };\n  }\n\n  private gotMessageFromServer(\n    websocket_message: MessageEvent,\n    deferred?: Deferred<any>\n  ): void {\n    const raw_text = websocket_message.data;\n    this.log(`message received: ${raw_text}`);\n    const message = JSON.parse(raw_text);\n\n    const category = message.category;\n    const name = message.name;\n    const body = message.body;\n\n    if (category !== 'webrtc') {\n      // forward on non-webrtc messages (e.g. scene)\n      this._onMessage(message);\n      return;\n    }\n\n    if (message.kind !== 'event') {\n      // currently ignore requests and responses\n      return;\n    }\n\n    if (name === 'accepted') {\n      this.log(`accepted, session_id = ${body.sessionId}`);\n      this._sessionId = body.sessionId;\n\n      // The session has been accepted, send any outgoing queued messages\n      for (let i = 0; i < this._outgoingQueue.length; i++) {\n        this._outgoingQueue[i].body.sessionId = this._sessionId;\n        this.sendMessage(this._outgoingQueue[i]);\n      }\n      this._outgoingQueue = [];\n\n      // Send all pending log messages\n      this.sendlogMessage(this._pendingLog);\n      this._pendingLog = [];\n    } else if (name === 'close') {\n      this.close(false, body.reason, deferred);\n    }\n  }\n\n  public sendMessage(message: any): void {\n    if (!this._serverConnection) {\n      return;\n    }\n\n    if (this._serverConnection.readyState === WebSocket.OPEN) {\n      // connected\n      this._serverConnection.send(JSON.stringify(message));\n    } else {\n      this.log(`not ready, discarding message: ${message}`);\n    }\n  }\n\n  public close(\n    sendRtcClose = true,\n    reason = 'normal',\n    deferred?: Deferred<any>\n  ) {\n    if (this._closed) {\n      return;\n    }\n\n    this._closed = true;\n\n    if (deferred) {\n      if (deferred.isResolved()) {\n        this._onClose(reason);\n      } else {\n        deferred.reject(makeError('websocket closed: ' + reason, reason));\n      }\n    }\n\n    if (this._serverConnection) {\n      this.log('closing server connection');\n      this._serverConnection.close();\n    }\n  }\n\n  get serverConnection(): WebSocket {\n    return this._serverConnection;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  get peerConnection(): RTCPeerConnection | null {\n    return null;\n  }\n\n  get features(): Features {\n    return this._features;\n  }\n\n  public sendRtcEvent(name: string, body: any) {\n    // NOOP: Stuff for compatibility with Session in Scene\n  }\n\n  public sendVideoBounds(widthIgnored: number, heightIgnored: number) {\n    // NOOP: Stuff for compatibility with Session in Scene\n  }\n\n  public sendUserText(text: string): void {\n    this.logger.log('error', 'WebSocketSession discarding text: ' + text);\n  }\n\n  get microphoneMuteDelay(): number | undefined {\n    return undefined;\n  }\n\n  get microphoneMuted(): boolean | null {\n    return null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  set microphoneMuted(mute: boolean | null) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  set onUserText(userTextFunction: MessageFunction) {}\n\n  get isMicrophoneConnected(): boolean | null {\n    return null;\n  }\n\n  get isCameraConnected(): boolean | null {\n    return null;\n  }\n\n  get offsetX(): number {\n    return 0;\n  }\n\n  get offsetY(): number {\n    return 0;\n  }\n\n  isMicrophoneActive(): boolean {\n    return false;\n  }\n\n  isCameraActive(): boolean {\n    return false;\n  }\n\n  async setMediaDeviceActive({\n    microphone,\n    camera,\n  }: {\n    microphone?: boolean;\n    camera?: boolean;\n  }): Promise<void> {\n    throw makeError(\n      'setMediaDeviceActive not supported on WebSocketSession',\n      'notSupported'\n    );\n  }\n}\n","var resizeObservers = [];\nexport { resizeObservers };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","const allImagesLoaded = () =>\n  Promise.all(\n    Array.from(document.images)\n      .filter((img) => !img.complete)\n      .map(\n        (img) =>\n          new Promise((resolve) => {\n            img.onload = resolve;\n            img.onerror = resolve;\n          })\n      )\n  );\n\nexport default allImagesLoaded;\n","export const debouncedFunction = (\n  fn: CallableFunction,\n  debounceTimeMs = 500\n): CallableFunction => {\n  let debounceTimerId = -1;\n\n  return () => {\n    if (debounceTimerId) {\n      clearTimeout(debounceTimerId);\n    }\n\n    debounceTimerId = setTimeout(\n      () => fn(),\n      debounceTimeMs\n    ) as unknown as number;\n  };\n};\n","/*\n * Copyright 2021 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { Scene } from './Scene';\nimport { ContentAwarenessObjectModel } from './models';\nimport { UpdateContentAwarenessRequestBody } from './websocket-message/scene';\nimport allImagesLoaded from './utils/allImagesLoaded';\nimport { debouncedFunction } from './utils/debounce';\nimport { Logger, LogLevel } from './utils/Logger';\n\n/**\n * ContentAwareness class\n *\n * An instance of this class is used to enable CUE behaviors in the digital human.\n * This is achived by measuring tagged HTML elements and sending their coordinates back to the server\n *\n * See documentation on GitHub for further reference on how to use this API\n * https://github.com/soulmachines/smwebsdk/blob/cue-content-awareness-api/guide/content-awareness.md\n *\n * @public\n */\nexport class ContentAwareness {\n  // Data Attribute Strings\n  private readonly VIDEO_FRAME_STR = 'data-sm-video';\n  private readonly VIDEO_FRAME_STR_BRACKETED = `[${this.VIDEO_FRAME_STR}]`;\n  private readonly CONTENT_STR = 'data-sm-content';\n  private readonly CONTENT_STR_BRACKETED = `[${this.CONTENT_STR}]`;\n  private readonly CUE_ATTRIBUTES = [this.VIDEO_FRAME_STR, this.CONTENT_STR];\n  private readonly CUE_ATTRIBUTES_BRACKETED = [\n    this.VIDEO_FRAME_STR_BRACKETED,\n    this.CONTENT_STR_BRACKETED,\n  ].join();\n  private readonly RESIZE_OBSERVER_BOX_OPTIONS = 'border-box';\n\n  // Observers\n  private mutationObserver: MutationObserver;\n  public resizeObserver: ResizeObserver;\n\n  private callMeasure = false;\n\n  public contentCollection: Record<string, Element> = {};\n  public videoFrame: Element | null = null;\n\n  // Callbacks\n  public debouncedMeasure: CallableFunction;\n\n  constructor(\n    private scene: Scene,\n    public debounceTime = 300,\n    private logger = new Logger()\n  ) {\n    this.debouncedMeasure = debouncedFunction(\n      () => this.measureInternal(),\n      debounceTime\n    );\n\n    this.resizeObserver = new ResizeObserver(() => this.measureDebounced());\n    this.getInitialElements();\n    this.mutationObserver = new MutationObserver((mutations) =>\n      this.mutationCallback(mutations)\n    );\n    this.setupEventListeners();\n    this.observeMutations();\n    this.measureInternal();\n  }\n\n  /**\n   * Check if the content awareness logging is enabled.\n   *\n   * @returns Returns true if the content awareness logging is enabled otherwise false.\n   */\n  public isLoggingEnabled(): boolean {\n    return this.logger.isEnabled;\n  }\n\n  /**\n   * Enable/disable content awareness logging\n   * @param enable - set true to enable content awareness log, false to disable\n   */\n  public setLogging(enable: boolean) {\n    this.logger.enableLogging(enable);\n  }\n\n  /**\n   * Check minimal log level of content awareness.\n   *\n   * @returns Returns minimal log setting of content awareness, type is LogLevel.\n   */\n  public getMinLogLevel() {\n    return this.logger.getMinLogLevel();\n  }\n\n  /**\n   * Set minimal log level of  content awareness logging.\n   * @param level - use LogLevel type to set minimal log level of  content awareness logging\n   */\n  public setMinLogLevel(level: LogLevel) {\n    this.logger.setMinLogLevel(level);\n  }\n\n  public setupEventListeners() {\n    window.addEventListener('resize', () => this.measureDebounced());\n  }\n\n  /**\n   * Get initial elements, future elements will be added via mutation observer\n   */\n  private getInitialElements() {\n    const videoEl = document.querySelector(this.VIDEO_FRAME_STR_BRACKETED);\n    const contentElements = document.querySelectorAll(\n      this.CONTENT_STR_BRACKETED\n    );\n\n    this.trackVideoElement(videoEl);\n\n    Array.from(contentElements).map((element) =>\n      this.trackContentElement(element)\n    );\n  }\n\n  /**\n   * Start watching for changes in the DOM that are relevant to\n   * ContentAwareness object tracking.\n   * @returns The ContentAwareness MutationObserver used for all content\n   */\n  private observeMutations() {\n    const watchNode: Node = document.documentElement || document.body; // Target node of DOM to watch\n\n    this.mutationObserver.observe(watchNode, {\n      attributeFilter: this.CUE_ATTRIBUTES, // Restrict monitoring to these attributes.\n      attributeOldValue: true, // Stores old value\n      childList: true, // Trigger on addition / removal of child elements\n      subtree: true, // Monitor elements in child directories\n    });\n  }\n\n  /**\n   * Publicly accessible function to disconnect observers and event listeners\n   */\n  public disconnect(): void {\n    // Disconnect observers\n    this.mutationObserver.disconnect();\n    this.resizeObserver.disconnect();\n\n    // Remove event listeners\n    window.removeEventListener('resize', () => this.measureDebounced());\n\n    // Reset scene\n    this.scene.contentAwareness = undefined;\n  }\n\n  /**\n   * Publicly accessible function to reconnect observers and event listeners\n   */\n  public reconnect(): void {\n    // Restore the link between scene and ca\n    this.scene.contentAwareness = this;\n\n    this.observeMutations();\n\n    this.setupEventListeners();\n\n    this.measure();\n  }\n\n  /**\n   * Publicly accessible function to trigger measurement of CUE-relevant elements in the DOM\n   * and send an updateContentAwareness message\n   */\n  public measure(): void {\n    this.measureInternal();\n  }\n\n  public measureDebounced() {\n    this.debouncedMeasure();\n  }\n\n  /**\n   * measures data-sm-video and data-sm-content HTML Elements\n   *\n   * This is automatically called in simple scenarios but can be manually called\n   * if the dev knows an important element has changed\n   *\n   * See documentation on GitHub for further reference on how to use this API\n   * https://github.com/soulmachines/smwebsdk/blob/cue-content-awareness-api/guide/content-awareness.md\n   *\n   * Console logs the sent message on success or an error on failure\n   */\n  private measureInternal(): void {\n    if (!this.scene.isConnected()) {\n      this.logger.log(\n        'error',\n        'ContentAwareness: Scene does not exist or is not connected yet'\n      );\n\n      return;\n    }\n\n    const windowSize = this.measureWindow();\n    const videoFrame = this.measureVideoFrame();\n    const contentCollection = this.measureContent();\n\n    if (windowSize && videoFrame && contentCollection) {\n      const contentAwarenessMessage = this.buildUpdateContentAwarenessRequest(\n        windowSize.innerWidth,\n        windowSize.innerHeight,\n        videoFrame,\n        contentCollection\n      );\n\n      this.scene.sendRequest('updateContentAwareness', contentAwarenessMessage);\n    }\n  }\n\n  /**\n   * measure elements tagged with data-videoFrame\n   * @returns a ContentAwarenessObjectModel filled with\n   * videoFrame coordinates on success. returns null on failure\n   */\n  private measureVideoFrame(): ContentAwarenessObjectModel | null {\n    if (!this.videoFrame) {\n      this.logger.log(\n        'warn',\n        'ContentAwareness: Unable to find a video element'\n      );\n      return null;\n    }\n\n    const videoRect = this.videoFrame.getBoundingClientRect();\n\n    if (this.invalidDimensions(videoRect)) {\n      this.logger.log(\n        'warn',\n        'ContentAwareness: Video has a zero width and height'\n      );\n      return null;\n    }\n\n    return {\n      x1: Math.round(videoRect.left),\n      x2: Math.round(videoRect.right),\n      y1: Math.round(videoRect.top),\n      y2: Math.round(videoRect.bottom),\n    };\n  }\n\n  /**\n   * measure elements tagged with data-content\n   * @returns a ContentAwarenessObjectModel array filled with the coordinates and\n   * ids of content tagged with the data-sm-content attribute\n   */\n  private measureContent() {\n    const validContent: ContentAwarenessObjectModel[] = [];\n\n    Object.keys(this.contentCollection).map((key) => {\n      const contentElement = this.contentCollection[key];\n      const contentRect = contentElement.getBoundingClientRect();\n\n      if (this.invalidDimensions(contentRect)) {\n        this.logger.log(\n          'warn',\n          `ContentAwareness: Element '${key}' has a zero width and height`\n        );\n      }\n\n      if (this.invalidContent(contentRect)) {\n        this.logger.log(\n          'warn',\n          `ContentAwareness: Element '${key}' is not being tracked`\n        );\n        // Remove id from content collection but keep observers incase it changes\n        delete this.contentCollection[key];\n        return;\n      }\n\n      validContent.push({\n        id: key,\n        x1: Math.round(contentRect.left),\n        x2: Math.round(contentRect.right),\n        y1: Math.round(contentRect.top),\n        y2: Math.round(contentRect.bottom),\n      });\n    });\n\n    return validContent;\n  }\n\n  /**\n   * Preliminary indication of if content dimensions are valid or not.\n   * Checks if the length and height are zero\n   * @param contentRect - the DOMRect to check\n   * @returns a bool indicating validity\n   */\n  private invalidDimensions(contentRect: DOMRect): boolean {\n    return contentRect.width === 0 && contentRect.height === 0;\n  }\n\n  /**\n   * Preliminary indication of if content is valid or not.\n   * Checks if the coordinates are non zero\n   * @param contentRect - the DOMRect to check\n   * @returns a bool indicating validity\n   */\n  private invalidContent(contentRect: DOMRect): boolean {\n    return (\n      contentRect.top === 0 &&\n      contentRect.bottom === 0 &&\n      contentRect.right === 0 &&\n      contentRect.left === 0\n    );\n  }\n\n  /**\n   * measure the browser window\n   * @returns an object containing the window height (innerHeight) and window width (innerWidth)\n   */\n  private measureWindow(): { innerHeight: number; innerWidth: number } {\n    return {\n      innerHeight: Math.round(window.innerHeight),\n      innerWidth: Math.round(window.innerWidth),\n    };\n  }\n\n  /**\n   * Builds the required UpdateContentAwareness message that gets sent to the server\n   *\n   * @param viewWidth - the width of the browser window\n   * @param viewHeight - the height of the browser window\n   * @param videoFrame - an object containing the coordinates of the video element in which the persona exists\n   * @param content - an array of objects containing the coordinates of the content elements the persona should be aware of\n   * @returns - UpdateContentAwarenessRequestBody the message body to send\n   *\n   * The return value from this function should be passed to\n   * scene.sendRequest('updateContentAwareness', body)\n   */\n  public buildUpdateContentAwarenessRequest(\n    viewWidth: number,\n    viewHeight: number,\n    videoFrame: ContentAwarenessObjectModel,\n    content: Array<ContentAwarenessObjectModel>\n  ): UpdateContentAwarenessRequestBody {\n    return {\n      viewWidth,\n      viewHeight,\n      videoFrame,\n      content,\n    };\n  }\n\n  private trackVideoElement(element: Element | null) {\n    if (!element) {\n      return;\n    }\n    if (this.videoFrame) {\n      this.logger.log(\n        'warn',\n        'ContentAwareness: Already observing a video element, switching to new video element'\n      );\n\n      this.untrackVideoElement(this.videoFrame);\n    }\n\n    this.videoFrame = element;\n    this.resizeObserver.observe(this.videoFrame, {\n      box: this.RESIZE_OBSERVER_BOX_OPTIONS,\n    });\n  }\n\n  private trackContentElement(element: Element): boolean {\n    const id = element.getAttribute(this.CONTENT_STR);\n    if (id) {\n      this.contentCollection[id] = element;\n      this.resizeObserver.observe(element, {\n        box: this.RESIZE_OBSERVER_BOX_OPTIONS,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private untrackContentElement(element: Element) {\n    const id = element.getAttribute(this.CONTENT_STR) as string;\n    const trackedElement = this.contentCollection[id];\n\n    // only untrack the element if the element we have stored\n    // against that id is the same one being requested for removal.\n    // this allows for showing/hiding of elements that use the same id.\n    if (element === trackedElement) {\n      delete this.contentCollection[id];\n      this.resizeObserver.unobserve(element);\n    }\n  }\n\n  private untrackVideoElement(element: Element) {\n    // Only clear the videoFrame element if its the same as the currently track video element.\n    // A mismatch can occur when adding/removing different video elements. If a new video element appears we'll switch and track that.\n    // If the remove event occurs after the switch we'll ignore it, as we don't want to untrack the newly added element\n    if (element === this.videoFrame) {\n      this.videoFrame = null;\n    }\n\n    // Always unobserve the removed element\n    this.resizeObserver.unobserve(element);\n  }\n\n  /**\n   * Takes an array of MutationRecords and measures the ones marked with content awareness attributes\n   * @param mutations - an array of MutationRecords to check and measure\n   */\n  public mutationCallback(mutations: readonly MutationRecord[]): void {\n    let imagesAdded = false;\n    this.callMeasure = false; // reset callMeasure\n\n    for (let i = 0; i < mutations.length; ++i) {\n      switch (mutations[i].type) {\n        case 'childList': {\n          if (mutations[i].target.nodeType !== Node.ELEMENT_NODE) {\n            break;\n          }\n\n          this.untrackRemovedNodeWithCUE(mutations[i].removedNodes); // Unobserve and stop tracking removed elements\n          this.trackAddedNodeWithCUE(mutations[i].addedNodes); // Start tracking elements added elements\n\n          for (let j = 0; j < mutations[i].addedNodes.length; j++) {\n            try {\n              const element = mutations[i].addedNodes[j] as Element;\n\n              if (!element.hasAttribute) {\n                // node is not an element, do not continue processing it\n                continue;\n              }\n\n              const isImage = element.tagName === 'IMG';\n              const containsImages = !!element.querySelector('img');\n\n              imagesAdded = isImage || containsImages;\n              if (imagesAdded) {\n                break;\n              }\n            } catch (err) {\n              this.logger.log(\n                'warn',\n                'ContentAwareness: Failed to track non-element node',\n                mutations[i].addedNodes[j]\n              );\n            }\n          }\n          break;\n        }\n        case 'attributes': {\n          if (mutations[i].target.nodeType !== Node.ELEMENT_NODE) {\n            break;\n          }\n\n          try {\n            const element = mutations[i].target as Element;\n            const attr = mutations[i].attributeName as string;\n\n            if (attr === this.VIDEO_FRAME_STR) {\n              if (element.hasAttribute(attr)) {\n                this.trackVideoElement(element);\n                this.callMeasure = true;\n              } else if (this.videoFrame) {\n                this.untrackVideoElement(element);\n              }\n            } else if (attr === this.CONTENT_STR) {\n              const newValue = element.getAttribute(attr) as string;\n              const oldValue = mutations[i].oldValue as string;\n\n              if (oldValue) {\n                // data-sm-content attribute was changed and must be removed\n                this.resizeObserver.unobserve(this.contentCollection[oldValue]);\n                delete this.contentCollection[oldValue];\n              }\n\n              if (newValue) {\n                // data-sm-content attribute value was changed/added and now must be added to the list\n                this.contentCollection[newValue] = element;\n                this.resizeObserver.observe(element, {\n                  box: this.RESIZE_OBSERVER_BOX_OPTIONS,\n                });\n              }\n\n              this.callMeasure = true;\n            }\n\n            break;\n          } catch (err) {\n            this.logger.log(\n              'warn',\n              'ContentAwareness: Failed to track non-element node',\n              mutations[i].target\n            );\n          }\n        }\n      }\n    }\n\n    if (this.callMeasure) {\n      if (imagesAdded) {\n        // Wait for all images to be loaded then remeasure\n        allImagesLoaded().then(() => {\n          this.measureDebounced();\n        });\n      } else {\n        this.measureDebounced();\n      }\n    }\n  }\n\n  private trackAddedNodeWithCUE(mutations: NodeList): void {\n    mutations.forEach((node) => {\n      try {\n        const element = node as Element;\n\n        if (!element.hasAttribute) {\n          // node is not an element, do not continue processing it\n          return;\n        }\n\n        // check top level node for cue attributes\n        if (element.hasAttribute(this.VIDEO_FRAME_STR)) {\n          this.trackVideoElement(element);\n          this.callMeasure = true;\n        } else if (element.hasAttribute(this.CONTENT_STR)) {\n          this.callMeasure = this.trackContentElement(element);\n        }\n\n        // check child nodes for cue attributes\n        if (element.querySelector(this.CUE_ATTRIBUTES_BRACKETED) !== null) {\n          element\n            .querySelectorAll(this.CUE_ATTRIBUTES_BRACKETED)\n            .forEach((childElement) => {\n              if (childElement.hasAttribute(this.VIDEO_FRAME_STR)) {\n                this.trackVideoElement(childElement);\n                this.callMeasure = true;\n              } else if (childElement.hasAttribute(this.CONTENT_STR)) {\n                this.callMeasure = this.trackContentElement(childElement);\n              }\n            });\n        }\n      } catch (err) {\n        this.logger.log(\n          'warn',\n          'ContentAwareness: Failed to track non-element node',\n          node\n        );\n      }\n    });\n  }\n\n  private untrackRemovedNodeWithCUE(mutations: NodeList): void {\n    mutations.forEach((node) => {\n      try {\n        const element = node as Element;\n\n        if (!element.hasAttribute) {\n          // node is not an element, do not continue processing it\n          return;\n        }\n\n        if (element.hasAttribute(this.VIDEO_FRAME_STR)) {\n          this.untrackVideoElement(element);\n        } else if (element.hasAttribute(this.CONTENT_STR)) {\n          this.untrackContentElement(element);\n          this.callMeasure = true;\n        }\n\n        // check child nodes for cue attributes\n        if (element.querySelector(this.CUE_ATTRIBUTES_BRACKETED) !== null) {\n          element\n            .querySelectorAll(this.CUE_ATTRIBUTES_BRACKETED)\n            .forEach((childElement) => {\n              if (childElement.hasAttribute(this.VIDEO_FRAME_STR)) {\n                this.untrackVideoElement(childElement);\n              } else if (childElement.hasAttribute(this.CONTENT_STR)) {\n                this.untrackContentElement(childElement);\n                this.callMeasure = true;\n              }\n            });\n        }\n      } catch (err) {\n        this.logger.log(\n          'warn',\n          'ContentAwareness: Failed to track non-element node',\n          node\n        );\n      }\n    });\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api-metrics and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.2.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n//# sourceMappingURL=semver.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n    return true;\n}\nexport function getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n    var logger = getGlobal('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, args);\n}\n//# sourceMappingURL=ComponentLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel, } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, args);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a, _b;\n            if (logLevel === void 0) { logLevel = DiagLogLevel.INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            var oldLogger = getGlobal('diag');\n            var newLogger = createLogLevelDiagLogger(logLevel, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger) {\n                var stack = (_b = new Error().stack) !== null && _b !== void 0 ? _b : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return registerGlobal('diag', newLogger, self, true);\n        };\n        self.disable = function () {\n            unregisterGlobal(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexport { DiagAPI };\n//# sourceMappingURL=diag.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < DiagLogLevel.NONE) {\n        maxLevel = DiagLogLevel.NONE;\n    }\n    else if (maxLevel > DiagLogLevel.ALL) {\n        maxLevel = DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', DiagLogLevel.WARN),\n        info: _filterFunc('info', DiagLogLevel.INFO),\n        debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    // eslint-disable-next-line no-console\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        // eslint-disable-next-line no-console\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, args);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexport { DiagConsoleLogger };\n//# sourceMappingURL=consoleLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexport var defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexport { NoopContextManager };\n//# sourceMappingURL=NoopContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\nexport { ContextAPI };\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\nexport { NonRecordingSpan };\n//# sourceMappingURL=NonRecordingSpan.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan() {\n    return getSpan(ContextAPI.getInstance().active());\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n    return new NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar context = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NonRecordingSpan();\n        }\n        var parentFromContext = context && getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            isSpanContextValid(parentFromContext)) {\n            return new NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = setSpan(parentContext, span);\n        return context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexport { ProxyTracer };\n//# sourceMappingURL=ProxyTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version, options));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version, options);\n    };\n    return ProxyTracerProvider;\n}());\nexport { ProxyTracerProvider };\n//# sourceMappingURL=ProxyTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version, _options) {\n        return new NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\nexport { NoopTracerProvider };\n//# sourceMappingURL=NoopTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=tracestate-validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from './tracestate-validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceStateImpl = /** @class */ (function () {\n    function TraceStateImpl(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceStateImpl.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceStateImpl.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceStateImpl.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceStateImpl.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceStateImpl.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceStateImpl.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceStateImpl.prototype._clone = function () {\n        var traceState = new TraceStateImpl();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceStateImpl;\n}());\nexport { TraceStateImpl };\n//# sourceMappingURL=tracestate-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext, } from '../trace/spancontext-utils';\nimport { deleteSpan, getActiveSpan, getSpan, getSpanContext, setSpan, setSpanContext, } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider();\n        this.wrapSpanContext = wrapSpanContext;\n        this.isSpanContextValid = isSpanContextValid;\n        this.deleteSpan = deleteSpan;\n        this.getSpan = getSpan;\n        this.getActiveSpan = getActiveSpan;\n        this.getSpanContext = getSpanContext;\n        this.setSpan = setSpan;\n        this.setSpanContext = setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n        this._proxyTracerProvider = new ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexport { TraceAPI };\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexport { NoopTextMapPropagator };\n//# sourceMappingURL=NoopTextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter, } from '../propagation/TextMapPropagator';\nimport { getBaggage, setBaggage, deleteBaggage, } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = createBaggage;\n        this.getBaggage = getBaggage;\n        this.setBaggage = setBaggage;\n        this.deleteBaggage = deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexport { PropagationAPI };\n//# sourceMappingURL=propagation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport * from './common/Exception';\nexport * from './common/Time';\nexport * from './common/Attributes';\nexport * from './diag';\nexport * from './propagation/TextMapPropagator';\nexport * from './trace/attributes';\nexport * from './trace/link';\nexport * from './trace/ProxyTracer';\nexport * from './trace/ProxyTracerProvider';\nexport * from './trace/Sampler';\nexport * from './trace/SamplingResult';\nexport * from './trace/span_context';\nexport * from './trace/span_kind';\nexport * from './trace/span';\nexport * from './trace/SpanOptions';\nexport * from './trace/status';\nexport * from './trace/trace_flags';\nexport * from './trace/trace_state';\nexport { createTraceState } from './trace/internal/utils';\nexport * from './trace/tracer_provider';\nexport * from './trace/tracer';\nexport * from './trace/tracer_options';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId, } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, } from './trace/invalid-span-constants';\nexport * from './context/context';\nexport * from './context/types';\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\nexport default {\n    trace: trace,\n    context: context,\n    propagation: propagation,\n    diag: diag,\n};\n//# sourceMappingURL=index.js.map","import { MediaDeviceOptions, UserMedia } from '../types/scene';\n\nconst convertToUserMedia = (\n  options: MediaDeviceOptions | undefined,\n  fallbackValue: UserMedia = UserMedia.None\n) => {\n  if (!options) {\n    return fallbackValue;\n  }\n\n  if (options.camera && options.microphone) {\n    return UserMedia.MicrophoneAndCamera;\n  } else if (options.camera) {\n    return UserMedia.Camera;\n  } else if (options.microphone) {\n    return UserMedia.Microphone;\n  } else {\n    return UserMedia.None;\n  }\n};\n\nexport default convertToUserMedia;\n","/**\n * Replace \"wss://\" at the front of the URL with \"https://\".\n * @param uri the uri to convert\n * @returns the converted uri\n */\nexport function convertWssToHttps(uri: string) {\n  return uri.replace(/^wss:\\/\\//, 'https://');\n}\n\n/**\n * Removes the path and search parameters from the url.\n * @param url - The url to be sanitized.\n * @returns The sanitized url.\n */\nexport function getUrlHost(url: string): string | undefined {\n  try {\n    if (!url) {\n      return undefined;\n    }\n    const outUrl = new URL(url);\n    // remove path and query params\n    outUrl.pathname = '';\n    outUrl.search = '';\n    return outUrl.toString();\n  } catch (e) {\n    return undefined;\n  }\n}\n","/**\n * @public\n */\nexport enum ConversationStateTypes {\n  dpSpeaking = 'dpSpeaking',\n  userSpeaking = 'userSpeaking',\n  dpProcessing = 'dpProcessing',\n  idle = 'idle',\n}\n","/**\n * @module smwebsdk\n */\n\nimport { ConversationStateTypes } from './enums/ConversationStateTypes';\nimport { SmEvent } from './SmEvent';\nimport { SpeechState } from './websocket-message/enums/SpeechState';\nimport { RecognizeResultsResponseBody } from './websocket-message/scene';\nimport { StateResponseBody } from './websocket-message/scene/response-body/StateResponseBody';\nimport { Logger } from './utils/Logger';\n\n/**\n * Determines and stores Conversation State.\n *\n * @public\n */\nexport class ConversationState {\n  private _conversationState: ConversationStateTypes =\n    ConversationStateTypes.idle;\n  private _userActive = false;\n  private _onConversationStateUpdated: SmEvent;\n\n  constructor(private logger = new Logger()) {\n    this._onConversationStateUpdated = new SmEvent();\n  }\n  public processStateMessage(responseBody: StateResponseBody) {\n    if (\n      responseBody &&\n      responseBody.persona &&\n      Object.keys(responseBody.persona).length > 0\n    ) {\n      const dpId: string = Object.keys(responseBody.persona)[0];\n      if (!this._userActive && responseBody.persona[dpId].speechState) {\n        const messageSpeechState: SpeechState = responseBody.persona[dpId]\n          .speechState as SpeechState;\n        if (messageSpeechState === SpeechState.Idle) {\n          this.setSpeechState(ConversationStateTypes.idle);\n        } else if (messageSpeechState === SpeechState.Speaking) {\n          this.setSpeechState(ConversationStateTypes.dpSpeaking);\n        }\n      }\n    }\n  }\n\n  public processRecognizeResultsMessage(\n    responseBody: RecognizeResultsResponseBody\n  ) {\n    this._userActive = true;\n    const isErrorMessage = responseBody.status !== 0;\n    const isFinal =\n      responseBody.results &&\n      responseBody.results.some((result) => result.final);\n    if (isErrorMessage) {\n      const errorMessage =\n        typeof responseBody.errorMessage !== 'undefined'\n          ? responseBody.errorMessage\n          : 'recognizeResults sent back a message with non-zero status but no error message.';\n      this.logger.log('error', errorMessage);\n    } else if (isFinal) {\n      this.setSpeechState(ConversationStateTypes.dpProcessing);\n    } else {\n      this.setSpeechState(ConversationStateTypes.userSpeaking);\n    }\n    this._userActive = false;\n  }\n\n  private setSpeechState(speechState: ConversationStateTypes) {\n    if (this._conversationState !== speechState) {\n      this._conversationState = speechState;\n      this._onConversationStateUpdated.call(this._conversationState);\n    }\n  }\n\n  public getSpeechState(): ConversationStateTypes {\n    return this._conversationState;\n  }\n\n  public get onConversationStateUpdated(): SmEvent {\n    return this._onConversationStateUpdated;\n  }\n\n  public reset() {\n    this._userActive = false;\n    this._conversationState = ConversationStateTypes.idle;\n    this._onConversationStateUpdated.call(this._conversationState);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","import { ContentCard, ContentCardFormattedData } from './models/Conversation';\nimport { ConversationResultResponseBody } from './websocket-message/scene';\n\n/**\n * Formats content card data in a consistent structure\n *\n * @public\n */\nexport class ContentCardFormatter {\n  /**\n   * Format different NLP content cards into a consistent structure\n   */\n  format(body: ConversationResultResponseBody): ContentCardFormattedData[] {\n    const fullfillments =\n      body.provider.meta.dialogflow?.queryResult.fulfillmentMessages;\n\n    const data = fullfillments?.find((fullfillment) =>\n      Boolean(fullfillment?.payload)\n    );\n    if (data) {\n      return this.formatLegacyDialogflow(data);\n    }\n    return this.formatContextData(body.output.context);\n  }\n\n  private formatLegacyDialogflow(data: {\n    payload: { soulmachines: Record<string, ContentCard> };\n  }) {\n    const payload = data.payload.soulmachines;\n    return Object.keys(payload).map((id) => {\n      return {\n        id,\n        data: {\n          id,\n          ...this.formatCardData(payload[id]),\n        },\n      };\n    });\n  }\n\n  private formatContextData(data: Record<string, string | unknown>) {\n    return this.allowedIds(data).map((id) => {\n      const cardId = id.replace('public-', '');\n\n      return {\n        id: cardId,\n        data: {\n          id: cardId,\n          ...this.formatCardData(data[id]),\n        },\n      };\n    });\n  }\n\n  private allowedIds<T>(values: Record<string, T>) {\n    return Object.keys(values)\n      .filter((k) => /public-/.test(k) === true)\n      .filter((k: string) => /\\.original/gm.test(k) === false);\n  }\n\n  // Data should be JSON or a ContentCard, however, we can attempt to parse\n  // unknown values as JSON.\n  private formatCardData(data: ContentCard | string | unknown) {\n    const parsedData = typeof data === 'string' ? JSON.parse(data) : data;\n    const { component, type, ...rest } = parsedData;\n\n    return {\n      type: type ? type : component,\n      ...rest,\n    };\n  }\n}\n","import { ContentCardRawData } from './models/Conversation';\nimport { SmEvent } from './SmEvent';\nimport { Logger } from './utils/Logger';\nimport {\n  ConversationResultResponseBody,\n  RecognizeResultsResponseBody,\n  SpeechMarkerResponseBody,\n  StateResponseBody,\n} from './websocket-message/scene';\nimport { SpeechMarkerName } from './websocket-message/scene/response-body/SpeechMarker';\nimport { ConversationState } from './ConversationState';\nimport { ContentCardFormatter } from './ContentCardFormatter';\n\n/**\n * Stores content cards and conversation state\n *\n * @public\n */\nexport class Conversation {\n  public cardData: Map<string, ContentCardRawData>;\n  public activeCardIds: Set<string>;\n  private _onCardChanged: SmEvent = new SmEvent();\n  private _autoClearCards = false;\n\n  constructor(\n    private logger = new Logger(),\n    private conversationState = new ConversationState(),\n    private contentCardFormatter = new ContentCardFormatter()\n  ) {\n    this.cardData = new Map();\n    this.activeCardIds = new Set();\n  }\n\n  public processStateMessage(message: StateResponseBody) {\n    this.conversationState.processStateMessage(message);\n  }\n\n  public processRecognizeResultsMessage(message: RecognizeResultsResponseBody) {\n    this.conversationState.processRecognizeResultsMessage(message);\n  }\n\n  /**\n   * A callback function which fires when conversation state changes\n   */\n  public get onConversationStateUpdated() {\n    return this.conversationState.onConversationStateUpdated;\n  }\n\n  /**\n   * Automatically clear active content cards each conversation turn\n   */\n  public set autoClearCards(enabled: boolean) {\n    this._autoClearCards = enabled;\n  }\n\n  /**\n   * A callback function which fires when active cards are changed\n   */\n  public get onCardChanged(): SmEvent {\n    return this._onCardChanged;\n  }\n\n  get activeCards(): ContentCardRawData[] {\n    const activeCardInfo: ContentCardRawData[] = [];\n    this.activeCardIds.forEach((id) => {\n      const data = this.cardData.get(id);\n      if (data) {\n        activeCardInfo.push(data);\n      } else {\n        this.logger.log('error', `card data for ${id} does not exist`);\n      }\n    });\n\n    return activeCardInfo;\n  }\n\n  /**\n   * Handles speech marker messages and updates the active card state\n   */\n  public onSpeechMarker(messageBody: SpeechMarkerResponseBody): void {\n    const cardIds = messageBody.arguments;\n    if (messageBody.name === SpeechMarkerName.Showcards) {\n      this.addActiveCardIds(cardIds);\n    } else if (messageBody.name === SpeechMarkerName.Hidecards) {\n      this.removeActiveCards(cardIds);\n    }\n    if (\n      // Hide all cards when arg list is empty and hidecards message is received\n      cardIds.length === 0 &&\n      messageBody.name === SpeechMarkerName.Hidecards\n    ) {\n      this.clearActiveCards();\n    }\n  }\n\n  /**\n   * Stores content card data contained in conversation result messages\n   */\n  public onConversationResult(\n    messageBody: ConversationResultResponseBody\n  ): void {\n    const cards = this.contentCardFormatter.format(messageBody);\n\n    if (this._autoClearCards) {\n      this.clearActiveCards();\n    }\n\n    cards.map(({ id, data }) => {\n      this.cardData.set(id, data);\n    });\n  }\n\n  /**\n   * Clears active card ids and data. Emits a card changed event\n   */\n  public reset() {\n    this.clearActiveCards();\n    this.cardData.clear();\n    this.conversationState.reset();\n  }\n\n  /**\n   * Clears active card ids. Emits a card changed event\n   */\n  public clearActiveCards() {\n    this.activeCardIds.clear();\n    this.onCardChanged.call(this.activeCards);\n  }\n\n  private addActiveCardIds(cardIds: string[]) {\n    this.activeCardIds = new Set([...this.activeCardIds, ...cardIds]);\n    this.onCardChanged.call(this.activeCards);\n  }\n\n  private removeActiveCards(cardIds: string[]) {\n    cardIds.forEach((cardId) => this.activeCardIds.delete(cardId));\n    this.onCardChanged.call(this.activeCards);\n  }\n}\n","import { Scene } from './Scene';\nimport { NLPIntent } from './types/scene';\nimport { ConversationSendRequestBody } from './websocket-message/scene';\n\nexport class MetadataSender {\n  private _previousUrl = window.location.href;\n  private _observer: MutationObserver;\n\n  constructor(private scene: Scene) {\n    this._observer = new MutationObserver(() => this.observeDocumentChanges());\n  }\n\n  public observeUrlChanges() {\n    this._observer.observe(document, { subtree: true, childList: true });\n  }\n\n  public disconnect() {\n    this._observer.disconnect();\n  }\n\n  public send() {\n    const conversationVariables: ConversationSendRequestBody = {\n      personaId: this.scene.currentPersonaId,\n      text: NLPIntent.PAGE_METADATA,\n      variables: {\n        pageUrl: window.location.href.split('?')[0],\n      },\n      optionalArgs: {},\n    };\n\n    this.scene.sendRequest('conversationSend', conversationVariables);\n  }\n\n  private observeDocumentChanges() {\n    if (window.location.href !== this._previousUrl) {\n      // Update url to current one\n      this._previousUrl = window.location.href;\n      // Send event\n      this.send();\n    }\n  }\n}\n","/**\n * @module smwebsdk\n */\n\nimport {\n  ConnectionStateData,\n  ConnectionStateTypes,\n} from './enums/ConnectionStateTypes';\nimport { SmEvent } from './SmEvent';\n\nconst TOTAL_CONNECTION_STEPS = Object.keys(ConnectionStateTypes).length;\n\n/**\n * Determines and stores Connection State.\n *\n * @public\n */\nexport class ConnectionState {\n  private _connectionState: ConnectionStateData = {\n    name: ConnectionStateTypes.Disconnected,\n    totalSteps: TOTAL_CONNECTION_STEPS,\n    currentStep: 0,\n    percentageLoaded: 0,\n  };\n\n  private _onConnectionStateUpdated: SmEvent;\n\n  constructor() {\n    this._onConnectionStateUpdated = new SmEvent();\n  }\n\n  public setConnectionState(connectionStateType: ConnectionStateTypes) {\n    // Return if state has not changed\n    if (this._connectionState.name === connectionStateType) {\n      return;\n    }\n\n    const currentStep =\n      Object.keys(ConnectionStateTypes).indexOf(connectionStateType);\n\n    const data: ConnectionStateData = {\n      name: connectionStateType,\n      currentStep: currentStep,\n      totalSteps: TOTAL_CONNECTION_STEPS,\n      percentageLoaded: (100 / (TOTAL_CONNECTION_STEPS - 1)) * currentStep,\n    };\n\n    this._connectionState = data;\n    this._onConnectionStateUpdated.call(data);\n  }\n\n  public getConnectionState(): ConnectionStateData {\n    return this._connectionState;\n  }\n\n  public get onConnectionStateUpdated(): SmEvent {\n    return this._onConnectionStateUpdated;\n  }\n\n  public reset() {\n    this.setConnectionState(ConnectionStateTypes.Disconnected);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n    * Name of the cloud provider.\n    */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n    * The cloud account ID the resource is assigned to.\n    */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n    * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n    */\n    CLOUD_REGION: 'cloud.region',\n    /**\n    * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n    *\n    * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n    */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n    * The cloud platform in use.\n    *\n    * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n    */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n    * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n    */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n    * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n    */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n    * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n    */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n    * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n    */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n    * The task definition family this task definition is a member of.\n    */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n    * The revision for this task definition.\n    */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n    * The ARN of an EKS cluster.\n    */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n    * The name(s) of the AWS log group(s) an application is writing to.\n    *\n    * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n    */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n    * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n    *\n    * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n    */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n    * The name(s) of the AWS log stream(s) an application is writing to.\n    */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n    * The ARN(s) of the AWS log stream(s).\n    *\n    * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n    */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n    * Container name.\n    */\n    CONTAINER_NAME: 'container.name',\n    /**\n    * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n    */\n    CONTAINER_ID: 'container.id',\n    /**\n    * The container runtime managing this container.\n    */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n    * Name of the image the container was built on.\n    */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n    * Container image tag.\n    */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n    * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n    */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n    * A unique identifier representing the device.\n    *\n    * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n    */\n    DEVICE_ID: 'device.id',\n    /**\n    * The model identifier for the device.\n    *\n    * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n    */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n    * The marketing name for the device model.\n    *\n    * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n    */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n    * The name of the single function that this runtime instance executes.\n    *\n    * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n    */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n    * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n    *\n    * Note: * **AWS Lambda:** Use the (full) log stream name.\n    */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n    * The amount of memory available to the serverless function in MiB.\n    *\n    * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n    */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n    * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n    */\n    HOST_ID: 'host.id',\n    /**\n    * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n    */\n    HOST_NAME: 'host.name',\n    /**\n    * Type of host. For Cloud, this must be the machine type.\n    */\n    HOST_TYPE: 'host.type',\n    /**\n    * The CPU architecture the host system is running on.\n    */\n    HOST_ARCH: 'host.arch',\n    /**\n    * Name of the VM image or OS install the host was instantiated from.\n    */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n    * VM image ID. For Cloud, this value is from the provider.\n    */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n    * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n    */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n    * The name of the cluster.\n    */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n    * The name of the Node.\n    */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n    * The UID of the Node.\n    */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n    * The name of the namespace that the pod is running in.\n    */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n    * The UID of the Pod.\n    */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n    * The name of the Pod.\n    */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n    * The name of the Container in a Pod template.\n    */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n    * The UID of the ReplicaSet.\n    */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n    * The name of the ReplicaSet.\n    */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n    * The UID of the Deployment.\n    */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n    * The name of the Deployment.\n    */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n    * The UID of the StatefulSet.\n    */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n    * The name of the StatefulSet.\n    */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n    * The UID of the DaemonSet.\n    */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n    * The name of the DaemonSet.\n    */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n    * The UID of the Job.\n    */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n    * The name of the Job.\n    */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n    * The UID of the CronJob.\n    */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n    * The name of the CronJob.\n    */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n    * The operating system type.\n    */\n    OS_TYPE: 'os.type',\n    /**\n    * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n    */\n    OS_DESCRIPTION: 'os.description',\n    /**\n    * Human readable operating system name.\n    */\n    OS_NAME: 'os.name',\n    /**\n    * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n    */\n    OS_VERSION: 'os.version',\n    /**\n    * Process identifier (PID).\n    */\n    PROCESS_PID: 'process.pid',\n    /**\n    * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n    * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n    * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n    */\n    PROCESS_COMMAND: 'process.command',\n    /**\n    * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n    */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n    * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n    */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n    * The username of the user that owns the process.\n    */\n    PROCESS_OWNER: 'process.owner',\n    /**\n    * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n    */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n    * The version of the runtime of this process, as returned by the runtime without modification.\n    */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n    * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n    */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n    * Logical name of the service.\n    *\n    * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n    */\n    SERVICE_NAME: 'service.name',\n    /**\n    * A namespace for `service.name`.\n    *\n    * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n    */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n    * The string ID of the service instance.\n    *\n    * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n    */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n    * The version string of the service API or implementation.\n    */\n    SERVICE_VERSION: 'service.version',\n    /**\n    * The name of the telemetry SDK as defined above.\n    */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n    * The language of the telemetry SDK.\n    */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n    * The version string of the telemetry SDK.\n    */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n    * The version string of the auto instrumentation agent, if used.\n    */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n    * The name of the web engine.\n    */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n    * The version of the web engine.\n    */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n    * Additional description of the web engine (e.g. detailed version and edition information).\n    */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.8.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { defaultServiceName } from './platform';\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nvar Resource = /** @class */ (function () {\n    function Resource(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    Resource.empty = function () {\n        return Resource.EMPTY;\n    };\n    /**\n     * Returns a Resource that indentifies the SDK in use.\n     */\n    Resource.default = function () {\n        var _a;\n        return new Resource((_a = {},\n            _a[SemanticResourceAttributes.SERVICE_NAME] = defaultServiceName(),\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n            _a));\n    };\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    Resource.prototype.merge = function (other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // SpanAttributes from resource overwrite attributes from other resource.\n        var mergedAttributes = Object.assign({}, this.attributes, other.attributes);\n        return new Resource(mergedAttributes);\n    };\n    Resource.EMPTY = new Resource({});\n    return Resource;\n}());\nexport { Resource };\n//# sourceMappingURL=Resource.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function defaultServiceName() {\n    return 'unknown_service';\n}\n//# sourceMappingURL=default-service-name.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: 'otlp',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative'\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined' ?\n        parseEnvironment(process.env) :\n        parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false)))\n                    .then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, diag, TraceFlags } from '@opentelemetry/api';\nimport { BindOnceFuture, ExportResultCode, getEnv, globalErrorHandler, suppressTracing, unrefTimer } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nvar BatchSpanProcessorBase = /** @class */ (function () {\n    function BatchSpanProcessorBase(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        var env = getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n        this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n        if (this._maxExportBatchSize > this._maxQueueSize) {\n            diag.warn('BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize');\n            this._maxExportBatchSize = this._maxQueueSize;\n        }\n    }\n    BatchSpanProcessorBase.prototype.forceFlush = function () {\n        if (this._shutdownOnce.isCalled) {\n            return this._shutdownOnce.promise;\n        }\n        return this._flushAll();\n    };\n    // does nothing.\n    BatchSpanProcessorBase.prototype.onStart = function (_span, _parentContext) { };\n    BatchSpanProcessorBase.prototype.onEnd = function (span) {\n        if (this._shutdownOnce.isCalled) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        this._addToBuffer(span);\n    };\n    BatchSpanProcessorBase.prototype.shutdown = function () {\n        return this._shutdownOnce.call();\n    };\n    BatchSpanProcessorBase.prototype._shutdown = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.onShutdown();\n        })\n            .then(function () {\n            return _this._flushAll();\n        })\n            .then(function () {\n            return _this._exporter.shutdown();\n        });\n    };\n    /** Add a span in the buffer. */\n    BatchSpanProcessorBase.prototype._addToBuffer = function (span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            return;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    };\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    BatchSpanProcessorBase.prototype._flushAll = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = [];\n            // calculate number of batches\n            var count = Math.ceil(_this._finishedSpans.length / _this._maxExportBatchSize);\n            for (var i = 0, j = count; i < j; i++) {\n                promises.push(_this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(reject);\n        });\n    };\n    BatchSpanProcessorBase.prototype._flushOneBatch = function () {\n        var _this = this;\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var timer = setTimeout(function () {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, _this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            context.with(suppressTracing(context.active()), function () {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                _this._exporter.export(_this._finishedSpans.splice(0, _this._maxExportBatchSize), function (result) {\n                    var _a;\n                    clearTimeout(timer);\n                    if (result.code === ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    };\n    BatchSpanProcessorBase.prototype._maybeStartTimer = function () {\n        var _this = this;\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(function () {\n            _this._flushOneBatch()\n                .then(function () {\n                if (_this._finishedSpans.length > 0) {\n                    _this._clearTimer();\n                    _this._maybeStartTimer();\n                }\n            })\n                .catch(function (e) {\n                globalErrorHandler(e);\n            });\n        }, this._scheduledDelayMillis);\n        unrefTimer(this._timer);\n    };\n    BatchSpanProcessorBase.prototype._clearTimer = function () {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    };\n    return BatchSpanProcessorBase;\n}());\nexport { BatchSpanProcessorBase };\n//# sourceMappingURL=BatchSpanProcessorBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nvar BatchSpanProcessor = /** @class */ (function (_super) {\n    __extends(BatchSpanProcessor, _super);\n    function BatchSpanProcessor(_exporter, config) {\n        var _this = _super.call(this, _exporter, config) || this;\n        _this.onInit(config);\n        return _this;\n    }\n    BatchSpanProcessor.prototype.onInit = function (config) {\n        var _this = this;\n        if ((config === null || config === void 0 ? void 0 : config.disableAutoFlushOnDocumentHide) !== true && typeof document !== 'undefined') {\n            this._visibilityChangeListener = function () {\n                if (document.visibilityState === 'hidden') {\n                    void _this.forceFlush();\n                }\n            };\n            this._pageHideListener = function () {\n                void _this.forceFlush();\n            };\n            document.addEventListener('visibilitychange', this._visibilityChangeListener);\n            // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n            document.addEventListener('pagehide', this._pageHideListener);\n        }\n    };\n    BatchSpanProcessor.prototype.onShutdown = function () {\n        if (typeof document !== 'undefined') {\n            if (this._visibilityChangeListener) {\n                document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n            }\n            if (this._pageHideListener) {\n                document.removeEventListener('pagehide', this._pageHideListener);\n            }\n        }\n    };\n    return BatchSpanProcessor;\n}(BatchSpanProcessorBase));\nexport { BatchSpanProcessor };\n//# sourceMappingURL=BatchSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isPlainObject } from './lodash.merge';\nvar MAX_LEVEL = 20;\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = args.shift();\n    var objects = new WeakMap();\n    while (args.length > 0) {\n        result = mergeTwoObjects(result, args.shift(), 0, objects);\n    }\n    return result;\n}\nfunction takeValue(value) {\n    if (isArray(value)) {\n        return value.slice();\n    }\n    return value;\n}\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(one, two, level, objects) {\n    if (level === void 0) { level = 0; }\n    var result;\n    if (level > MAX_LEVEL) {\n        return undefined;\n    }\n    level++;\n    if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n        result = takeValue(two);\n    }\n    else if (isArray(one)) {\n        result = one.slice();\n        if (isArray(two)) {\n            for (var i = 0, j = two.length; i < j; i++) {\n                result.push(takeValue(two[i]));\n            }\n        }\n        else if (isObject(two)) {\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                result[key] = takeValue(two[key]);\n            }\n        }\n    }\n    else if (isObject(one)) {\n        if (isObject(two)) {\n            if (!shouldMerge(one, two)) {\n                return two;\n            }\n            result = Object.assign({}, one);\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                var twoValue = two[key];\n                if (isPrimitive(twoValue)) {\n                    if (typeof twoValue === 'undefined') {\n                        delete result[key];\n                    }\n                    else {\n                        // result[key] = takeValue(twoValue);\n                        result[key] = twoValue;\n                    }\n                }\n                else {\n                    var obj1 = result[key];\n                    var obj2 = twoValue;\n                    if (wasObjectReferenced(one, key, objects) ||\n                        wasObjectReferenced(two, key, objects)) {\n                        delete result[key];\n                    }\n                    else {\n                        if (isObject(obj1) && isObject(obj2)) {\n                            var arr1 = objects.get(obj1) || [];\n                            var arr2 = objects.get(obj2) || [];\n                            arr1.push({ obj: one, key: key });\n                            arr2.push({ obj: two, key: key });\n                            objects.set(obj1, arr1);\n                            objects.set(obj2, arr2);\n                        }\n                        result[key] = mergeTwoObjects(result[key], twoValue, level, objects);\n                    }\n                }\n            }\n        }\n        else {\n            result = two;\n        }\n    }\n    return result;\n}\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(obj, key, objects) {\n    var arr = objects.get(obj[key]) || [];\n    for (var i = 0, j = arr.length; i < j; i++) {\n        var info = arr[i];\n        if (info.key === key && info.obj === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isObject(value) {\n    return !isPrimitive(value) && !isArray(value) && !isFunction(value) && typeof value === 'object';\n}\nfunction isPrimitive(value) {\n    return typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        typeof value === 'undefined' ||\n        value instanceof Date ||\n        value instanceof RegExp ||\n        value === null;\n}\nfunction shouldMerge(one, two) {\n    if (!isPlainObject(one) || !isPlainObject(two)) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nexport function sanitizeAttributes(attributes) {\n    var e_1, _a;\n    var out = {};\n    if (typeof attributes !== 'object' || attributes == null) {\n        return out;\n    }\n    try {\n        for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), key = _d[0], val = _d[1];\n            if (!isAttributeKey(key)) {\n                diag.warn(\"Invalid attribute key: \" + key);\n                continue;\n            }\n            if (!isAttributeValue(val)) {\n                diag.warn(\"Invalid attribute value set for key: \" + key);\n                continue;\n            }\n            if (Array.isArray(val)) {\n                out[key] = val.slice();\n            }\n            else {\n                out[key] = val;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return out;\n}\nexport function isAttributeKey(key) {\n    return typeof key === 'string' && key.length > 0;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    var e_2, _a;\n    var type;\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var element = arr_1_1.value;\n            // null/undefined elements are allowed\n            if (element == null)\n                continue;\n            if (!type) {\n                if (isValidPrimitiveAttributeValue(element)) {\n                    type = typeof element;\n                    continue;\n                }\n                // encountered an invalid primitive\n                return false;\n            }\n            if (typeof element === type) {\n                continue;\n            }\n            return false;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n        case 'boolean':\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = numberToHrtime(getTimeOrigin());\n    var now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    var seconds = timeOrigin[0] + now[0];\n    var nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticAttributes = {\n    /**\n    * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n    *\n    * Note: This may be different from `faas.id` if an alias is involved.\n    */\n    AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n    /**\n    * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n    */\n    DB_SYSTEM: 'db.system',\n    /**\n    * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n    */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n    * Username for accessing the database.\n    */\n    DB_USER: 'db.user',\n    /**\n    * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n    */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n    * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n    *\n    * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n    */\n    DB_NAME: 'db.name',\n    /**\n    * The database statement being executed.\n    *\n    * Note: The value may be sanitized to exclude sensitive information.\n    */\n    DB_STATEMENT: 'db.statement',\n    /**\n    * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n    *\n    * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n    */\n    DB_OPERATION: 'db.operation',\n    /**\n    * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n    *\n    * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n    */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n    * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n    */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n    * The fetch size used for paging, i.e. how many rows will be returned at once.\n    */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n    * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n    */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n    * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n    *\n    * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n    */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n    * Whether or not the query is idempotent.\n    */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n    * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n    */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n    * The ID of the coordinating node for a query.\n    */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n    * The data center of the coordinating node for a query.\n    */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n    * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n    */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n    * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n    */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n    * The collection being accessed within the database stated in `db.name`.\n    */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n    * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n    *\n    * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n    */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n    * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n    */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n    * The exception message.\n    */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n    * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n    */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n    * Type of the trigger on which the function is executed.\n    */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n    * The execution ID of the current function execution.\n    */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n    * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n    */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n    * Describes the type of the operation that was performed on the data.\n    */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n    * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n    */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n    * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n    */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n    * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n    */\n    FAAS_TIME: 'faas.time',\n    /**\n    * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n    */\n    FAAS_CRON: 'faas.cron',\n    /**\n    * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n    */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n    * The name of the invoked function.\n    *\n    * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n    */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n    * The cloud provider of the invoked function.\n    *\n    * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n    */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n    * The cloud region of the invoked function.\n    *\n    * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n    */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n    * Transport protocol used. See note below.\n    */\n    NET_TRANSPORT: 'net.transport',\n    /**\n    * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n    */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n    * Remote port number.\n    */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n    * Remote hostname or similar, see note below.\n    */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n    * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n    */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n    * Like `net.peer.port` but for the host port.\n    */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n    * Local hostname or similar, see note below.\n    */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n    * The internet connection type currently being used by the host.\n    */\n    NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n    /**\n    * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n    */\n    NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n    /**\n    * The name of the mobile carrier.\n    */\n    NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n    /**\n    * The mobile carrier country code.\n    */\n    NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n    /**\n    * The mobile carrier network code.\n    */\n    NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n    /**\n    * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n    */\n    NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n    /**\n    * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n    */\n    PEER_SERVICE: 'peer.service',\n    /**\n    * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n    */\n    ENDUSER_ID: 'enduser.id',\n    /**\n    * Actual/assumed role the client is making the request under extracted from token or application security context.\n    */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n    * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n    */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n    * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n    */\n    THREAD_ID: 'thread.id',\n    /**\n    * Current thread name.\n    */\n    THREAD_NAME: 'thread.name',\n    /**\n    * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n    */\n    CODE_FUNCTION: 'code.function',\n    /**\n    * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n    */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n    * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n    */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n    * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n    */\n    CODE_LINENO: 'code.lineno',\n    /**\n    * HTTP request method.\n    */\n    HTTP_METHOD: 'http.method',\n    /**\n    * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n    *\n    * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n    */\n    HTTP_URL: 'http.url',\n    /**\n    * The full request target as passed in a HTTP request line or equivalent.\n    */\n    HTTP_TARGET: 'http.target',\n    /**\n    * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n    *\n    * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n    */\n    HTTP_HOST: 'http.host',\n    /**\n    * The URI scheme identifying the used protocol.\n    */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n    * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n    */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n    * Kind of HTTP protocol used.\n    *\n    * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n    */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n    * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n    */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n    * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n    */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n    * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n    */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n    * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n    */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n    * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n    */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n    * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n    *\n    * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n    */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n    * The matched route (path template).\n    */\n    HTTP_ROUTE: 'http.route',\n    /**\n    * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n    *\n    * Note: This is not necessarily the same as `net.peer.ip`, which would\n  identify the network-level peer, which may be a proxy.\n  \n  This attribute should be set when a source of information different\n  from the one used for `net.peer.ip`, is available even if that other\n  source just confirms the same value as `net.peer.ip`.\n  Rationale: For `net.peer.ip`, one typically does not know if it\n  comes from a proxy, reverse proxy, or the actual client. Setting\n  `http.client_ip` when it&#39;s the same as `net.peer.ip` means that\n  one is at least somewhat confident that the address is not that of\n  the closest proxy.\n    */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n    * The keys in the `RequestItems` object field.\n    */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n    * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n    */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n    * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n    */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n    * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n    */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n    * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n    */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n    * The value of the `ConsistentRead` request parameter.\n    */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n    * The value of the `ProjectionExpression` request parameter.\n    */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n    * The value of the `Limit` request parameter.\n    */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n    * The value of the `AttributesToGet` request parameter.\n    */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n    * The value of the `IndexName` request parameter.\n    */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n    * The value of the `Select` request parameter.\n    */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n    * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n    */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n    * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n    */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n    * The value of the `ExclusiveStartTableName` request parameter.\n    */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n    * The the number of items in the `TableNames` response parameter.\n    */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n    * The value of the `ScanIndexForward` request parameter.\n    */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n    * The value of the `Segment` request parameter.\n    */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n    * The value of the `TotalSegments` request parameter.\n    */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n    * The value of the `Count` response parameter.\n    */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n    * The value of the `ScannedCount` response parameter.\n    */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n    * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n    */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n    * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n    */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n    * A string identifying the messaging system.\n    */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n    * The message destination name. This might be equal to the span name but is required nevertheless.\n    */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n    * The kind of message destination.\n    */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n    * A boolean that is true if the message destination is temporary.\n    */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n    * The name of the transport protocol.\n    */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n    * The version of the transport protocol.\n    */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n    * Connection string.\n    */\n    MESSAGING_URL: 'messaging.url',\n    /**\n    * A value used by the messaging system as an identifier for the message, represented as a string.\n    */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n    * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n    */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n    * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n    */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n    * The compressed size of the message payload in bytes.\n    */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n    * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n    */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n    * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n    */\n    MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n    /**\n    * RabbitMQ message routing key.\n    */\n    MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n    /**\n    * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n    *\n    * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n    */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n    * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n    */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n    * Client Id for the Consumer or Producer that is handling the message.\n    */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n    * Partition the message is sent to.\n    */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n    * A boolean that is true if the message is a tombstone.\n    */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n    * A string identifying the remoting system.\n    */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n    * The full (logical) name of the service being called, including its package name, if applicable.\n    *\n    * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n    */\n    RPC_SERVICE: 'rpc.service',\n    /**\n    * The name of the (logical) method being called, must be equal to the $method part in the span name.\n    *\n    * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n    */\n    RPC_METHOD: 'rpc.method',\n    /**\n    * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n    */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n    /**\n    * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n    */\n    RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n    /**\n    * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n    */\n    RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n    /**\n    * `error.code` property of response if it is an error response.\n    */\n    RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n    /**\n    * `error.message` property of response if it is an error response.\n    */\n    RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n    /**\n    * Whether this is a received or sent message.\n    */\n    MESSAGE_TYPE: 'message.type',\n    /**\n    * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n    *\n    * Note: This way we guarantee that the values will be consistent between different implementations.\n    */\n    MESSAGE_ID: 'message.id',\n    /**\n    * Compressed size of the message in bytes.\n    */\n    MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n    /**\n    * Uncompressed size of the message in bytes.\n    */\n    MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\nexport var DbSystemValues = {\n    /** Some other SQL database. Fallback only. See notes. */\n    OTHER_SQL: 'other_sql',\n    /** Microsoft SQL Server. */\n    MSSQL: 'mssql',\n    /** MySQL. */\n    MYSQL: 'mysql',\n    /** Oracle Database. */\n    ORACLE: 'oracle',\n    /** IBM Db2. */\n    DB2: 'db2',\n    /** PostgreSQL. */\n    POSTGRESQL: 'postgresql',\n    /** Amazon Redshift. */\n    REDSHIFT: 'redshift',\n    /** Apache Hive. */\n    HIVE: 'hive',\n    /** Cloudscape. */\n    CLOUDSCAPE: 'cloudscape',\n    /** HyperSQL DataBase. */\n    HSQLDB: 'hsqldb',\n    /** Progress Database. */\n    PROGRESS: 'progress',\n    /** SAP MaxDB. */\n    MAXDB: 'maxdb',\n    /** SAP HANA. */\n    HANADB: 'hanadb',\n    /** Ingres. */\n    INGRES: 'ingres',\n    /** FirstSQL. */\n    FIRSTSQL: 'firstsql',\n    /** EnterpriseDB. */\n    EDB: 'edb',\n    /** InterSystems Caché. */\n    CACHE: 'cache',\n    /** Adabas (Adaptable Database System). */\n    ADABAS: 'adabas',\n    /** Firebird. */\n    FIREBIRD: 'firebird',\n    /** Apache Derby. */\n    DERBY: 'derby',\n    /** FileMaker. */\n    FILEMAKER: 'filemaker',\n    /** Informix. */\n    INFORMIX: 'informix',\n    /** InstantDB. */\n    INSTANTDB: 'instantdb',\n    /** InterBase. */\n    INTERBASE: 'interbase',\n    /** MariaDB. */\n    MARIADB: 'mariadb',\n    /** Netezza. */\n    NETEZZA: 'netezza',\n    /** Pervasive PSQL. */\n    PERVASIVE: 'pervasive',\n    /** PointBase. */\n    POINTBASE: 'pointbase',\n    /** SQLite. */\n    SQLITE: 'sqlite',\n    /** Sybase. */\n    SYBASE: 'sybase',\n    /** Teradata. */\n    TERADATA: 'teradata',\n    /** Vertica. */\n    VERTICA: 'vertica',\n    /** H2. */\n    H2: 'h2',\n    /** ColdFusion IMQ. */\n    COLDFUSION: 'coldfusion',\n    /** Apache Cassandra. */\n    CASSANDRA: 'cassandra',\n    /** Apache HBase. */\n    HBASE: 'hbase',\n    /** MongoDB. */\n    MONGODB: 'mongodb',\n    /** Redis. */\n    REDIS: 'redis',\n    /** Couchbase. */\n    COUCHBASE: 'couchbase',\n    /** CouchDB. */\n    COUCHDB: 'couchdb',\n    /** Microsoft Azure Cosmos DB. */\n    COSMOSDB: 'cosmosdb',\n    /** Amazon DynamoDB. */\n    DYNAMODB: 'dynamodb',\n    /** Neo4j. */\n    NEO4J: 'neo4j',\n    /** Apache Geode. */\n    GEODE: 'geode',\n    /** Elasticsearch. */\n    ELASTICSEARCH: 'elasticsearch',\n    /** Memcached. */\n    MEMCACHED: 'memcached',\n    /** CockroachDB. */\n    COCKROACHDB: 'cockroachdb',\n};\nexport var DbCassandraConsistencyLevelValues = {\n    /** all. */\n    ALL: 'all',\n    /** each_quorum. */\n    EACH_QUORUM: 'each_quorum',\n    /** quorum. */\n    QUORUM: 'quorum',\n    /** local_quorum. */\n    LOCAL_QUORUM: 'local_quorum',\n    /** one. */\n    ONE: 'one',\n    /** two. */\n    TWO: 'two',\n    /** three. */\n    THREE: 'three',\n    /** local_one. */\n    LOCAL_ONE: 'local_one',\n    /** any. */\n    ANY: 'any',\n    /** serial. */\n    SERIAL: 'serial',\n    /** local_serial. */\n    LOCAL_SERIAL: 'local_serial',\n};\nexport var FaasTriggerValues = {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    DATASOURCE: 'datasource',\n    /** To provide an answer to an inbound HTTP request. */\n    HTTP: 'http',\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    PUBSUB: 'pubsub',\n    /** A function is scheduled to be executed regularly. */\n    TIMER: 'timer',\n    /** If none of the others apply. */\n    OTHER: 'other',\n};\nexport var FaasDocumentOperationValues = {\n    /** When a new object is created. */\n    INSERT: 'insert',\n    /** When an object is modified. */\n    EDIT: 'edit',\n    /** When an object is deleted. */\n    DELETE: 'delete',\n};\nexport var FaasInvokedProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var NetTransportValues = {\n    /** ip_tcp. */\n    IP_TCP: 'ip_tcp',\n    /** ip_udp. */\n    IP_UDP: 'ip_udp',\n    /** Another IP-based protocol. */\n    IP: 'ip',\n    /** Unix Domain socket. See below. */\n    UNIX: 'unix',\n    /** Named or anonymous pipe. See note below. */\n    PIPE: 'pipe',\n    /** In-process communication. */\n    INPROC: 'inproc',\n    /** Something else (non IP-based). */\n    OTHER: 'other',\n};\nexport var NetHostConnectionTypeValues = {\n    /** wifi. */\n    WIFI: 'wifi',\n    /** wired. */\n    WIRED: 'wired',\n    /** cell. */\n    CELL: 'cell',\n    /** unavailable. */\n    UNAVAILABLE: 'unavailable',\n    /** unknown. */\n    UNKNOWN: 'unknown',\n};\nexport var NetHostConnectionSubtypeValues = {\n    /** GPRS. */\n    GPRS: 'gprs',\n    /** EDGE. */\n    EDGE: 'edge',\n    /** UMTS. */\n    UMTS: 'umts',\n    /** CDMA. */\n    CDMA: 'cdma',\n    /** EVDO Rel. 0. */\n    EVDO_0: 'evdo_0',\n    /** EVDO Rev. A. */\n    EVDO_A: 'evdo_a',\n    /** CDMA2000 1XRTT. */\n    CDMA2000_1XRTT: 'cdma2000_1xrtt',\n    /** HSDPA. */\n    HSDPA: 'hsdpa',\n    /** HSUPA. */\n    HSUPA: 'hsupa',\n    /** HSPA. */\n    HSPA: 'hspa',\n    /** IDEN. */\n    IDEN: 'iden',\n    /** EVDO Rev. B. */\n    EVDO_B: 'evdo_b',\n    /** LTE. */\n    LTE: 'lte',\n    /** EHRPD. */\n    EHRPD: 'ehrpd',\n    /** HSPAP. */\n    HSPAP: 'hspap',\n    /** GSM. */\n    GSM: 'gsm',\n    /** TD-SCDMA. */\n    TD_SCDMA: 'td_scdma',\n    /** IWLAN. */\n    IWLAN: 'iwlan',\n    /** 5G NR (New Radio). */\n    NR: 'nr',\n    /** 5G NRNSA (New Radio Non-Standalone). */\n    NRNSA: 'nrnsa',\n    /** LTE CA. */\n    LTE_CA: 'lte_ca',\n};\nexport var HttpFlavorValues = {\n    /** HTTP 1.0. */\n    HTTP_1_0: '1.0',\n    /** HTTP 1.1. */\n    HTTP_1_1: '1.1',\n    /** HTTP 2. */\n    HTTP_2_0: '2.0',\n    /** SPDY protocol. */\n    SPDY: 'SPDY',\n    /** QUIC protocol. */\n    QUIC: 'QUIC',\n};\nexport var MessagingDestinationKindValues = {\n    /** A message sent to a queue. */\n    QUEUE: 'queue',\n    /** A message sent to a topic. */\n    TOPIC: 'topic',\n};\nexport var MessagingOperationValues = {\n    /** receive. */\n    RECEIVE: 'receive',\n    /** process. */\n    PROCESS: 'process',\n};\nexport var RpcGrpcStatusCodeValues = {\n    /** OK. */\n    OK: 0,\n    /** CANCELLED. */\n    CANCELLED: 1,\n    /** UNKNOWN. */\n    UNKNOWN: 2,\n    /** INVALID_ARGUMENT. */\n    INVALID_ARGUMENT: 3,\n    /** DEADLINE_EXCEEDED. */\n    DEADLINE_EXCEEDED: 4,\n    /** NOT_FOUND. */\n    NOT_FOUND: 5,\n    /** ALREADY_EXISTS. */\n    ALREADY_EXISTS: 6,\n    /** PERMISSION_DENIED. */\n    PERMISSION_DENIED: 7,\n    /** RESOURCE_EXHAUSTED. */\n    RESOURCE_EXHAUSTED: 8,\n    /** FAILED_PRECONDITION. */\n    FAILED_PRECONDITION: 9,\n    /** ABORTED. */\n    ABORTED: 10,\n    /** OUT_OF_RANGE. */\n    OUT_OF_RANGE: 11,\n    /** UNIMPLEMENTED. */\n    UNIMPLEMENTED: 12,\n    /** INTERNAL. */\n    INTERNAL: 13,\n    /** UNAVAILABLE. */\n    UNAVAILABLE: 14,\n    /** DATA_LOSS. */\n    DATA_LOSS: 15,\n    /** UNAUTHENTICATED. */\n    UNAUTHENTICATED: 16,\n};\nexport var MessageTypeValues = {\n    /** sent. */\n    SENT: 'SENT',\n    /** received. */\n    RECEIVED: 'RECEIVED',\n};\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=Sampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport * as api from '@opentelemetry/api';\nimport { hrTimeDuration, isAttributeValue, isTimeInput, otperformance, sanitizeAttributes, timeInputToHrTime } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\n/**\n * This class represents a span.\n */\nvar Span = /** @class */ (function () {\n    /**\n     * Constructs a new Span instance.\n     *\n     * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n     * */\n    function Span(parentTracer, context, spanName, spanContext, kind, parentSpanId, links, startTime, clock) {\n        if (links === void 0) { links = []; }\n        if (clock === void 0) { clock = otperformance; }\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: api.SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this._clock = clock;\n        this.name = spanName;\n        this._spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        this.startTime = timeInputToHrTime(startTime !== null && startTime !== void 0 ? startTime : clock.now());\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._spanLimits = parentTracer.getSpanLimits();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n        this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n    }\n    Span.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    Span.prototype.setAttribute = function (key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            api.diag.warn(\"Invalid attribute key: \" + key);\n            return this;\n        }\n        if (!isAttributeValue(value)) {\n            api.diag.warn(\"Invalid attribute value set for key: \" + key);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._spanLimits.attributeCountLimit &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = this._truncateToSize(value);\n        return this;\n    };\n    Span.prototype.setAttributes = function (attributes) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n                this.setAttribute(k, v);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [startTime] Specified start time for the event\n     */\n    Span.prototype.addEvent = function (name, attributesOrStartTime, startTime) {\n        if (this._isSpanEnded())\n            return this;\n        if (this._spanLimits.eventCountLimit === 0) {\n            api.diag.warn('No events allowed.');\n            return this;\n        }\n        if (this.events.length >= this._spanLimits.eventCountLimit) {\n            api.diag.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (isTimeInput(attributesOrStartTime)) {\n            if (typeof startTime === 'undefined') {\n                startTime = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        if (typeof startTime === 'undefined') {\n            startTime = this._clock.now();\n        }\n        var attributes = sanitizeAttributes(attributesOrStartTime);\n        this.events.push({\n            name: name,\n            attributes: attributes,\n            time: timeInputToHrTime(startTime),\n        });\n        return this;\n    };\n    Span.prototype.setStatus = function (status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    };\n    Span.prototype.updateName = function (name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    };\n    Span.prototype.end = function (endTime) {\n        if (this._isSpanEnded()) {\n            api.diag.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = timeInputToHrTime(endTime !== null && endTime !== void 0 ? endTime : this._clock.now());\n        this._duration = hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            api.diag.warn('Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.', this.startTime, this.endTime);\n            this.endTime = this.startTime.slice();\n            this._duration = [0, 0];\n        }\n        this._spanProcessor.onEnd(this);\n    };\n    Span.prototype.isRecording = function () {\n        return this._ended === false;\n    };\n    Span.prototype.recordException = function (exception, time) {\n        if (time === void 0) { time = this._clock.now(); }\n        var attributes = {};\n        if (typeof exception === 'string') {\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE]) {\n            this.addEvent(ExceptionEventName, attributes, time);\n        }\n        else {\n            api.diag.warn(\"Failed to record an exception \" + exception);\n        }\n    };\n    Object.defineProperty(Span.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"ended\", {\n        get: function () {\n            return this._ended;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Span.prototype._isSpanEnded = function () {\n        if (this._ended) {\n            api.diag.warn(\"Can not execute the operation on ended Span {traceId: \" + this._spanContext.traceId + \", spanId: \" + this._spanContext.spanId + \"}\");\n        }\n        return this._ended;\n    };\n    // Utility function to truncate given value within size\n    // for value type of string, will truncate to given limit\n    // for type of non-string, will return same value\n    Span.prototype._truncateToLimitUtil = function (value, limit) {\n        if (value.length <= limit) {\n            return value;\n        }\n        return value.substr(0, limit);\n    };\n    /**\n     * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n     * return string with trucated to {@code attributeValueLengthLimit} characters\n     *\n     * If the given attribute value is array of strings then\n     * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n     *\n     * Otherwise return same Attribute {@code value}\n     *\n     * @param value Attribute value\n     * @returns truncated attribute value if required, otherwise same value\n     */\n    Span.prototype._truncateToSize = function (value) {\n        var _this = this;\n        var limit = this._attributeValueLengthLimit;\n        // Check limit\n        if (limit <= 0) {\n            // Negative values are invalid, so do not truncate\n            api.diag.warn(\"Attribute value limit must be positive, got \" + limit);\n            return value;\n        }\n        // String\n        if (typeof value === 'string') {\n            return this._truncateToLimitUtil(value, limit);\n        }\n        // Array of strings\n        if (Array.isArray(value)) {\n            return value.map(function (val) { return typeof val === 'string' ? _this._truncateToLimitUtil(val, limit) : val; });\n        }\n        // Other types, no need to apply value length limit\n        return value;\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=Span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Event name definitions\nexport var ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples no traces. */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples all traces. */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues, } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nvar env = getEnv();\nvar FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nvar DEFAULT_RATIO = 1;\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n    return {\n        sampler: buildSamplerFromEnv(env),\n        forceFlushTimeoutMillis: 30000,\n        generalLimits: {\n            attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n            attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n        },\n        spanLimits: {\n            attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n            attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n            linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n            eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n        },\n    };\n}\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(environment) {\n    if (environment === void 0) { environment = getEnv(); }\n    switch (environment.OTEL_TRACES_SAMPLER) {\n        case TracesSamplerValues.AlwaysOn:\n            return new AlwaysOnSampler();\n        case TracesSamplerValues.AlwaysOff:\n            return new AlwaysOffSampler();\n        case TracesSamplerValues.ParentBasedAlwaysOn:\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n        case TracesSamplerValues.ParentBasedAlwaysOff:\n            return new ParentBasedSampler({\n                root: new AlwaysOffSampler(),\n            });\n        case TracesSamplerValues.TraceIdRatio:\n            return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n        case TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new ParentBasedSampler({\n                root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n            });\n        default:\n            diag.error(\"OTEL_TRACES_SAMPLER value \\\"\" + environment.OTEL_TRACES_SAMPLER + \" invalid, defaulting to \" + FALLBACK_OTEL_TRACES_SAMPLER + \"\\\".\");\n            return new AlwaysOnSampler();\n    }\n}\nfunction getSamplerProbabilityFromEnv(environment) {\n    if (environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        environment.OTEL_TRACES_SAMPLER_ARG === '') {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG is blank, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    var probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is invalid, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is out of range ([0..1]), defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { DEFAULT_ATTRIBUTE_COUNT_LIMIT, DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, getEnvWithoutDefaults, } from '@opentelemetry/core';\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig) {\n    var perInstanceDefaults = {\n        sampler: buildSamplerFromEnv(),\n    };\n    var DEFAULT_CONFIG = loadDefaultConfig();\n    var target = Object.assign({}, DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.generalLimits = Object.assign({}, DEFAULT_CONFIG.generalLimits, userConfig.generalLimits || {});\n    target.spanLimits = Object.assign({}, DEFAULT_CONFIG.spanLimits, userConfig.spanLimits || {});\n    return target;\n}\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var spanLimits = Object.assign({}, userConfig.spanLimits);\n    var parsedEnvConfig = getEnvWithoutDefaults();\n    /**\n     * Reassign span attribute count limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeCountLimit =\n        (_f = (_e = (_d = (_b = (_a = userConfig.spanLimits) === null || _a === void 0 ? void 0 : _a.attributeCountLimit) !== null && _b !== void 0 ? _b : (_c = userConfig.generalLimits) === null || _c === void 0 ? void 0 : _c.attributeCountLimit) !== null && _d !== void 0 ? _d : parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT) !== null && _e !== void 0 ? _e : parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT) !== null && _f !== void 0 ? _f : DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n    /**\n     * Reassign span attribute value length limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeValueLengthLimit =\n        (_m = (_l = (_k = (_h = (_g = userConfig.spanLimits) === null || _g === void 0 ? void 0 : _g.attributeValueLengthLimit) !== null && _h !== void 0 ? _h : (_j = userConfig.generalLimits) === null || _j === void 0 ? void 0 : _j.attributeValueLengthLimit) !== null && _k !== void 0 ? _k : parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && _l !== void 0 ? _l : parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && _m !== void 0 ? _m : DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n    return Object.assign({}, userConfig, { spanLimits: spanLimits });\n}\n//# sourceMappingURL=utility.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { sanitizeAttributes, isTracingSuppressed, } from '@opentelemetry/core';\nimport { Span } from './Span';\nimport { mergeConfig } from './utility';\nimport { RandomIdGenerator } from './platform';\n/**\n * This class represents a basic tracer.\n */\nvar Tracer = /** @class */ (function () {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    function Tracer(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        var localConfig = mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._generalLimits = localConfig.generalLimits;\n        this._spanLimits = localConfig.spanLimits;\n        this._idGenerator = config.idGenerator || new RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    Tracer.prototype.startSpan = function (name, options, context) {\n        var _a, _b;\n        if (options === void 0) { options = {}; }\n        if (context === void 0) { context = api.context.active(); }\n        // remove span from context in case a root span is requested via options\n        if (options.root) {\n            context = api.trace.deleteSpan(context);\n        }\n        var parentSpan = api.trace.getSpan(context);\n        if (isTracingSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            var nonRecordingSpan = api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n            return nonRecordingSpan;\n        }\n        var parentSpanContext = parentSpan === null || parentSpan === void 0 ? void 0 : parentSpan.spanContext();\n        var spanId = this._idGenerator.generateSpanId();\n        var traceId;\n        var traceState;\n        var parentSpanId;\n        if (!parentSpanContext || !api.trace.isSpanContextValid(parentSpanContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentSpanContext.traceId;\n            traceState = parentSpanContext.traceState;\n            parentSpanId = parentSpanContext.spanId;\n        }\n        var spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        var links = ((_b = options.links) !== null && _b !== void 0 ? _b : []).map(function (link) {\n            return {\n                context: link.context,\n                attributes: sanitizeAttributes(link.attributes),\n            };\n        });\n        var attributes = sanitizeAttributes(options.attributes);\n        // make sampling decision\n        var samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        var traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        var spanContext = { traceId: traceId, spanId: spanId, traceFlags: traceFlags, traceState: traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, propagating context in a non-recording span');\n            var nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n            return nonRecordingSpan;\n        }\n        var span = new Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n        // Set initial span attributes. The attributes object may have been mutated\n        // by the sampler, so we sanitize the merged attributes before setting them.\n        var initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n        span.setAttributes(initAttributes);\n        return span;\n    };\n    Tracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : api.context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = api.trace.setSpan(parentContext, span);\n        return api.context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    /** Returns the active {@link GeneralLimits}. */\n    Tracer.prototype.getGeneralLimits = function () {\n        return this._generalLimits;\n    };\n    /** Returns the active {@link SpanLimits}. */\n    Tracer.prototype.getSpanLimits = function () {\n        return this._spanLimits;\n    };\n    Tracer.prototype.getActiveSpanProcessor = function () {\n        return this._tracerProvider.getActiveSpanProcessor();\n    };\n    return Tracer;\n}());\nexport { Tracer };\n//# sourceMappingURL=Tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, diag, propagation, trace, } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, getEnv, merge, } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { Tracer } from '.';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n    ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n    ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n    ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n    ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nvar BasicTracerProvider = /** @class */ (function () {\n    function BasicTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        var mergedConfig = merge({}, loadDefaultConfig(), reconfigureLimits(config));\n        this.resource = (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : Resource.empty();\n        this.resource = Resource.default().merge(this.resource);\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n        var defaultExporter = this._buildExporterFromEnv();\n        if (defaultExporter !== undefined) {\n            var batchProcessor = new BatchSpanProcessor(defaultExporter);\n            this.activeSpanProcessor = batchProcessor;\n        }\n        else {\n            this.activeSpanProcessor = new NoopSpanProcessor();\n        }\n    }\n    BasicTracerProvider.prototype.getTracer = function (name, version, options) {\n        var key = name + \"@\" + (version || '') + \":\" + ((options === null || options === void 0 ? void 0 : options.schemaUrl) || '');\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new Tracer({ name: name, version: version, schemaUrl: options === null || options === void 0 ? void 0 : options.schemaUrl }, this._config, this));\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tracers.get(key);\n    };\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    BasicTracerProvider.prototype.addSpanProcessor = function (spanProcessor) {\n        if (this._registeredSpanProcessors.length === 0) {\n            // since we might have enabled by default a batchProcessor, we disable it\n            // before adding the new one\n            this.activeSpanProcessor\n                .shutdown()\n                .catch(function (err) {\n                return diag.error('Error while trying to shutdown current span processor', err);\n            });\n        }\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n    };\n    BasicTracerProvider.prototype.getActiveSpanProcessor = function () {\n        return this.activeSpanProcessor;\n    };\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    BasicTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            propagation.setGlobalPropagator(config.propagator);\n        }\n    };\n    BasicTracerProvider.prototype.forceFlush = function () {\n        var timeout = this._config.forceFlushTimeoutMillis;\n        var promises = this._registeredSpanProcessors.map(function (spanProcessor) {\n            return new Promise(function (resolve) {\n                var state;\n                var timeoutInterval = setTimeout(function () {\n                    resolve(new Error(\"Span processor did not completed within timeout period of \" + timeout + \" ms\"));\n                    state = ForceFlushState.timeout;\n                }, timeout);\n                spanProcessor\n                    .forceFlush()\n                    .then(function () {\n                    clearTimeout(timeoutInterval);\n                    if (state !== ForceFlushState.timeout) {\n                        state = ForceFlushState.resolved;\n                        resolve(state);\n                    }\n                })\n                    .catch(function (error) {\n                    clearTimeout(timeoutInterval);\n                    state = ForceFlushState.error;\n                    resolve(error);\n                });\n            });\n        });\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises)\n                .then(function (results) {\n                var errors = results.filter(function (result) { return result !== ForceFlushState.resolved; });\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch(function (error) { return reject([error]); });\n        });\n    };\n    BasicTracerProvider.prototype.shutdown = function () {\n        return this.activeSpanProcessor.shutdown();\n    };\n    /**\n     * TS cannot yet infer the type of this.constructor:\n     * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n     * There is no need to override either of the getters in your child class.\n     * The type of the registered component maps should be the same across all\n     * classes in the inheritance tree.\n     */\n    BasicTracerProvider.prototype._getPropagator = function (name) {\n        var _a;\n        return (_a = (this.constructor._registeredPropagators).get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._getSpanExporter = function (name) {\n        var _a;\n        return (_a = (this.constructor._registeredExporters).get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._buildPropagatorFromEnv = function () {\n        var _this = this;\n        // per spec, propagators from env must be deduplicated\n        var uniquePropagatorNames = Array.from(new Set(getEnv().OTEL_PROPAGATORS));\n        var propagators = uniquePropagatorNames.map(function (name) {\n            var propagator = _this._getPropagator(name);\n            if (!propagator) {\n                diag.warn(\"Propagator \\\"\" + name + \"\\\" requested through environment variable is unavailable.\");\n            }\n            return propagator;\n        });\n        var validPropagators = propagators.reduce(function (list, item) {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    };\n    BasicTracerProvider.prototype._buildExporterFromEnv = function () {\n        var exporterName = getEnv().OTEL_TRACES_EXPORTER;\n        if (exporterName === 'none')\n            return;\n        var exporter = this._getSpanExporter(exporterName);\n        if (!exporter) {\n            diag.error(\"Exporter \\\"\" + exporterName + \"\\\" requested through environment variable is unavailable.\");\n        }\n        return exporter;\n    };\n    BasicTracerProvider._registeredPropagators = new Map([\n        ['tracecontext', function () { return new W3CTraceContextPropagator(); }],\n        ['baggage', function () { return new W3CBaggagePropagator(); }],\n    ]);\n    BasicTracerProvider._registeredExporters = new Map();\n    return BasicTracerProvider;\n}());\nexport { BasicTracerProvider };\n//# sourceMappingURL=BasicTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { globalErrorHandler } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nvar MultiSpanProcessor = /** @class */ (function () {\n    function MultiSpanProcessor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    MultiSpanProcessor.prototype.forceFlush = function () {\n        var e_1, _a;\n        var promises = [];\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                promises.push(spanProcessor.forceFlush());\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return new Promise(function (resolve) {\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(function (error) {\n                globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    };\n    MultiSpanProcessor.prototype.onStart = function (span, context) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                spanProcessor.onStart(span, context);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MultiSpanProcessor.prototype.onEnd = function (span) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                spanProcessor.onEnd(span);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    MultiSpanProcessor.prototype.shutdown = function () {\n        var e_4, _a;\n        var promises = [];\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                promises.push(spanProcessor.shutdown());\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises).then(function () {\n                resolve();\n            }, reject);\n        });\n    };\n    return MultiSpanProcessor;\n}());\nexport { MultiSpanProcessor };\n//# sourceMappingURL=MultiSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n//# sourceMappingURL=NoopSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ROOT_CONTEXT } from '@opentelemetry/api';\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nvar StackContextManager = /** @class */ (function () {\n    function StackContextManager() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Keeps the reference to current context\n         */\n        this._currentContext = ROOT_CONTEXT;\n    }\n    /**\n     *\n     * @param context\n     * @param target Function to be executed within the context\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    StackContextManager.prototype._bindFunction = function (context, target) {\n        if (context === void 0) { context = ROOT_CONTEXT; }\n        var manager = this;\n        var contextWrapper = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.with(context, function () { return target.apply(_this, args); });\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    };\n    /**\n     * Returns the active context\n     */\n    StackContextManager.prototype.active = function () {\n        return this._currentContext;\n    };\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    StackContextManager.prototype.bind = function (context, target) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    };\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    StackContextManager.prototype.disable = function () {\n        this._currentContext = ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    };\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    StackContextManager.prototype.enable = function () {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = ROOT_CONTEXT;\n        return this;\n    };\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    StackContextManager.prototype.with = function (context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        var previousContext = this._currentContext;\n        this._currentContext = context || ROOT_CONTEXT;\n        try {\n            return fn.call.apply(fn, __spreadArray([thisArg], __read(args), false));\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    };\n    return StackContextManager;\n}());\nexport { StackContextManager };\n//# sourceMappingURL=StackContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BasicTracerProvider, } from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nvar WebTracerProvider = /** @class */ (function (_super) {\n    __extends(WebTracerProvider, _super);\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    function WebTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        if (config.contextManager) {\n            throw ('contextManager should be defined in register method not in' +\n                ' constructor');\n        }\n        if (config.propagator) {\n            throw 'propagator should be defined in register method not in constructor';\n        }\n        return _this;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    WebTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        if (config.contextManager === undefined) {\n            config.contextManager = new StackContextManager();\n        }\n        if (config.contextManager) {\n            config.contextManager.enable();\n        }\n        _super.prototype.register.call(this, config);\n    };\n    return WebTracerProvider;\n}(BasicTracerProvider));\nexport { WebTracerProvider };\n//# sourceMappingURL=WebTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nvar AnchoredClock = /** @class */ (function () {\n    /**\n     * Create a new AnchoredClock anchored to the current time returned by systemClock.\n     *\n     * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n     * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n     */\n    function AnchoredClock(systemClock, monotonicClock) {\n        this._monotonicClock = monotonicClock;\n        this._epochMillis = systemClock.now();\n        this._performanceMillis = monotonicClock.now();\n    }\n    /**\n     * Returns the current time by adding the number of milliseconds since the\n     * AnchoredClock was created to the creation epoch time\n     */\n    AnchoredClock.prototype.now = function () {\n        var delta = this._monotonicClock.now() - this._performanceMillis;\n        return this._epochMillis + delta;\n    };\n    return AnchoredClock;\n}());\nexport { AnchoredClock };\n//# sourceMappingURL=anchored-clock.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: 'none',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined' ?\n        parseEnvironment(process.env) :\n        parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","var SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n    * Name of the cloud provider.\n    */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n    * The cloud account ID the resource is assigned to.\n    */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n    * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n    */\n    CLOUD_REGION: 'cloud.region',\n    /**\n    * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n    *\n    * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n    */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n    * The cloud platform in use.\n    *\n    * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n    */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n    * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n    */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n    * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n    */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n    * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n    */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n    * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n    */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n    * The task definition family this task definition is a member of.\n    */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n    * The revision for this task definition.\n    */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n    * The ARN of an EKS cluster.\n    */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n    * The name(s) of the AWS log group(s) an application is writing to.\n    *\n    * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n    */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n    * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n    *\n    * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n    */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n    * The name(s) of the AWS log stream(s) an application is writing to.\n    */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n    * The ARN(s) of the AWS log stream(s).\n    *\n    * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n    */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n    * Container name.\n    */\n    CONTAINER_NAME: 'container.name',\n    /**\n    * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n    */\n    CONTAINER_ID: 'container.id',\n    /**\n    * The container runtime managing this container.\n    */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n    * Name of the image the container was built on.\n    */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n    * Container image tag.\n    */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n    * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n    */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n    * A unique identifier representing the device.\n    *\n    * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n    */\n    DEVICE_ID: 'device.id',\n    /**\n    * The model identifier for the device.\n    *\n    * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n    */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n    * The marketing name for the device model.\n    *\n    * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n    */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n    * The name of the single function that this runtime instance executes.\n    *\n    * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n    */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n    * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n    *\n    * Note: * **AWS Lambda:** Use the (full) log stream name.\n    */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n    * The amount of memory available to the serverless function in MiB.\n    *\n    * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n    */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n    * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n    */\n    HOST_ID: 'host.id',\n    /**\n    * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n    */\n    HOST_NAME: 'host.name',\n    /**\n    * Type of host. For Cloud, this must be the machine type.\n    */\n    HOST_TYPE: 'host.type',\n    /**\n    * The CPU architecture the host system is running on.\n    */\n    HOST_ARCH: 'host.arch',\n    /**\n    * Name of the VM image or OS install the host was instantiated from.\n    */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n    * VM image ID. For Cloud, this value is from the provider.\n    */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n    * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n    */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n    * The name of the cluster.\n    */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n    * The name of the Node.\n    */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n    * The UID of the Node.\n    */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n    * The name of the namespace that the pod is running in.\n    */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n    * The UID of the Pod.\n    */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n    * The name of the Pod.\n    */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n    * The name of the Container in a Pod template.\n    */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n    * The UID of the ReplicaSet.\n    */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n    * The name of the ReplicaSet.\n    */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n    * The UID of the Deployment.\n    */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n    * The name of the Deployment.\n    */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n    * The UID of the StatefulSet.\n    */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n    * The name of the StatefulSet.\n    */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n    * The UID of the DaemonSet.\n    */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n    * The name of the DaemonSet.\n    */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n    * The UID of the Job.\n    */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n    * The name of the Job.\n    */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n    * The UID of the CronJob.\n    */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n    * The name of the CronJob.\n    */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n    * The operating system type.\n    */\n    OS_TYPE: 'os.type',\n    /**\n    * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n    */\n    OS_DESCRIPTION: 'os.description',\n    /**\n    * Human readable operating system name.\n    */\n    OS_NAME: 'os.name',\n    /**\n    * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n    */\n    OS_VERSION: 'os.version',\n    /**\n    * Process identifier (PID).\n    */\n    PROCESS_PID: 'process.pid',\n    /**\n    * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n    * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n    * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n    */\n    PROCESS_COMMAND: 'process.command',\n    /**\n    * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n    */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n    * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n    */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n    * The username of the user that owns the process.\n    */\n    PROCESS_OWNER: 'process.owner',\n    /**\n    * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n    */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n    * The version of the runtime of this process, as returned by the runtime without modification.\n    */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n    * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n    */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n    * Logical name of the service.\n    *\n    * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n    */\n    SERVICE_NAME: 'service.name',\n    /**\n    * A namespace for `service.name`.\n    *\n    * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n    */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n    * The string ID of the service instance.\n    *\n    * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n    */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n    * The version string of the service API or implementation.\n    */\n    SERVICE_VERSION: 'service.version',\n    /**\n    * The name of the telemetry SDK as defined above.\n    */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n    * The language of the telemetry SDK.\n    */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n    * The version string of the telemetry SDK.\n    */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n    * The version string of the auto instrumentation agent, if used.\n    */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n    * The name of the web engine.\n    */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n    * The version of the web engine.\n    */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n    * Additional description of the web engine (e.g. detailed version and edition information).\n    */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.7.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = numberToHrtime(getTimeOrigin());\n    var now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    var seconds = timeOrigin[0] + now[0];\n    var nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false)))\n                    .then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nvar AnchoredClock = /** @class */ (function () {\n    /**\n     * Create a new AnchoredClock anchored to the current time returned by systemClock.\n     *\n     * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n     * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n     */\n    function AnchoredClock(systemClock, monotonicClock) {\n        this._monotonicClock = monotonicClock;\n        this._epochMillis = systemClock.now();\n        this._performanceMillis = monotonicClock.now();\n    }\n    /**\n     * Returns the current time by adding the number of milliseconds since the\n     * AnchoredClock was created to the creation epoch time\n     */\n    AnchoredClock.prototype.now = function () {\n        var delta = this._monotonicClock.now() - this._performanceMillis;\n        return this._epochMillis + delta;\n    };\n    return AnchoredClock;\n}());\nexport { AnchoredClock };\n//# sourceMappingURL=anchored-clock.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: 'none',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined' ?\n        parseEnvironment(process.env) :\n        parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","var SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n    * Name of the cloud provider.\n    */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n    * The cloud account ID the resource is assigned to.\n    */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n    * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n    */\n    CLOUD_REGION: 'cloud.region',\n    /**\n    * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n    *\n    * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n    */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n    * The cloud platform in use.\n    *\n    * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n    */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n    * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n    */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n    * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n    */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n    * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n    */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n    * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n    */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n    * The task definition family this task definition is a member of.\n    */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n    * The revision for this task definition.\n    */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n    * The ARN of an EKS cluster.\n    */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n    * The name(s) of the AWS log group(s) an application is writing to.\n    *\n    * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n    */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n    * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n    *\n    * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n    */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n    * The name(s) of the AWS log stream(s) an application is writing to.\n    */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n    * The ARN(s) of the AWS log stream(s).\n    *\n    * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n    */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n    * Container name.\n    */\n    CONTAINER_NAME: 'container.name',\n    /**\n    * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n    */\n    CONTAINER_ID: 'container.id',\n    /**\n    * The container runtime managing this container.\n    */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n    * Name of the image the container was built on.\n    */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n    * Container image tag.\n    */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n    * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n    */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n    * A unique identifier representing the device.\n    *\n    * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n    */\n    DEVICE_ID: 'device.id',\n    /**\n    * The model identifier for the device.\n    *\n    * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n    */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n    * The marketing name for the device model.\n    *\n    * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n    */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n    * The name of the single function that this runtime instance executes.\n    *\n    * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n    */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n    * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n    *\n    * Note: * **AWS Lambda:** Use the (full) log stream name.\n    */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n    * The amount of memory available to the serverless function in MiB.\n    *\n    * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n    */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n    * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n    */\n    HOST_ID: 'host.id',\n    /**\n    * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n    */\n    HOST_NAME: 'host.name',\n    /**\n    * Type of host. For Cloud, this must be the machine type.\n    */\n    HOST_TYPE: 'host.type',\n    /**\n    * The CPU architecture the host system is running on.\n    */\n    HOST_ARCH: 'host.arch',\n    /**\n    * Name of the VM image or OS install the host was instantiated from.\n    */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n    * VM image ID. For Cloud, this value is from the provider.\n    */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n    * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n    */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n    * The name of the cluster.\n    */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n    * The name of the Node.\n    */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n    * The UID of the Node.\n    */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n    * The name of the namespace that the pod is running in.\n    */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n    * The UID of the Pod.\n    */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n    * The name of the Pod.\n    */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n    * The name of the Container in a Pod template.\n    */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n    * The UID of the ReplicaSet.\n    */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n    * The name of the ReplicaSet.\n    */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n    * The UID of the Deployment.\n    */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n    * The name of the Deployment.\n    */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n    * The UID of the StatefulSet.\n    */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n    * The name of the StatefulSet.\n    */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n    * The UID of the DaemonSet.\n    */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n    * The name of the DaemonSet.\n    */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n    * The UID of the Job.\n    */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n    * The name of the Job.\n    */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n    * The UID of the CronJob.\n    */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n    * The name of the CronJob.\n    */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n    * The operating system type.\n    */\n    OS_TYPE: 'os.type',\n    /**\n    * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n    */\n    OS_DESCRIPTION: 'os.description',\n    /**\n    * Human readable operating system name.\n    */\n    OS_NAME: 'os.name',\n    /**\n    * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n    */\n    OS_VERSION: 'os.version',\n    /**\n    * Process identifier (PID).\n    */\n    PROCESS_PID: 'process.pid',\n    /**\n    * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n    * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n    * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n    */\n    PROCESS_COMMAND: 'process.command',\n    /**\n    * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n    */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n    * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n    */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n    * The username of the user that owns the process.\n    */\n    PROCESS_OWNER: 'process.owner',\n    /**\n    * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n    */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n    * The version of the runtime of this process, as returned by the runtime without modification.\n    */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n    * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n    */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n    * Logical name of the service.\n    *\n    * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n    */\n    SERVICE_NAME: 'service.name',\n    /**\n    * A namespace for `service.name`.\n    *\n    * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n    */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n    * The string ID of the service instance.\n    *\n    * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n    */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n    * The version string of the service API or implementation.\n    */\n    SERVICE_VERSION: 'service.version',\n    /**\n    * The name of the telemetry SDK as defined above.\n    */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n    * The language of the telemetry SDK.\n    */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n    * The version string of the telemetry SDK.\n    */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n    * The version string of the auto instrumentation agent, if used.\n    */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n    * The name of the web engine.\n    */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n    * The version of the web engine.\n    */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n    * Additional description of the web engine (e.g. detailed version and edition information).\n    */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.7.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = numberToHrtime(getTimeOrigin());\n    var now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    var seconds = timeOrigin[0] + now[0];\n    var nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false)))\n                    .then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nvar DEFAULT_TRACE_TIMEOUT = 10000;\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n */\nexport function parseHeaders(partialHeaders) {\n    if (partialHeaders === void 0) { partialHeaders = {}; }\n    var headers = {};\n    Object.entries(partialHeaders).forEach(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        if (typeof value !== 'undefined') {\n            headers[key] = String(value);\n        }\n        else {\n            diag.warn(\"Header \\\"\" + key + \"\\\" has wrong value and will be ignored\");\n        }\n    });\n    return headers;\n}\n/**\n * Adds path (version + signal) to a no per-signal endpoint\n * @param url\n * @param path\n * @returns url + path\n */\nexport function appendResourcePathToUrl(url, path) {\n    if (!url.endsWith('/')) {\n        url = url + '/';\n    }\n    return url + path;\n}\n/**\n * Adds root path to signal specific endpoint when endpoint contains no path part and no root path\n * @param url\n * @param path\n * @returns url\n */\nexport function appendRootPathToUrlIfNeeded(url, path) {\n    if (!url.includes(path) && !url.endsWith('/')) {\n        url = url + '/';\n    }\n    return url;\n}\n/**\n * Configure exporter trace timeout value from passed in value or environment variables\n * @param timeoutMillis\n * @returns timeout value in milliseconds\n */\nexport function configureExporterTimeout(timeoutMillis) {\n    if (typeof timeoutMillis === 'number') {\n        if (timeoutMillis <= 0) {\n            // OTLP exporter configured timeout - using default value of 10000ms\n            return invalidTimeout(timeoutMillis, DEFAULT_TRACE_TIMEOUT);\n        }\n        return timeoutMillis;\n    }\n    else {\n        return getExporterTimeoutFromEnv();\n    }\n}\nfunction getExporterTimeoutFromEnv() {\n    var _a;\n    var definedTimeout = Number((_a = getEnv().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT) !== null && _a !== void 0 ? _a : getEnv().OTEL_EXPORTER_OTLP_TIMEOUT);\n    if (definedTimeout <= 0) {\n        // OTLP exporter configured timeout - using default value of 10000ms\n        return invalidTimeout(definedTimeout, DEFAULT_TRACE_TIMEOUT);\n    }\n    else {\n        return definedTimeout;\n    }\n}\n// OTLP exporter configured timeout - using default value of 10000ms\nexport function invalidTimeout(timeout, defaultTimeout) {\n    diag.warn('Timeout must be greater than 0', timeout);\n    return defaultTimeout;\n}\n//# sourceMappingURL=util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { ExportResultCode, BindOnceFuture } from '@opentelemetry/core';\nimport { configureExporterTimeout } from './util';\n/**\n * Collector Exporter abstract base class\n */\nvar OTLPExporterBase = /** @class */ (function () {\n    /**\n     * @param config\n     */\n    function OTLPExporterBase(config) {\n        if (config === void 0) { config = {}; }\n        this._sendingPromises = [];\n        this.url = this.getDefaultUrl(config);\n        if (typeof config.hostname === 'string') {\n            this.hostname = config.hostname;\n        }\n        this.shutdown = this.shutdown.bind(this);\n        this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n        this._concurrencyLimit =\n            typeof config.concurrencyLimit === 'number'\n                ? config.concurrencyLimit\n                : Infinity;\n        this.timeoutMillis = configureExporterTimeout(config.timeoutMillis);\n        // platform dependent\n        this.onInit(config);\n    }\n    /**\n     * Export items.\n     * @param items\n     * @param resultCallback\n     */\n    OTLPExporterBase.prototype.export = function (items, resultCallback) {\n        if (this._shutdownOnce.isCalled) {\n            resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Exporter has been shutdown'),\n            });\n            return;\n        }\n        if (this._sendingPromises.length >= this._concurrencyLimit) {\n            resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Concurrent export limit reached'),\n            });\n            return;\n        }\n        this._export(items)\n            .then(function () {\n            resultCallback({ code: ExportResultCode.SUCCESS });\n        })\n            .catch(function (error) {\n            resultCallback({ code: ExportResultCode.FAILED, error: error });\n        });\n    };\n    OTLPExporterBase.prototype._export = function (items) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                diag.debug('items to be sent', items);\n                _this.send(items, resolve, reject);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Shutdown the exporter.\n     */\n    OTLPExporterBase.prototype.shutdown = function () {\n        return this._shutdownOnce.call();\n    };\n    /**\n     * Called by _shutdownOnce with BindOnceFuture\n     */\n    OTLPExporterBase.prototype._shutdown = function () {\n        diag.debug('shutdown started');\n        this.onShutdown();\n        return Promise.all(this._sendingPromises)\n            .then(function () {\n            /** ignore resolved values */\n        });\n    };\n    return OTLPExporterBase;\n}());\nexport { OTLPExporterBase };\n//# sourceMappingURL=OTLPExporterBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Interface for handling error\n */\nvar OTLPExporterError = /** @class */ (function (_super) {\n    __extends(OTLPExporterError, _super);\n    function OTLPExporterError(message, code, data) {\n        var _this = _super.call(this, message) || this;\n        _this.name = 'OTLPExporterError';\n        _this.data = data;\n        _this.code = code;\n        return _this;\n    }\n    return OTLPExporterError;\n}(Error));\nexport { OTLPExporterError };\n//# sourceMappingURL=types.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(body, url, blobPropertyBag, onSuccess, onError) {\n    if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n        diag.debug('sendBeacon - can send', body);\n        onSuccess();\n    }\n    else {\n        var error = new OTLPExporterError(\"sendBeacon - cannot send \" + body);\n        onError(error);\n    }\n}\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(body, url, headers, exporterTimeout, onSuccess, onError) {\n    var reqIsDestroyed;\n    var exporterTimer = setTimeout(function () {\n        reqIsDestroyed = true;\n        xhr.abort();\n    }, exporterTimeout);\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    var defaultHeaders = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    };\n    Object.entries(__assign(__assign({}, defaultHeaders), headers)).forEach(function (_a) {\n        var _b = __read(_a, 2), k = _b[0], v = _b[1];\n        xhr.setRequestHeader(k, v);\n    });\n    xhr.send(body);\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                clearTimeout(exporterTimer);\n                diag.debug('xhr success', body);\n                onSuccess();\n            }\n            else if (reqIsDestroyed) {\n                var error = new OTLPExporterError('Request Timeout', xhr.status);\n                onError(error);\n            }\n            else {\n                var error = new OTLPExporterError(\"Failed to export with XHR (status: \" + xhr.status + \")\", xhr.status);\n                clearTimeout(exporterTimer);\n                onError(error);\n            }\n        }\n    };\n}\n//# sourceMappingURL=util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { OTLPExporterBase } from '../../OTLPExporterBase';\nimport { parseHeaders } from '../../util';\nimport { sendWithBeacon, sendWithXhr } from './util';\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\n/**\n * Collector Metric Exporter abstract base class\n */\nvar OTLPExporterBrowserBase = /** @class */ (function (_super) {\n    __extends(OTLPExporterBrowserBase, _super);\n    /**\n     * @param config\n     */\n    function OTLPExporterBrowserBase(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        _this._useXHR = false;\n        _this._useXHR =\n            !!config.headers || typeof navigator.sendBeacon !== 'function';\n        if (_this._useXHR) {\n            _this._headers = Object.assign({}, parseHeaders(config.headers), baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_HEADERS));\n        }\n        else {\n            _this._headers = {};\n        }\n        return _this;\n    }\n    OTLPExporterBrowserBase.prototype.onInit = function () {\n        window.addEventListener('unload', this.shutdown);\n    };\n    OTLPExporterBrowserBase.prototype.onShutdown = function () {\n        window.removeEventListener('unload', this.shutdown);\n    };\n    OTLPExporterBrowserBase.prototype.send = function (items, onSuccess, onError) {\n        var _this = this;\n        if (this._shutdownOnce.isCalled) {\n            diag.debug('Shutdown already started. Cannot send objects');\n            return;\n        }\n        var serviceRequest = this.convert(items);\n        var body = JSON.stringify(serviceRequest);\n        var promise = new Promise(function (resolve, reject) {\n            if (_this._useXHR) {\n                sendWithXhr(body, _this.url, _this._headers, _this.timeoutMillis, resolve, reject);\n            }\n            else {\n                sendWithBeacon(body, _this.url, { type: 'application/json' }, resolve, reject);\n            }\n        })\n            .then(onSuccess, onError);\n        this._sendingPromises.push(promise);\n        var popPromise = function () {\n            var index = _this._sendingPromises.indexOf(promise);\n            _this._sendingPromises.splice(index, 1);\n        };\n        promise.then(popPromise, popPromise);\n    };\n    return OTLPExporterBrowserBase;\n}(OTLPExporterBase));\nexport { OTLPExporterBrowserBase };\n//# sourceMappingURL=OTLPExporterBrowserBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SpanKind is the type of span. Can be used to specify additional relationships between spans\n * in addition to a parent/child relationship.\n */\nexport var ESpanKind;\n(function (ESpanKind) {\n    /** Unspecified. Do NOT use as default. Implementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED. */\n    ESpanKind[ESpanKind[\"SPAN_KIND_UNSPECIFIED\"] = 0] = \"SPAN_KIND_UNSPECIFIED\";\n    /** Indicates that the span represents an internal operation within an application,\n      * as opposed to an operation happening at the boundaries. Default value.\n      */\n    ESpanKind[ESpanKind[\"SPAN_KIND_INTERNAL\"] = 1] = \"SPAN_KIND_INTERNAL\";\n    /** Indicates that the span covers server-side handling of an RPC or other\n      * remote network request.\n      */\n    ESpanKind[ESpanKind[\"SPAN_KIND_SERVER\"] = 2] = \"SPAN_KIND_SERVER\";\n    /** Indicates that the span describes a request to some remote service.\n      */\n    ESpanKind[ESpanKind[\"SPAN_KIND_CLIENT\"] = 3] = \"SPAN_KIND_CLIENT\";\n    /** Indicates that the span describes a producer sending a message to a broker.\n      * Unlike CLIENT and SERVER, there is often no direct critical path latency relationship\n      * between producer and consumer spans. A PRODUCER span ends when the message was accepted\n      * by the broker while the logical processing of the message might span a much longer time.\n      */\n    ESpanKind[ESpanKind[\"SPAN_KIND_PRODUCER\"] = 4] = \"SPAN_KIND_PRODUCER\";\n    /** Indicates that the span describes consumer receiving a message from a broker.\n      * Like the PRODUCER kind, there is often no direct critical path latency relationship\n      * between producer and consumer spans.\n      */\n    ESpanKind[ESpanKind[\"SPAN_KIND_CONSUMER\"] = 5] = \"SPAN_KIND_CONSUMER\";\n})(ESpanKind || (ESpanKind = {}));\n//# sourceMappingURL=types.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexport function toAttributes(attributes) {\n    return Object.keys(attributes).map(function (key) { return toKeyValue(key, attributes[key]); });\n}\nexport function toKeyValue(key, value) {\n    return {\n        key: key,\n        value: toAnyValue(value),\n    };\n}\nexport function toAnyValue(value) {\n    var t = typeof value;\n    if (t === 'string')\n        return { stringValue: value };\n    if (t === 'number') {\n        if (!Number.isInteger(value))\n            return { doubleValue: value };\n        return { intValue: value };\n    }\n    if (t === 'boolean')\n        return { boolValue: value };\n    if (value instanceof Uint8Array)\n        return { bytesValue: value };\n    if (Array.isArray(value))\n        return { arrayValue: { values: value.map(toAnyValue) } };\n    if (t === 'object' && value != null)\n        return { kvlistValue: { values: Object.entries(value).map(function (_a) {\n                    var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                    return toKeyValue(k, v);\n                }) } };\n    return {};\n}\nexport function hexToBuf(hex) {\n    var _a;\n    var ints = (_a = hex.match(/[\\da-f]{2}/gi)) === null || _a === void 0 ? void 0 : _a.map(function (h) { return parseInt(h, 16); });\n    return ints && new Uint8Array(ints);\n}\nfunction i2hex(i) {\n    return ('0' + i.toString(16)).slice(-2);\n}\nexport function bufToHex(buf) {\n    if (buf == null || buf.length === 0)\n        return undefined;\n    return Array.from(buf).map(i2hex).join('');\n}\n//# sourceMappingURL=internal.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nvar AnchoredClock = /** @class */ (function () {\n    /**\n     * Create a new AnchoredClock anchored to the current time returned by systemClock.\n     *\n     * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n     * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n     */\n    function AnchoredClock(systemClock, monotonicClock) {\n        this._monotonicClock = monotonicClock;\n        this._epochMillis = systemClock.now();\n        this._performanceMillis = monotonicClock.now();\n    }\n    /**\n     * Returns the current time by adding the number of milliseconds since the\n     * AnchoredClock was created to the creation epoch time\n     */\n    AnchoredClock.prototype.now = function () {\n        var delta = this._monotonicClock.now() - this._performanceMillis;\n        return this._epochMillis + delta;\n    };\n    return AnchoredClock;\n}());\nexport { AnchoredClock };\n//# sourceMappingURL=anchored-clock.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: 'none',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined' ?\n        parseEnvironment(process.env) :\n        parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr) {\n    var hexStrLen = hexStr.length;\n    var hexAsciiCharsStr = '';\n    for (var i = 0; i < hexStrLen; i += 2) {\n        var hexPair = hexStr.substring(i, i + 2);\n        var hexVal = parseInt(hexPair, 16);\n        hexAsciiCharsStr += String.fromCharCode(hexVal);\n    }\n    return btoa(hexAsciiCharsStr);\n}\n//# sourceMappingURL=hex-to-base64.js.map","var SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n    * Name of the cloud provider.\n    */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n    * The cloud account ID the resource is assigned to.\n    */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n    * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n    */\n    CLOUD_REGION: 'cloud.region',\n    /**\n    * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n    *\n    * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n    */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n    * The cloud platform in use.\n    *\n    * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n    */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n    * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n    */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n    * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n    */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n    * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n    */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n    * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n    */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n    * The task definition family this task definition is a member of.\n    */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n    * The revision for this task definition.\n    */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n    * The ARN of an EKS cluster.\n    */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n    * The name(s) of the AWS log group(s) an application is writing to.\n    *\n    * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n    */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n    * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n    *\n    * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n    */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n    * The name(s) of the AWS log stream(s) an application is writing to.\n    */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n    * The ARN(s) of the AWS log stream(s).\n    *\n    * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n    */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n    * Container name.\n    */\n    CONTAINER_NAME: 'container.name',\n    /**\n    * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n    */\n    CONTAINER_ID: 'container.id',\n    /**\n    * The container runtime managing this container.\n    */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n    * Name of the image the container was built on.\n    */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n    * Container image tag.\n    */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n    * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n    */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n    * A unique identifier representing the device.\n    *\n    * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n    */\n    DEVICE_ID: 'device.id',\n    /**\n    * The model identifier for the device.\n    *\n    * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n    */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n    * The marketing name for the device model.\n    *\n    * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n    */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n    * The name of the single function that this runtime instance executes.\n    *\n    * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n    */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n    * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n    *\n    * Note: * **AWS Lambda:** Use the (full) log stream name.\n    */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n    * The amount of memory available to the serverless function in MiB.\n    *\n    * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n    */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n    * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n    */\n    HOST_ID: 'host.id',\n    /**\n    * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n    */\n    HOST_NAME: 'host.name',\n    /**\n    * Type of host. For Cloud, this must be the machine type.\n    */\n    HOST_TYPE: 'host.type',\n    /**\n    * The CPU architecture the host system is running on.\n    */\n    HOST_ARCH: 'host.arch',\n    /**\n    * Name of the VM image or OS install the host was instantiated from.\n    */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n    * VM image ID. For Cloud, this value is from the provider.\n    */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n    * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n    */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n    * The name of the cluster.\n    */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n    * The name of the Node.\n    */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n    * The UID of the Node.\n    */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n    * The name of the namespace that the pod is running in.\n    */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n    * The UID of the Pod.\n    */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n    * The name of the Pod.\n    */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n    * The name of the Container in a Pod template.\n    */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n    * The UID of the ReplicaSet.\n    */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n    * The name of the ReplicaSet.\n    */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n    * The UID of the Deployment.\n    */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n    * The name of the Deployment.\n    */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n    * The UID of the StatefulSet.\n    */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n    * The name of the StatefulSet.\n    */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n    * The UID of the DaemonSet.\n    */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n    * The name of the DaemonSet.\n    */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n    * The UID of the Job.\n    */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n    * The name of the Job.\n    */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n    * The UID of the CronJob.\n    */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n    * The name of the CronJob.\n    */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n    * The operating system type.\n    */\n    OS_TYPE: 'os.type',\n    /**\n    * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n    */\n    OS_DESCRIPTION: 'os.description',\n    /**\n    * Human readable operating system name.\n    */\n    OS_NAME: 'os.name',\n    /**\n    * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n    */\n    OS_VERSION: 'os.version',\n    /**\n    * Process identifier (PID).\n    */\n    PROCESS_PID: 'process.pid',\n    /**\n    * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n    * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n    * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n    */\n    PROCESS_COMMAND: 'process.command',\n    /**\n    * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n    */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n    * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n    */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n    * The username of the user that owns the process.\n    */\n    PROCESS_OWNER: 'process.owner',\n    /**\n    * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n    */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n    * The version of the runtime of this process, as returned by the runtime without modification.\n    */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n    * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n    */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n    * Logical name of the service.\n    *\n    * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n    */\n    SERVICE_NAME: 'service.name',\n    /**\n    * A namespace for `service.name`.\n    *\n    * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n    */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n    * The string ID of the service instance.\n    *\n    * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n    */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n    * The version string of the service API or implementation.\n    */\n    SERVICE_VERSION: 'service.version',\n    /**\n    * The name of the telemetry SDK as defined above.\n    */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n    * The language of the telemetry SDK.\n    */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n    * The version string of the telemetry SDK.\n    */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n    * The version string of the auto instrumentation agent, if used.\n    */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n    * The name of the web engine.\n    */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n    * The version of the web engine.\n    */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n    * Additional description of the web engine (e.g. detailed version and edition information).\n    */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = numberToHrtime(getTimeOrigin());\n    var now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    var seconds = timeOrigin[0] + now[0];\n    var nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.7.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false)))\n                    .then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","import { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport { toAttributes } from '../common/internal';\nimport * as core from '@opentelemetry/core';\nexport function sdkSpanToOtlpSpan(span, useHex) {\n    var ctx = span.spanContext();\n    var status = span.status;\n    var parentSpanId = useHex ? span.parentSpanId : span.parentSpanId != null ? core.hexToBase64(span.parentSpanId) : undefined;\n    return {\n        traceId: useHex ? ctx.traceId : core.hexToBase64(ctx.traceId),\n        spanId: useHex ? ctx.spanId : core.hexToBase64(ctx.spanId),\n        parentSpanId: parentSpanId,\n        name: span.name,\n        // Span kind is offset by 1 because the API does not define a value for unset\n        kind: span.kind == null ? 0 : span.kind + 1,\n        startTimeUnixNano: hrTimeToNanoseconds(span.startTime),\n        endTimeUnixNano: hrTimeToNanoseconds(span.endTime),\n        attributes: toAttributes(span.attributes),\n        droppedAttributesCount: 0,\n        events: span.events.map(toOtlpSpanEvent),\n        droppedEventsCount: 0,\n        status: {\n            // API and proto enums share the same values\n            code: status.code,\n            message: status.message,\n        },\n        links: span.links.map(function (link) { return toOtlpLink(link, useHex); }),\n        droppedLinksCount: 0,\n    };\n}\nexport function toOtlpLink(link, useHex) {\n    return {\n        attributes: link.attributes ? toAttributes(link.attributes) : [],\n        spanId: useHex ? link.context.spanId : core.hexToBase64(link.context.spanId),\n        traceId: useHex ? link.context.traceId : core.hexToBase64(link.context.traceId),\n        droppedAttributesCount: 0,\n    };\n}\nexport function toOtlpSpanEvent(timedEvent) {\n    return {\n        attributes: timedEvent.attributes ? toAttributes(timedEvent.attributes) : [],\n        name: timedEvent.name,\n        timeUnixNano: hrTimeToNanoseconds(timedEvent.time),\n        droppedAttributesCount: 0,\n    };\n}\n//# sourceMappingURL=internal.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { toAttributes } from '../common/internal';\nimport { sdkSpanToOtlpSpan } from './internal';\nexport function createExportTraceServiceRequest(spans, useHex) {\n    return {\n        resourceSpans: spanRecordsToResourceSpans(spans, useHex)\n    };\n}\nfunction createResourceMap(readableSpans) {\n    var e_1, _a;\n    var resourceMap = new Map();\n    try {\n        for (var readableSpans_1 = __values(readableSpans), readableSpans_1_1 = readableSpans_1.next(); !readableSpans_1_1.done; readableSpans_1_1 = readableSpans_1.next()) {\n            var record = readableSpans_1_1.value;\n            var ilmMap = resourceMap.get(record.resource);\n            if (!ilmMap) {\n                ilmMap = new Map();\n                resourceMap.set(record.resource, ilmMap);\n            }\n            // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n            var instrumentationLibraryKey = record.instrumentationLibrary.name + \"@\" + (record.instrumentationLibrary.version || '') + \":\" + (record.instrumentationLibrary.schemaUrl || '');\n            var records = ilmMap.get(instrumentationLibraryKey);\n            if (!records) {\n                records = [];\n                ilmMap.set(instrumentationLibraryKey, records);\n            }\n            records.push(record);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (readableSpans_1_1 && !readableSpans_1_1.done && (_a = readableSpans_1.return)) _a.call(readableSpans_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return resourceMap;\n}\nfunction spanRecordsToResourceSpans(readableSpans, useHex) {\n    var resourceMap = createResourceMap(readableSpans);\n    var out = [];\n    var entryIterator = resourceMap.entries();\n    var entry = entryIterator.next();\n    while (!entry.done) {\n        var _a = __read(entry.value, 2), resource = _a[0], ilmMap = _a[1];\n        var scopeResourceSpans = [];\n        var ilmIterator = ilmMap.values();\n        var ilmEntry = ilmIterator.next();\n        while (!ilmEntry.done) {\n            var scopeSpans = ilmEntry.value;\n            if (scopeSpans.length > 0) {\n                var _b = scopeSpans[0].instrumentationLibrary, name_1 = _b.name, version = _b.version, schemaUrl = _b.schemaUrl;\n                var spans = scopeSpans.map(function (readableSpan) { return sdkSpanToOtlpSpan(readableSpan, useHex); });\n                scopeResourceSpans.push({\n                    scope: { name: name_1, version: version },\n                    spans: spans,\n                    schemaUrl: schemaUrl\n                });\n            }\n            ilmEntry = ilmIterator.next();\n        }\n        // TODO SDK types don't provide resource schema URL at this time\n        var transformedSpans = {\n            resource: {\n                attributes: toAttributes(resource.attributes),\n                droppedAttributesCount: 0,\n            },\n            scopeSpans: scopeResourceSpans,\n            schemaUrl: undefined\n        };\n        out.push(transformedSpans);\n        entry = entryIterator.next();\n    }\n    return out;\n}\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * @see {@link Meter.createHistogram}\n     */\n    NoopMeter.prototype.createHistogram = function (_name, _options) {\n        return NOOP_HISTOGRAM_METRIC;\n    };\n    /**\n     * @see {@link Meter.createCounter}\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return NOOP_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createUpDownCounter}\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return NOOP_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableGauge}\n     */\n    NoopMeter.prototype.createObservableGauge = function (_name, _options) {\n        return NOOP_OBSERVABLE_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableCounter}\n     */\n    NoopMeter.prototype.createObservableCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableUpDownCounter}\n     */\n    NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.addBatchObservableCallback}\n     */\n    NoopMeter.prototype.addBatchObservableCallback = function (_callback, _observables) { };\n    /**\n     * @see {@link Meter.removeBatchObservableCallback}\n     */\n    NoopMeter.prototype.removeBatchObservableCallback = function (_callback) { };\n    return NoopMeter;\n}());\nexport { NoopMeter };\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric() {\n    }\n    return NoopMetric;\n}());\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopCounterMetric;\n}(NoopMetric));\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopUpDownCounterMetric, _super);\n    function NoopUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopUpDownCounterMetric;\n}(NoopMetric));\nexport { NoopUpDownCounterMetric };\nvar NoopHistogramMetric = /** @class */ (function (_super) {\n    __extends(NoopHistogramMetric, _super);\n    function NoopHistogramMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopHistogramMetric.prototype.record = function (_value, _attributes) { };\n    return NoopHistogramMetric;\n}(NoopMetric));\nexport { NoopHistogramMetric };\nvar NoopObservableMetric = /** @class */ (function () {\n    function NoopObservableMetric() {\n    }\n    NoopObservableMetric.prototype.addCallback = function (_callback) { };\n    NoopObservableMetric.prototype.removeCallback = function (_callback) { };\n    return NoopObservableMetric;\n}());\nexport { NoopObservableMetric };\nvar NoopObservableCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableCounterMetric, _super);\n    function NoopObservableCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableCounterMetric };\nvar NoopObservableGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableGaugeMetric, _super);\n    function NoopObservableGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableGaugeMetric;\n}(NoopObservableMetric));\nexport { NoopObservableGaugeMetric };\nvar NoopObservableUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableUpDownCounterMetric, _super);\n    function NoopObservableUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableUpDownCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableUpDownCounterMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter() {\n    return NOOP_METER;\n}\n//# sourceMappingURL=NoopMeter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Type of value. It describes how the data is reported. */\nexport var ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType || (ValueType = {}));\n//# sourceMappingURL=Metric.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n        return NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nexport var GLOBAL_METRICS_API_KEY = Symbol.for('io.opentelemetry.js.api.metrics');\nexport var _global = _globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter(requiredVersion, instance, fallback) {\n    return function (version) {\n        return version === requiredVersion ? instance : fallback;\n    };\n}\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport var API_BACKWARDS_COMPATIBILITY_VERSION = 4;\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * AggregationTemporality indicates the way additive quantities are expressed.\n */\nexport var AggregationTemporality;\n(function (AggregationTemporality) {\n    AggregationTemporality[AggregationTemporality[\"DELTA\"] = 0] = \"DELTA\";\n    AggregationTemporality[AggregationTemporality[\"CUMULATIVE\"] = 1] = \"CUMULATIVE\";\n})(AggregationTemporality || (AggregationTemporality = {}));\n//# sourceMappingURL=AggregationTemporality.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The aggregated point data type.\n */\nexport var DataPointType;\n(function (DataPointType) {\n    /**\n     * A histogram data point contains a histogram statistics of collected\n     * values with a list of explicit bucket boundaries and statistics such\n     * as min, max, count, and sum of all collected values.\n     */\n    DataPointType[DataPointType[\"HISTOGRAM\"] = 0] = \"HISTOGRAM\";\n    /**\n     * An exponential histogram data point contains a histogram statistics of\n     * collected values where bucket boundaries are automatically calculated\n     * using an exponential function, and statistics such as min, max, count,\n     * and sum of all collected values.\n     */\n    DataPointType[DataPointType[\"EXPONENTIAL_HISTOGRAM\"] = 1] = \"EXPONENTIAL_HISTOGRAM\";\n    /**\n     * A gauge metric data point has only a single numeric value.\n     */\n    DataPointType[DataPointType[\"GAUGE\"] = 2] = \"GAUGE\";\n    /**\n     * A sum metric data point has a single numeric value and a\n     * monotonicity-indicator.\n     */\n    DataPointType[DataPointType[\"SUM\"] = 3] = \"SUM\";\n})(DataPointType || (DataPointType = {}));\n//# sourceMappingURL=MetricData.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER_PROVIDER } from '../NoopMeterProvider';\nimport { API_BACKWARDS_COMPATIBILITY_VERSION, GLOBAL_METRICS_API_KEY, makeGetter, _global, } from './global-utils';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter. Returns the initialized global meter provider.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        if (_global[GLOBAL_METRICS_API_KEY]) {\n            // global meter provider has already been set\n            return this.getMeterProvider();\n        }\n        _global[GLOBAL_METRICS_API_KEY] = makeGetter(API_BACKWARDS_COMPATIBILITY_VERSION, provider, NOOP_METER_PROVIDER);\n        return provider;\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        var _a, _b;\n        return ((_b = (_a = _global[GLOBAL_METRICS_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(_global, API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : NOOP_METER_PROVIDER);\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version, options) {\n        return this.getMeterProvider().getMeter(name, version, options);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        delete _global[GLOBAL_METRICS_API_KEY];\n    };\n    return MetricsAPI;\n}());\nexport { MetricsAPI };\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { createNoopMeter, } from './NoopMeter';\nexport { ValueType, } from './types/Metric';\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nexport function isNotNullish(item) {\n    return item !== undefined && item !== null;\n}\n/**\n * Converting the unordered attributes into unique identifier string.\n * @param attributes user provided unordered MetricAttributes.\n */\nexport function hashAttributes(attributes) {\n    var keys = Object.keys(attributes);\n    if (keys.length === 0)\n        return '';\n    // Return a string that is stable on key orders.\n    keys = keys.sort();\n    return JSON.stringify(keys.map(function (key) { return [key, attributes[key]]; }));\n}\n/**\n * Converting the instrumentation scope object to a unique identifier string.\n * @param instrumentationScope\n */\nexport function instrumentationScopeId(instrumentationScope) {\n    var _a, _b;\n    return instrumentationScope.name + \":\" + ((_a = instrumentationScope.version) !== null && _a !== void 0 ? _a : '') + \":\" + ((_b = instrumentationScope.schemaUrl) !== null && _b !== void 0 ? _b : '');\n}\n/**\n * Error that is thrown on timeouts.\n */\nvar TimeoutError = /** @class */ (function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError(message) {\n        var _this = _super.call(this, message) || this;\n        // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n        // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout(promise, timeout) {\n    var timeoutHandle;\n    var timeoutPromise = new Promise(function timeoutFunction(_resolve, reject) {\n        timeoutHandle = setTimeout(function timeoutHandler() {\n            reject(new TimeoutError('Operation timed out.'));\n        }, timeout);\n    });\n    return Promise.race([promise, timeoutPromise]).then(function (result) {\n        clearTimeout(timeoutHandle);\n        return result;\n    }, function (reason) {\n        clearTimeout(timeoutHandle);\n        throw reason;\n    });\n}\n/**\n * Node.js v12.9 lower and browser compatible `Promise.allSettled`.\n */\nexport function PromiseAllSettled(promises) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _this = this;\n        return __generator(this, function (_a) {\n            return [2 /*return*/, Promise.all(promises.map(function (p) { return __awaiter(_this, void 0, void 0, function () {\n                    var ret, e_1;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                _a.trys.push([0, 2, , 3]);\n                                return [4 /*yield*/, p];\n                            case 1:\n                                ret = _a.sent();\n                                return [2 /*return*/, {\n                                        status: 'fulfilled',\n                                        value: ret,\n                                    }];\n                            case 2:\n                                e_1 = _a.sent();\n                                return [2 /*return*/, {\n                                        status: 'rejected',\n                                        reason: e_1,\n                                    }];\n                            case 3: return [2 /*return*/];\n                        }\n                    });\n                }); }))];\n        });\n    });\n}\nexport function isPromiseAllSettledRejectionResult(it) {\n    return it.status === 'rejected';\n}\n/**\n * Node.js v11.0 lower and browser compatible `Array.prototype.flatMap`.\n */\nexport function FlatMap(arr, fn) {\n    var result = [];\n    arr.forEach(function (it) {\n        result.push.apply(result, __spreadArray([], __read(fn(it)), false));\n    });\n    return result;\n}\nexport function setEquals(lhs, rhs) {\n    var e_2, _a;\n    if (lhs.size !== rhs.size) {\n        return false;\n    }\n    try {\n        for (var lhs_1 = __values(lhs), lhs_1_1 = lhs_1.next(); !lhs_1_1.done; lhs_1_1 = lhs_1.next()) {\n            var item = lhs_1_1.value;\n            if (!rhs.has(item)) {\n                return false;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (lhs_1_1 && !lhs_1_1.done && (_a = lhs_1.return)) _a.call(lhs_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The kind of aggregator. */\nexport var AggregatorKind;\n(function (AggregatorKind) {\n    AggregatorKind[AggregatorKind[\"DROP\"] = 0] = \"DROP\";\n    AggregatorKind[AggregatorKind[\"SUM\"] = 1] = \"SUM\";\n    AggregatorKind[AggregatorKind[\"LAST_VALUE\"] = 2] = \"LAST_VALUE\";\n    AggregatorKind[AggregatorKind[\"HISTOGRAM\"] = 3] = \"HISTOGRAM\";\n})(AggregatorKind || (AggregatorKind = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AggregatorKind, } from './types';\n/** Basic aggregator for None which keeps no recorded value. */\nvar DropAggregator = /** @class */ (function () {\n    function DropAggregator() {\n        this.kind = AggregatorKind.DROP;\n    }\n    DropAggregator.prototype.createAccumulation = function () {\n        return undefined;\n    };\n    DropAggregator.prototype.merge = function (_previous, _delta) {\n        return undefined;\n    };\n    DropAggregator.prototype.diff = function (_previous, _current) {\n        return undefined;\n    };\n    DropAggregator.prototype.toMetricData = function (_descriptor, _aggregationTemporality, _accumulationByAttributes, _endTime) {\n        return undefined;\n    };\n    return DropAggregator;\n}());\nexport { DropAggregator };\n//# sourceMappingURL=Drop.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ValueType } from '@opentelemetry/api-metrics';\n/**\n * Supported types of metric instruments.\n */\nexport var InstrumentType;\n(function (InstrumentType) {\n    InstrumentType[\"COUNTER\"] = \"COUNTER\";\n    InstrumentType[\"HISTOGRAM\"] = \"HISTOGRAM\";\n    InstrumentType[\"UP_DOWN_COUNTER\"] = \"UP_DOWN_COUNTER\";\n    InstrumentType[\"OBSERVABLE_COUNTER\"] = \"OBSERVABLE_COUNTER\";\n    InstrumentType[\"OBSERVABLE_GAUGE\"] = \"OBSERVABLE_GAUGE\";\n    InstrumentType[\"OBSERVABLE_UP_DOWN_COUNTER\"] = \"OBSERVABLE_UP_DOWN_COUNTER\";\n})(InstrumentType || (InstrumentType = {}));\nexport function createInstrumentDescriptor(name, type, options) {\n    var _a, _b, _c;\n    return {\n        name: name,\n        type: type,\n        description: (_a = options === null || options === void 0 ? void 0 : options.description) !== null && _a !== void 0 ? _a : '',\n        unit: (_b = options === null || options === void 0 ? void 0 : options.unit) !== null && _b !== void 0 ? _b : '',\n        valueType: (_c = options === null || options === void 0 ? void 0 : options.valueType) !== null && _c !== void 0 ? _c : ValueType.DOUBLE,\n    };\n}\nexport function createInstrumentDescriptorWithView(view, instrument) {\n    var _a, _b;\n    return {\n        name: (_a = view.name) !== null && _a !== void 0 ? _a : instrument.name,\n        description: (_b = view.description) !== null && _b !== void 0 ? _b : instrument.description,\n        type: instrument.type,\n        unit: instrument.unit,\n        valueType: instrument.valueType,\n    };\n}\nexport function isDescriptorCompatibleWith(descriptor, otherDescriptor) {\n    return descriptor.name === otherDescriptor.name\n        && descriptor.unit === otherDescriptor.unit\n        && descriptor.type === otherDescriptor.type\n        && descriptor.valueType === otherDescriptor.valueType;\n}\n//# sourceMappingURL=InstrumentDescriptor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { AggregatorKind } from './types';\nimport { DataPointType } from '../export/MetricData';\nimport { InstrumentType } from '../InstrumentDescriptor';\nfunction createNewEmptyCheckpoint(boundaries) {\n    var counts = boundaries.map(function () { return 0; });\n    counts.push(0);\n    return {\n        buckets: {\n            boundaries: boundaries,\n            counts: counts,\n        },\n        sum: 0,\n        count: 0,\n        hasMinMax: false,\n        min: Infinity,\n        max: -Infinity\n    };\n}\nvar HistogramAccumulation = /** @class */ (function () {\n    function HistogramAccumulation(startTime, _boundaries, _recordMinMax, _current) {\n        if (_recordMinMax === void 0) { _recordMinMax = true; }\n        if (_current === void 0) { _current = createNewEmptyCheckpoint(_boundaries); }\n        this.startTime = startTime;\n        this._boundaries = _boundaries;\n        this._recordMinMax = _recordMinMax;\n        this._current = _current;\n    }\n    HistogramAccumulation.prototype.record = function (value) {\n        this._current.count += 1;\n        this._current.sum += value;\n        if (this._recordMinMax) {\n            this._current.min = Math.min(value, this._current.min);\n            this._current.max = Math.max(value, this._current.max);\n            this._current.hasMinMax = true;\n        }\n        for (var i = 0; i < this._boundaries.length; i++) {\n            if (value < this._boundaries[i]) {\n                this._current.buckets.counts[i] += 1;\n                return;\n            }\n        }\n        // value is above all observed boundaries\n        this._current.buckets.counts[this._boundaries.length] += 1;\n    };\n    HistogramAccumulation.prototype.setStartTime = function (startTime) {\n        this.startTime = startTime;\n    };\n    HistogramAccumulation.prototype.toPointValue = function () {\n        return this._current;\n    };\n    return HistogramAccumulation;\n}());\nexport { HistogramAccumulation };\n/**\n * Basic aggregator which observes events and counts them in pre-defined buckets\n * and provides the total sum and count of all observations.\n */\nvar HistogramAggregator = /** @class */ (function () {\n    /**\n     * @param _boundaries upper bounds of recorded values.\n     * @param _recordMinMax If set to true, min and max will be recorded. Otherwise, min and max will not be recorded.\n     */\n    function HistogramAggregator(_boundaries, _recordMinMax) {\n        this._boundaries = _boundaries;\n        this._recordMinMax = _recordMinMax;\n        this.kind = AggregatorKind.HISTOGRAM;\n    }\n    HistogramAggregator.prototype.createAccumulation = function (startTime) {\n        return new HistogramAccumulation(startTime, this._boundaries, this._recordMinMax);\n    };\n    /**\n     * Return the result of the merge of two histogram accumulations. As long as one Aggregator\n     * instance produces all Accumulations with constant boundaries we don't need to worry about\n     * merging accumulations with different boundaries.\n     */\n    HistogramAggregator.prototype.merge = function (previous, delta) {\n        var previousValue = previous.toPointValue();\n        var deltaValue = delta.toPointValue();\n        var previousCounts = previousValue.buckets.counts;\n        var deltaCounts = deltaValue.buckets.counts;\n        var mergedCounts = new Array(previousCounts.length);\n        for (var idx = 0; idx < previousCounts.length; idx++) {\n            mergedCounts[idx] = previousCounts[idx] + deltaCounts[idx];\n        }\n        var min = Infinity;\n        var max = -Infinity;\n        if (this._recordMinMax) {\n            if (previousValue.hasMinMax && deltaValue.hasMinMax) {\n                min = Math.min(previousValue.min, deltaValue.min);\n                max = Math.max(previousValue.max, deltaValue.max);\n            }\n            else if (previousValue.hasMinMax) {\n                min = previousValue.min;\n                max = previousValue.max;\n            }\n            else if (deltaValue.hasMinMax) {\n                min = deltaValue.min;\n                max = deltaValue.max;\n            }\n        }\n        return new HistogramAccumulation(previous.startTime, previousValue.buckets.boundaries, this._recordMinMax, {\n            buckets: {\n                boundaries: previousValue.buckets.boundaries,\n                counts: mergedCounts,\n            },\n            count: previousValue.count + deltaValue.count,\n            sum: previousValue.sum + deltaValue.sum,\n            hasMinMax: this._recordMinMax && (previousValue.hasMinMax || deltaValue.hasMinMax),\n            min: min,\n            max: max\n        });\n    };\n    /**\n     * Returns a new DELTA aggregation by comparing two cumulative measurements.\n     */\n    HistogramAggregator.prototype.diff = function (previous, current) {\n        var previousValue = previous.toPointValue();\n        var currentValue = current.toPointValue();\n        var previousCounts = previousValue.buckets.counts;\n        var currentCounts = currentValue.buckets.counts;\n        var diffedCounts = new Array(previousCounts.length);\n        for (var idx = 0; idx < previousCounts.length; idx++) {\n            diffedCounts[idx] = currentCounts[idx] - previousCounts[idx];\n        }\n        return new HistogramAccumulation(current.startTime, previousValue.buckets.boundaries, this._recordMinMax, {\n            buckets: {\n                boundaries: previousValue.buckets.boundaries,\n                counts: diffedCounts,\n            },\n            count: currentValue.count - previousValue.count,\n            sum: currentValue.sum - previousValue.sum,\n            hasMinMax: false,\n            min: Infinity,\n            max: -Infinity\n        });\n    };\n    HistogramAggregator.prototype.toMetricData = function (descriptor, aggregationTemporality, accumulationByAttributes, endTime) {\n        return {\n            descriptor: descriptor,\n            aggregationTemporality: aggregationTemporality,\n            dataPointType: DataPointType.HISTOGRAM,\n            dataPoints: accumulationByAttributes.map(function (_a) {\n                var _b = __read(_a, 2), attributes = _b[0], accumulation = _b[1];\n                var pointValue = accumulation.toPointValue();\n                // determine if instrument allows negative values.\n                var allowsNegativeValues = (descriptor.type === InstrumentType.UP_DOWN_COUNTER) ||\n                    (descriptor.type === InstrumentType.OBSERVABLE_GAUGE) ||\n                    (descriptor.type === InstrumentType.OBSERVABLE_UP_DOWN_COUNTER);\n                return {\n                    attributes: attributes,\n                    startTime: accumulation.startTime,\n                    endTime: endTime,\n                    value: {\n                        min: pointValue.hasMinMax ? pointValue.min : undefined,\n                        max: pointValue.hasMinMax ? pointValue.max : undefined,\n                        sum: !allowsNegativeValues ? pointValue.sum : undefined,\n                        buckets: pointValue.buckets,\n                        count: pointValue.count\n                    },\n                };\n            })\n        };\n    };\n    return HistogramAggregator;\n}());\nexport { HistogramAggregator };\n//# sourceMappingURL=Histogram.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nvar AnchoredClock = /** @class */ (function () {\n    /**\n     * Create a new AnchoredClock anchored to the current time returned by systemClock.\n     *\n     * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n     * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n     */\n    function AnchoredClock(systemClock, monotonicClock) {\n        this._monotonicClock = monotonicClock;\n        this._epochMillis = systemClock.now();\n        this._performanceMillis = monotonicClock.now();\n    }\n    /**\n     * Returns the current time by adding the number of milliseconds since the\n     * AnchoredClock was created to the creation epoch time\n     */\n    AnchoredClock.prototype.now = function () {\n        var delta = this._monotonicClock.now() - this._performanceMillis;\n        return this._epochMillis + delta;\n    };\n    return AnchoredClock;\n}());\nexport { AnchoredClock };\n//# sourceMappingURL=anchored-clock.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: 'none',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined' ?\n        parseEnvironment(process.env) :\n        parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","var SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n    * Name of the cloud provider.\n    */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n    * The cloud account ID the resource is assigned to.\n    */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n    * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n    */\n    CLOUD_REGION: 'cloud.region',\n    /**\n    * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n    *\n    * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n    */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n    * The cloud platform in use.\n    *\n    * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n    */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n    * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n    */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n    * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n    */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n    * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n    */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n    * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n    */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n    * The task definition family this task definition is a member of.\n    */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n    * The revision for this task definition.\n    */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n    * The ARN of an EKS cluster.\n    */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n    * The name(s) of the AWS log group(s) an application is writing to.\n    *\n    * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n    */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n    * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n    *\n    * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n    */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n    * The name(s) of the AWS log stream(s) an application is writing to.\n    */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n    * The ARN(s) of the AWS log stream(s).\n    *\n    * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n    */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n    * Container name.\n    */\n    CONTAINER_NAME: 'container.name',\n    /**\n    * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n    */\n    CONTAINER_ID: 'container.id',\n    /**\n    * The container runtime managing this container.\n    */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n    * Name of the image the container was built on.\n    */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n    * Container image tag.\n    */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n    * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n    */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n    * A unique identifier representing the device.\n    *\n    * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n    */\n    DEVICE_ID: 'device.id',\n    /**\n    * The model identifier for the device.\n    *\n    * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n    */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n    * The marketing name for the device model.\n    *\n    * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n    */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n    * The name of the single function that this runtime instance executes.\n    *\n    * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n    */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n    * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n    *\n    * Note: * **AWS Lambda:** Use the (full) log stream name.\n    */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n    * The amount of memory available to the serverless function in MiB.\n    *\n    * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n    */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n    * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n    */\n    HOST_ID: 'host.id',\n    /**\n    * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n    */\n    HOST_NAME: 'host.name',\n    /**\n    * Type of host. For Cloud, this must be the machine type.\n    */\n    HOST_TYPE: 'host.type',\n    /**\n    * The CPU architecture the host system is running on.\n    */\n    HOST_ARCH: 'host.arch',\n    /**\n    * Name of the VM image or OS install the host was instantiated from.\n    */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n    * VM image ID. For Cloud, this value is from the provider.\n    */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n    * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n    */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n    * The name of the cluster.\n    */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n    * The name of the Node.\n    */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n    * The UID of the Node.\n    */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n    * The name of the namespace that the pod is running in.\n    */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n    * The UID of the Pod.\n    */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n    * The name of the Pod.\n    */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n    * The name of the Container in a Pod template.\n    */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n    * The UID of the ReplicaSet.\n    */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n    * The name of the ReplicaSet.\n    */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n    * The UID of the Deployment.\n    */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n    * The name of the Deployment.\n    */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n    * The UID of the StatefulSet.\n    */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n    * The name of the StatefulSet.\n    */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n    * The UID of the DaemonSet.\n    */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n    * The name of the DaemonSet.\n    */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n    * The UID of the Job.\n    */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n    * The name of the Job.\n    */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n    * The UID of the CronJob.\n    */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n    * The name of the CronJob.\n    */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n    * The operating system type.\n    */\n    OS_TYPE: 'os.type',\n    /**\n    * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n    */\n    OS_DESCRIPTION: 'os.description',\n    /**\n    * Human readable operating system name.\n    */\n    OS_NAME: 'os.name',\n    /**\n    * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n    */\n    OS_VERSION: 'os.version',\n    /**\n    * Process identifier (PID).\n    */\n    PROCESS_PID: 'process.pid',\n    /**\n    * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n    * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n    * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n    */\n    PROCESS_COMMAND: 'process.command',\n    /**\n    * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n    */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n    * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n    */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n    * The username of the user that owns the process.\n    */\n    PROCESS_OWNER: 'process.owner',\n    /**\n    * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n    */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n    * The version of the runtime of this process, as returned by the runtime without modification.\n    */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n    * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n    */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n    * Logical name of the service.\n    *\n    * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n    */\n    SERVICE_NAME: 'service.name',\n    /**\n    * A namespace for `service.name`.\n    *\n    * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n    */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n    * The string ID of the service instance.\n    *\n    * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n    */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n    * The version string of the service API or implementation.\n    */\n    SERVICE_VERSION: 'service.version',\n    /**\n    * The name of the telemetry SDK as defined above.\n    */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n    * The language of the telemetry SDK.\n    */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n    * The version string of the telemetry SDK.\n    */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n    * The version string of the auto instrumentation agent, if used.\n    */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n    * The name of the web engine.\n    */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n    * The version of the web engine.\n    */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n    * Additional description of the web engine (e.g. detailed version and edition information).\n    */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.7.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = numberToHrtime(getTimeOrigin());\n    var now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    var seconds = timeOrigin[0] + now[0];\n    var nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false)))\n                    .then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { AggregatorKind } from './types';\nimport { hrTime, hrTimeToMicroseconds } from '@opentelemetry/core';\nimport { DataPointType } from '../export/MetricData';\nvar LastValueAccumulation = /** @class */ (function () {\n    function LastValueAccumulation(startTime, _current, sampleTime) {\n        if (_current === void 0) { _current = 0; }\n        if (sampleTime === void 0) { sampleTime = [0, 0]; }\n        this.startTime = startTime;\n        this._current = _current;\n        this.sampleTime = sampleTime;\n    }\n    LastValueAccumulation.prototype.record = function (value) {\n        this._current = value;\n        this.sampleTime = hrTime();\n    };\n    LastValueAccumulation.prototype.setStartTime = function (startTime) {\n        this.startTime = startTime;\n    };\n    LastValueAccumulation.prototype.toPointValue = function () {\n        return this._current;\n    };\n    return LastValueAccumulation;\n}());\nexport { LastValueAccumulation };\n/** Basic aggregator which calculates a LastValue from individual measurements. */\nvar LastValueAggregator = /** @class */ (function () {\n    function LastValueAggregator() {\n        this.kind = AggregatorKind.LAST_VALUE;\n    }\n    LastValueAggregator.prototype.createAccumulation = function (startTime) {\n        return new LastValueAccumulation(startTime);\n    };\n    /**\n     * Returns the result of the merge of the given accumulations.\n     *\n     * Return the newly captured (delta) accumulation for LastValueAggregator.\n     */\n    LastValueAggregator.prototype.merge = function (previous, delta) {\n        // nanoseconds may lose precisions.\n        var latestAccumulation = hrTimeToMicroseconds(delta.sampleTime) >= hrTimeToMicroseconds(previous.sampleTime) ? delta : previous;\n        return new LastValueAccumulation(previous.startTime, latestAccumulation.toPointValue(), latestAccumulation.sampleTime);\n    };\n    /**\n     * Returns a new DELTA aggregation by comparing two cumulative measurements.\n     *\n     * A delta aggregation is not meaningful to LastValueAggregator, just return\n     * the newly captured (delta) accumulation for LastValueAggregator.\n     */\n    LastValueAggregator.prototype.diff = function (previous, current) {\n        // nanoseconds may lose precisions.\n        var latestAccumulation = hrTimeToMicroseconds(current.sampleTime) >= hrTimeToMicroseconds(previous.sampleTime) ? current : previous;\n        return new LastValueAccumulation(current.startTime, latestAccumulation.toPointValue(), latestAccumulation.sampleTime);\n    };\n    LastValueAggregator.prototype.toMetricData = function (descriptor, aggregationTemporality, accumulationByAttributes, endTime) {\n        return {\n            descriptor: descriptor,\n            aggregationTemporality: aggregationTemporality,\n            dataPointType: DataPointType.GAUGE,\n            dataPoints: accumulationByAttributes.map(function (_a) {\n                var _b = __read(_a, 2), attributes = _b[0], accumulation = _b[1];\n                return {\n                    attributes: attributes,\n                    startTime: accumulation.startTime,\n                    endTime: endTime,\n                    value: accumulation.toPointValue(),\n                };\n            })\n        };\n    };\n    return LastValueAggregator;\n}());\nexport { LastValueAggregator };\n//# sourceMappingURL=LastValue.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { AggregatorKind } from './types';\nimport { DataPointType } from '../export/MetricData';\nvar SumAccumulation = /** @class */ (function () {\n    function SumAccumulation(startTime, monotonic, _current, reset) {\n        if (_current === void 0) { _current = 0; }\n        if (reset === void 0) { reset = false; }\n        this.startTime = startTime;\n        this.monotonic = monotonic;\n        this._current = _current;\n        this.reset = reset;\n    }\n    SumAccumulation.prototype.record = function (value) {\n        if (this.monotonic && value < 0) {\n            return;\n        }\n        this._current += value;\n    };\n    SumAccumulation.prototype.setStartTime = function (startTime) {\n        this.startTime = startTime;\n    };\n    SumAccumulation.prototype.toPointValue = function () {\n        return this._current;\n    };\n    return SumAccumulation;\n}());\nexport { SumAccumulation };\n/** Basic aggregator which calculates a Sum from individual measurements. */\nvar SumAggregator = /** @class */ (function () {\n    function SumAggregator(monotonic) {\n        this.monotonic = monotonic;\n        this.kind = AggregatorKind.SUM;\n    }\n    SumAggregator.prototype.createAccumulation = function (startTime) {\n        return new SumAccumulation(startTime, this.monotonic);\n    };\n    /**\n     * Returns the result of the merge of the given accumulations.\n     */\n    SumAggregator.prototype.merge = function (previous, delta) {\n        var prevPv = previous.toPointValue();\n        var deltaPv = delta.toPointValue();\n        if (delta.reset) {\n            return new SumAccumulation(delta.startTime, this.monotonic, deltaPv, delta.reset);\n        }\n        return new SumAccumulation(previous.startTime, this.monotonic, prevPv + deltaPv);\n    };\n    /**\n     * Returns a new DELTA aggregation by comparing two cumulative measurements.\n     */\n    SumAggregator.prototype.diff = function (previous, current) {\n        var prevPv = previous.toPointValue();\n        var currPv = current.toPointValue();\n        /**\n         * If the SumAggregator is a monotonic one and the previous point value is\n         * greater than the current one, a reset is deemed to be happened.\n         * Return the current point value to prevent the value from been reset.\n         */\n        if (this.monotonic && (prevPv > currPv)) {\n            return new SumAccumulation(current.startTime, this.monotonic, currPv, true);\n        }\n        return new SumAccumulation(current.startTime, this.monotonic, currPv - prevPv);\n    };\n    SumAggregator.prototype.toMetricData = function (descriptor, aggregationTemporality, accumulationByAttributes, endTime) {\n        return {\n            descriptor: descriptor,\n            aggregationTemporality: aggregationTemporality,\n            dataPointType: DataPointType.SUM,\n            dataPoints: accumulationByAttributes.map(function (_a) {\n                var _b = __read(_a, 2), attributes = _b[0], accumulation = _b[1];\n                return {\n                    attributes: attributes,\n                    startTime: accumulation.startTime,\n                    endTime: endTime,\n                    value: accumulation.toPointValue(),\n                };\n            }),\n            isMonotonic: this.monotonic\n        };\n    };\n    return SumAggregator;\n}());\nexport { SumAggregator };\n//# sourceMappingURL=Sum.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as api from '@opentelemetry/api';\nimport { SumAggregator, DropAggregator, LastValueAggregator, HistogramAggregator } from '../aggregator';\nimport { InstrumentType } from '../InstrumentDescriptor';\n/**\n * Configures how measurements are combined into metrics for views.\n *\n * Aggregation provides a set of built-in aggregations via static methods.\n */\nvar Aggregation = /** @class */ (function () {\n    function Aggregation() {\n    }\n    Aggregation.Drop = function () {\n        return DROP_AGGREGATION;\n    };\n    Aggregation.Sum = function () {\n        return SUM_AGGREGATION;\n    };\n    Aggregation.LastValue = function () {\n        return LAST_VALUE_AGGREGATION;\n    };\n    Aggregation.Histogram = function () {\n        return HISTOGRAM_AGGREGATION;\n    };\n    Aggregation.Default = function () {\n        return DEFAULT_AGGREGATION;\n    };\n    return Aggregation;\n}());\nexport { Aggregation };\n/**\n * The default drop aggregation.\n */\nvar DropAggregation = /** @class */ (function (_super) {\n    __extends(DropAggregation, _super);\n    function DropAggregation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DropAggregation.prototype.createAggregator = function (_instrument) {\n        return DropAggregation.DEFAULT_INSTANCE;\n    };\n    DropAggregation.DEFAULT_INSTANCE = new DropAggregator();\n    return DropAggregation;\n}(Aggregation));\nexport { DropAggregation };\n/**\n * The default sum aggregation.\n */\nvar SumAggregation = /** @class */ (function (_super) {\n    __extends(SumAggregation, _super);\n    function SumAggregation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SumAggregation.prototype.createAggregator = function (instrument) {\n        switch (instrument.type) {\n            case InstrumentType.COUNTER:\n            case InstrumentType.OBSERVABLE_COUNTER:\n            case InstrumentType.HISTOGRAM: {\n                return SumAggregation.MONOTONIC_INSTANCE;\n            }\n            default: {\n                return SumAggregation.NON_MONOTONIC_INSTANCE;\n            }\n        }\n    };\n    SumAggregation.MONOTONIC_INSTANCE = new SumAggregator(true);\n    SumAggregation.NON_MONOTONIC_INSTANCE = new SumAggregator(false);\n    return SumAggregation;\n}(Aggregation));\nexport { SumAggregation };\n/**\n * The default last value aggregation.\n */\nvar LastValueAggregation = /** @class */ (function (_super) {\n    __extends(LastValueAggregation, _super);\n    function LastValueAggregation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LastValueAggregation.prototype.createAggregator = function (_instrument) {\n        return LastValueAggregation.DEFAULT_INSTANCE;\n    };\n    LastValueAggregation.DEFAULT_INSTANCE = new LastValueAggregator();\n    return LastValueAggregation;\n}(Aggregation));\nexport { LastValueAggregation };\n/**\n * The default histogram aggregation.\n */\nvar HistogramAggregation = /** @class */ (function (_super) {\n    __extends(HistogramAggregation, _super);\n    function HistogramAggregation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HistogramAggregation.prototype.createAggregator = function (_instrument) {\n        return HistogramAggregation.DEFAULT_INSTANCE;\n    };\n    HistogramAggregation.DEFAULT_INSTANCE = new HistogramAggregator([0, 5, 10, 25, 50, 75, 100, 250, 500, 1000], true);\n    return HistogramAggregation;\n}(Aggregation));\nexport { HistogramAggregation };\n/**\n * The explicit bucket histogram aggregation.\n */\nvar ExplicitBucketHistogramAggregation = /** @class */ (function (_super) {\n    __extends(ExplicitBucketHistogramAggregation, _super);\n    /**\n     * @param boundaries the bucket boundaries of the histogram aggregation\n     * @param _recordMinMax If set to true, min and max will be recorded. Otherwise, min and max will not be recorded.\n     */\n    function ExplicitBucketHistogramAggregation(boundaries, _recordMinMax) {\n        if (_recordMinMax === void 0) { _recordMinMax = true; }\n        var _this = _super.call(this) || this;\n        _this._recordMinMax = _recordMinMax;\n        if (boundaries === undefined || boundaries.length === 0) {\n            throw new Error('HistogramAggregator should be created with boundaries.');\n        }\n        // Copy the boundaries array for modification.\n        boundaries = boundaries.concat();\n        // We need to an ordered set to be able to correctly compute count for each\n        // boundary since we'll iterate on each in order.\n        boundaries = boundaries.sort(function (a, b) { return a - b; });\n        // Remove all Infinity from the boundaries.\n        var minusInfinityIndex = boundaries.lastIndexOf(-Infinity);\n        var infinityIndex = boundaries.indexOf(Infinity);\n        if (infinityIndex === -1) {\n            infinityIndex = undefined;\n        }\n        _this._boundaries = boundaries.slice(minusInfinityIndex + 1, infinityIndex);\n        return _this;\n    }\n    ExplicitBucketHistogramAggregation.prototype.createAggregator = function (_instrument) {\n        return new HistogramAggregator(this._boundaries, this._recordMinMax);\n    };\n    return ExplicitBucketHistogramAggregation;\n}(Aggregation));\nexport { ExplicitBucketHistogramAggregation };\n/**\n * The default aggregation.\n */\nvar DefaultAggregation = /** @class */ (function (_super) {\n    __extends(DefaultAggregation, _super);\n    function DefaultAggregation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefaultAggregation.prototype._resolve = function (instrument) {\n        // cast to unknown to disable complaints on the (unreachable) fallback.\n        switch (instrument.type) {\n            case InstrumentType.COUNTER:\n            case InstrumentType.UP_DOWN_COUNTER:\n            case InstrumentType.OBSERVABLE_COUNTER:\n            case InstrumentType.OBSERVABLE_UP_DOWN_COUNTER: {\n                return SUM_AGGREGATION;\n            }\n            case InstrumentType.OBSERVABLE_GAUGE: {\n                return LAST_VALUE_AGGREGATION;\n            }\n            case InstrumentType.HISTOGRAM: {\n                return HISTOGRAM_AGGREGATION;\n            }\n        }\n        api.diag.warn(\"Unable to recognize instrument type: \" + instrument.type);\n        return DROP_AGGREGATION;\n    };\n    DefaultAggregation.prototype.createAggregator = function (instrument) {\n        return this._resolve(instrument).createAggregator(instrument);\n    };\n    return DefaultAggregation;\n}(Aggregation));\nexport { DefaultAggregation };\nvar DROP_AGGREGATION = new DropAggregation();\nvar SUM_AGGREGATION = new SumAggregation();\nvar LAST_VALUE_AGGREGATION = new LastValueAggregation();\nvar HISTOGRAM_AGGREGATION = new HistogramAggregation();\nvar DEFAULT_AGGREGATION = new DefaultAggregation();\n//# sourceMappingURL=Aggregation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregation } from '../view/Aggregation';\nimport { AggregationTemporality } from './AggregationTemporality';\nexport var DEFAULT_AGGREGATION_SELECTOR = function (_instrumentType) { return Aggregation.Default(); };\nexport var DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR = function (_instrumentType) { return AggregationTemporality.CUMULATIVE; };\n//# sourceMappingURL=AggregationSelector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport * as api from '@opentelemetry/api';\nimport { callWithTimeout } from '../utils';\nimport { DEFAULT_AGGREGATION_SELECTOR, DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR } from './AggregationSelector';\n/**\n * A registered reader of metrics that, when linked to a {@link MetricProducer}, offers global\n * control over metrics.\n */\nvar MetricReader = /** @class */ (function () {\n    function MetricReader(options) {\n        var _a, _b;\n        // Tracks the shutdown state.\n        // TODO: use BindOncePromise here once a new version of @opentelemetry/core is available.\n        this._shutdown = false;\n        this._aggregationSelector = (_a = options === null || options === void 0 ? void 0 : options.aggregationSelector) !== null && _a !== void 0 ? _a : DEFAULT_AGGREGATION_SELECTOR;\n        this._aggregationTemporalitySelector = (_b = options === null || options === void 0 ? void 0 : options.aggregationTemporalitySelector) !== null && _b !== void 0 ? _b : DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR;\n    }\n    /**\n     * Set the {@link MetricProducer} used by this instance.\n     *\n     * @param metricProducer\n     */\n    MetricReader.prototype.setMetricProducer = function (metricProducer) {\n        if (this._metricProducer) {\n            throw new Error('MetricReader can not be bound to a MeterProvider again.');\n        }\n        this._metricProducer = metricProducer;\n        this.onInitialized();\n    };\n    /**\n     * Select the {@link Aggregation} for the given {@link InstrumentType} for this\n     * reader.\n     */\n    MetricReader.prototype.selectAggregation = function (instrumentType) {\n        return this._aggregationSelector(instrumentType);\n    };\n    /**\n     * Select the {@link AggregationTemporality} for the given\n     * {@link InstrumentType} for this reader.\n     */\n    MetricReader.prototype.selectAggregationTemporality = function (instrumentType) {\n        return this._aggregationTemporalitySelector(instrumentType);\n    };\n    /**\n     * Handle once the SDK has initialized this {@link MetricReader}\n     * Overriding this method is optional.\n     */\n    MetricReader.prototype.onInitialized = function () {\n        // Default implementation is empty.\n    };\n    /**\n     * Collect all metrics from the associated {@link MetricProducer}\n     */\n    MetricReader.prototype.collect = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this._metricProducer === undefined) {\n                    throw new Error('MetricReader is not bound to a MetricProducer');\n                }\n                // Subsequent invocations to collect are not allowed. SDKs SHOULD return some failure for these calls.\n                if (this._shutdown) {\n                    throw new Error('MetricReader is shutdown');\n                }\n                return [2 /*return*/, this._metricProducer.collect({\n                        timeoutMillis: options === null || options === void 0 ? void 0 : options.timeoutMillis,\n                    })];\n            });\n        });\n    };\n    /**\n     * Shuts down the metric reader, the promise will reject after the optional timeout or resolve after completion.\n     *\n     * <p> NOTE: this operation will continue even after the promise rejects due to a timeout.\n     * @param options options with timeout.\n     */\n    MetricReader.prototype.shutdown = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // Do not call shutdown again if it has already been called.\n                        if (this._shutdown) {\n                            api.diag.error('Cannot call shutdown twice.');\n                            return [2 /*return*/];\n                        }\n                        if (!((options === null || options === void 0 ? void 0 : options.timeoutMillis) == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.onShutdown()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, callWithTimeout(this.onShutdown(), options.timeoutMillis)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        this._shutdown = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Flushes metrics read by this reader, the promise will reject after the optional timeout or resolve after completion.\n     *\n     * <p> NOTE: this operation will continue even after the promise rejects due to a timeout.\n     * @param options options with timeout.\n     */\n    MetricReader.prototype.forceFlush = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._shutdown) {\n                            api.diag.warn('Cannot forceFlush on already shutdown MetricReader.');\n                            return [2 /*return*/];\n                        }\n                        if (!((options === null || options === void 0 ? void 0 : options.timeoutMillis) == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.onForceFlush()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2: return [4 /*yield*/, callWithTimeout(this.onForceFlush(), options.timeoutMillis)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return MetricReader;\n}());\nexport { MetricReader };\n//# sourceMappingURL=MetricReader.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as api from '@opentelemetry/api';\nimport { ExportResultCode, globalErrorHandler, unrefTimer } from '@opentelemetry/core';\nimport { MetricReader } from './MetricReader';\nimport { callWithTimeout, TimeoutError } from '../utils';\n/**\n * {@link MetricReader} which collects metrics based on a user-configurable time interval, and passes the metrics to\n * the configured {@link PushMetricExporter}\n */\nvar PeriodicExportingMetricReader = /** @class */ (function (_super) {\n    __extends(PeriodicExportingMetricReader, _super);\n    function PeriodicExportingMetricReader(options) {\n        var _a, _b, _c, _d;\n        var _this = _super.call(this, {\n            aggregationSelector: (_a = options.exporter.selectAggregation) === null || _a === void 0 ? void 0 : _a.bind(options.exporter),\n            aggregationTemporalitySelector: (_b = options.exporter.selectAggregationTemporality) === null || _b === void 0 ? void 0 : _b.bind(options.exporter)\n        }) || this;\n        if (options.exportIntervalMillis !== undefined && options.exportIntervalMillis <= 0) {\n            throw Error('exportIntervalMillis must be greater than 0');\n        }\n        if (options.exportTimeoutMillis !== undefined && options.exportTimeoutMillis <= 0) {\n            throw Error('exportTimeoutMillis must be greater than 0');\n        }\n        if (options.exportTimeoutMillis !== undefined &&\n            options.exportIntervalMillis !== undefined &&\n            options.exportIntervalMillis < options.exportTimeoutMillis) {\n            throw Error('exportIntervalMillis must be greater than or equal to exportTimeoutMillis');\n        }\n        _this._exportInterval = (_c = options.exportIntervalMillis) !== null && _c !== void 0 ? _c : 60000;\n        _this._exportTimeout = (_d = options.exportTimeoutMillis) !== null && _d !== void 0 ? _d : 30000;\n        _this._exporter = options.exporter;\n        return _this;\n    }\n    PeriodicExportingMetricReader.prototype._runOnce = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, resourceMetrics, errors;\n            var _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.collect({})];\n                    case 1:\n                        _a = _c.sent(), resourceMetrics = _a.resourceMetrics, errors = _a.errors;\n                        if (errors.length > 0) {\n                            (_b = api.diag).error.apply(_b, __spreadArray(['PeriodicExportingMetricReader: metrics collection errors'], __read(errors), false));\n                        }\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                _this._exporter.export(resourceMetrics, function (result) {\n                                    var _a;\n                                    if (result.code !== ExportResultCode.SUCCESS) {\n                                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error(\"PeriodicExportingMetricReader: metrics export failed (error \" + result.error + \")\"));\n                                    }\n                                    else {\n                                        resolve();\n                                    }\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    PeriodicExportingMetricReader.prototype.onInitialized = function () {\n        var _this = this;\n        // start running the interval as soon as this reader is initialized and keep handle for shutdown.\n        this._interval = setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\n            var err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, callWithTimeout(this._runOnce(), this._exportTimeout)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        if (err_1 instanceof TimeoutError) {\n                            api.diag.error('Export took longer than %s milliseconds and timed out.', this._exportTimeout);\n                            return [2 /*return*/];\n                        }\n                        globalErrorHandler(err_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); }, this._exportInterval);\n        unrefTimer(this._interval);\n    };\n    PeriodicExportingMetricReader.prototype.onForceFlush = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._exporter.forceFlush()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PeriodicExportingMetricReader.prototype.onShutdown = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._interval) {\n                            clearInterval(this._interval);\n                        }\n                        return [4 /*yield*/, this._exporter.shutdown()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return PeriodicExportingMetricReader;\n}(MetricReader));\nexport { PeriodicExportingMetricReader };\n//# sourceMappingURL=PeriodicExportingMetricReader.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\nimport { AggregationTemporality } from './AggregationTemporality';\n/* eslint-disable no-console */\nvar ConsoleMetricExporter = /** @class */ (function () {\n    function ConsoleMetricExporter() {\n        this._shutdown = false;\n    }\n    ConsoleMetricExporter.prototype.export = function (metrics, resultCallback) {\n        if (this._shutdown) {\n            // If the exporter is shutting down, by spec, we need to return FAILED as export result\n            setImmediate(resultCallback, { code: ExportResultCode.FAILED });\n            return;\n        }\n        return ConsoleMetricExporter._sendMetrics(metrics, resultCallback);\n    };\n    ConsoleMetricExporter.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    ConsoleMetricExporter.prototype.selectAggregationTemporality = function (_instrumentType) {\n        return AggregationTemporality.CUMULATIVE;\n    };\n    ConsoleMetricExporter.prototype.shutdown = function () {\n        this._shutdown = true;\n        return Promise.resolve();\n    };\n    ConsoleMetricExporter._sendMetrics = function (metrics, done) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = __values(metrics.scopeMetrics), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var scopeMetrics = _d.value;\n                try {\n                    for (var _e = (e_2 = void 0, __values(scopeMetrics.metrics)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var metric = _f.value;\n                        console.dir({\n                            descriptor: metric.descriptor,\n                            dataPointType: metric.dataPointType,\n                            dataPoints: metric.dataPoints\n                        });\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        done({ code: ExportResultCode.SUCCESS });\n    };\n    return ConsoleMetricExporter;\n}());\nexport { ConsoleMetricExporter };\n//# sourceMappingURL=ConsoleMetricExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * In-memory Metrics Exporter is a Push Metric Exporter\n * which accumulates metrics data in the local memory and\n * allows to inspect it (useful for e.g. unit tests).\n */\nvar InMemoryMetricExporter = /** @class */ (function () {\n    function InMemoryMetricExporter(aggregationTemporality) {\n        this._shutdown = false;\n        this._metrics = [];\n        this._aggregationTemporality = aggregationTemporality;\n    }\n    /**\n     * @inheritedDoc\n     */\n    InMemoryMetricExporter.prototype.export = function (metrics, resultCallback) {\n        // Avoid storing metrics when exporter is shutdown\n        if (this._shutdown) {\n            setTimeout(function () { return resultCallback({ code: ExportResultCode.FAILED }); }, 0);\n            return;\n        }\n        this._metrics.push(metrics);\n        setTimeout(function () { return resultCallback({ code: ExportResultCode.SUCCESS }); }, 0);\n    };\n    /**\n     * Returns all the collected resource metrics\n     * @returns ResourceMetrics[]\n     */\n    InMemoryMetricExporter.prototype.getMetrics = function () {\n        return this._metrics;\n    };\n    InMemoryMetricExporter.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    InMemoryMetricExporter.prototype.reset = function () {\n        this._metrics = [];\n    };\n    InMemoryMetricExporter.prototype.selectAggregationTemporality = function (_instrumentType) {\n        return this._aggregationTemporality;\n    };\n    InMemoryMetricExporter.prototype.shutdown = function () {\n        this._shutdown = true;\n        return Promise.resolve();\n    };\n    return InMemoryMetricExporter;\n}());\nexport { InMemoryMetricExporter };\n//# sourceMappingURL=InMemoryMetricExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Resource } from '../../Resource';\nimport { diag } from '@opentelemetry/api';\n/**\n * Runs all resource detectors and returns the results merged into a single\n * Resource.\n *\n * @param config Configuration for resource detection\n */\nexport var detectResources = function (config) {\n    if (config === void 0) { config = {}; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var internalConfig, resources;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    internalConfig = Object.assign(config);\n                    return [4 /*yield*/, Promise.all((internalConfig.detectors || []).map(function (d) { return __awaiter(void 0, void 0, void 0, function () {\n                            var resource, e_1;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        _a.trys.push([0, 2, , 3]);\n                                        return [4 /*yield*/, d.detect(internalConfig)];\n                                    case 1:\n                                        resource = _a.sent();\n                                        diag.debug(d.constructor.name + \" found resource.\", resource);\n                                        return [2 /*return*/, resource];\n                                    case 2:\n                                        e_1 = _a.sent();\n                                        diag.debug(d.constructor.name + \" failed: \" + e_1.message);\n                                        return [2 /*return*/, Resource.empty()];\n                                    case 3: return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                case 1:\n                    resources = _a.sent();\n                    return [2 /*return*/, resources.reduce(function (acc, resource) { return acc.merge(resource); }, Resource.empty())];\n            }\n        });\n    });\n};\n//# sourceMappingURL=detect-resources.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Resource } from '../Resource';\nvar NoopDetector = /** @class */ (function () {\n    function NoopDetector() {\n    }\n    NoopDetector.prototype.detect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Resource({})];\n            });\n        });\n    };\n    return NoopDetector;\n}());\nexport { NoopDetector };\nexport var noopDetector = new NoopDetector();\n//# sourceMappingURL=NoopDetector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { defaultServiceName } from './platform';\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nvar Resource = /** @class */ (function () {\n    function Resource(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    Resource.empty = function () {\n        return Resource.EMPTY;\n    };\n    /**\n     * Returns a Resource that indentifies the SDK in use.\n     */\n    Resource.default = function () {\n        var _a;\n        return new Resource((_a = {},\n            _a[SemanticResourceAttributes.SERVICE_NAME] = defaultServiceName(),\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n            _a));\n    };\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    Resource.prototype.merge = function (other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // SpanAttributes from resource overwrite attributes from other resource.\n        var mergedAttributes = Object.assign({}, this.attributes, other.attributes);\n        return new Resource(mergedAttributes);\n    };\n    Resource.EMPTY = new Resource({});\n    return Resource;\n}());\nexport { Resource };\n//# sourceMappingURL=Resource.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function defaultServiceName() {\n    return 'unknown_service';\n}\n//# sourceMappingURL=default-service-name.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '..';\n/**\n * BrowserDetector will be used to detect the resources related to browser.\n */\nvar BrowserDetector = /** @class */ (function () {\n    function BrowserDetector() {\n    }\n    BrowserDetector.prototype.detect = function (config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isBrowser, browserResource;\n            var _a;\n            return __generator(this, function (_b) {\n                isBrowser = typeof navigator !== 'undefined';\n                if (!isBrowser) {\n                    return [2 /*return*/, Resource.empty()];\n                }\n                browserResource = (_a = {},\n                    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n                    _a[SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION] = 'Web Browser',\n                    _a[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] = navigator.userAgent,\n                    _a);\n                return [2 /*return*/, this._getResourceAttributes(browserResource, config)];\n            });\n        });\n    };\n    /**\n     * Validates process resource attribute map from process variables\n     *\n     * @param browserResource The un-sanitized resource attributes from process as key/value pairs.\n     * @param config: Config\n     * @returns The sanitized resource attributes.\n     */\n    BrowserDetector.prototype._getResourceAttributes = function (browserResource, _config) {\n        if (browserResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === '') {\n            diag.debug('BrowserDetector failed: Unable to find required browser resources. ');\n            return Resource.empty();\n        }\n        else {\n            return new Resource(__assign({}, browserResource));\n        }\n    };\n    return BrowserDetector;\n}());\nexport var browserDetector = new BrowserDetector();\n//# sourceMappingURL=BrowserDetector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\n/**\n * EnvDetector can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nvar EnvDetector = /** @class */ (function () {\n    function EnvDetector() {\n        // Type, attribute keys, and attribute values should not exceed 256 characters.\n        this._MAX_LENGTH = 255;\n        // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n        this._COMMA_SEPARATOR = ',';\n        // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n        this._LABEL_KEY_VALUE_SPLITTER = '=';\n        this._ERROR_MESSAGE_INVALID_CHARS = 'should be a ASCII string with a length greater than 0 and not exceed ' +\n            this._MAX_LENGTH +\n            ' characters.';\n        this._ERROR_MESSAGE_INVALID_VALUE = 'should be a ASCII string with a length not exceed ' +\n            this._MAX_LENGTH +\n            ' characters.';\n    }\n    /**\n     * Returns a {@link Resource} populated with attributes from the\n     * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n     * function to conform to the Detector interface.\n     *\n     * @param config The resource detection config\n     */\n    EnvDetector.prototype.detect = function (_config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var attributes, env, rawAttributes, serviceName, parsedAttributes;\n            return __generator(this, function (_a) {\n                attributes = {};\n                env = getEnv();\n                rawAttributes = env.OTEL_RESOURCE_ATTRIBUTES;\n                serviceName = env.OTEL_SERVICE_NAME;\n                if (rawAttributes) {\n                    try {\n                        parsedAttributes = this._parseResourceAttributes(rawAttributes);\n                        Object.assign(attributes, parsedAttributes);\n                    }\n                    catch (e) {\n                        diag.debug(\"EnvDetector failed: \" + e.message);\n                    }\n                }\n                if (serviceName) {\n                    attributes[SemanticResourceAttributes.SERVICE_NAME] = serviceName;\n                }\n                return [2 /*return*/, new Resource(attributes)];\n            });\n        });\n    };\n    /**\n     * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n     * variable.\n     *\n     * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n     * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n     * paths are accepted as attribute keys. Values may be quoted or unquoted in\n     * general. If a value contains whitespaces, =, or \" characters, it must\n     * always be quoted.\n     *\n     * @param rawEnvAttributes The resource attributes as a comma-seperated list\n     * of key/value pairs.\n     * @returns The sanitized resource attributes.\n     */\n    EnvDetector.prototype._parseResourceAttributes = function (rawEnvAttributes) {\n        var e_1, _a;\n        if (!rawEnvAttributes)\n            return {};\n        var attributes = {};\n        var rawAttributes = rawEnvAttributes.split(this._COMMA_SEPARATOR, -1);\n        try {\n            for (var rawAttributes_1 = __values(rawAttributes), rawAttributes_1_1 = rawAttributes_1.next(); !rawAttributes_1_1.done; rawAttributes_1_1 = rawAttributes_1.next()) {\n                var rawAttribute = rawAttributes_1_1.value;\n                var keyValuePair = rawAttribute.split(this._LABEL_KEY_VALUE_SPLITTER, -1);\n                if (keyValuePair.length !== 2) {\n                    continue;\n                }\n                var _b = __read(keyValuePair, 2), key = _b[0], value = _b[1];\n                // Leading and trailing whitespaces are trimmed.\n                key = key.trim();\n                value = value.trim().split('^\"|\"$').join('');\n                if (!this._isValidAndNotEmpty(key)) {\n                    throw new Error(\"Attribute key \" + this._ERROR_MESSAGE_INVALID_CHARS);\n                }\n                if (!this._isValid(value)) {\n                    throw new Error(\"Attribute value \" + this._ERROR_MESSAGE_INVALID_VALUE);\n                }\n                attributes[key] = value;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (rawAttributes_1_1 && !rawAttributes_1_1.done && (_a = rawAttributes_1.return)) _a.call(rawAttributes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return attributes;\n    };\n    /**\n     * Determines whether the given String is a valid printable ASCII string with\n     * a length not exceed _MAX_LENGTH characters.\n     *\n     * @param str The String to be validated.\n     * @returns Whether the String is valid.\n     */\n    EnvDetector.prototype._isValid = function (name) {\n        return name.length <= this._MAX_LENGTH && this._isPrintableString(name);\n    };\n    EnvDetector.prototype._isPrintableString = function (str) {\n        for (var i = 0; i < str.length; i++) {\n            var ch = str.charAt(i);\n            if (ch <= ' ' || ch >= '~') {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Determines whether the given String is a valid printable ASCII string with\n     * a length greater than 0 and not exceed _MAX_LENGTH characters.\n     *\n     * @param str The String to be validated.\n     * @returns Whether the String is valid and not empty.\n     */\n    EnvDetector.prototype._isValidAndNotEmpty = function (str) {\n        return str.length > 0 && this._isValid(str);\n    };\n    return EnvDetector;\n}());\nexport var envDetector = new EnvDetector();\n//# sourceMappingURL=EnvDetector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\n/**\n * ProcessDetector will be used to detect the resources related current process running\n * and being instrumented from the NodeJS Process module.\n */\nvar ProcessDetector = /** @class */ (function () {\n    function ProcessDetector() {\n    }\n    ProcessDetector.prototype.detect = function (config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var processResource;\n            var _a;\n            return __generator(this, function (_b) {\n                // Skip if not in Node.js environment.\n                if (typeof process !== 'object') {\n                    return [2 /*return*/, Resource.empty()];\n                }\n                processResource = (_a = {},\n                    _a[SemanticResourceAttributes.PROCESS_PID] = process.pid,\n                    _a[SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME] = process.title || '',\n                    _a[SemanticResourceAttributes.PROCESS_COMMAND] = process.argv[1] || '',\n                    _a[SemanticResourceAttributes.PROCESS_COMMAND_LINE] = process.argv.join(' ') || '',\n                    _a[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] = process.versions.node,\n                    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'nodejs',\n                    _a[SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION] = 'Node.js',\n                    _a);\n                return [2 /*return*/, this._getResourceAttributes(processResource, config)];\n            });\n        });\n    };\n    /**\n     * Validates process resource attribute map from process varaibls\n     *\n     * @param processResource The unsantized resource attributes from process as key/value pairs.\n     * @param config: Config\n     * @returns The sanitized resource attributes.\n     */\n    ProcessDetector.prototype._getResourceAttributes = function (processResource, _config) {\n        if (processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME] ===\n            '' ||\n            processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_PATH] ===\n                '' ||\n            processResource[SemanticResourceAttributes.PROCESS_COMMAND] === '' ||\n            processResource[SemanticResourceAttributes.PROCESS_COMMAND_LINE] === '' ||\n            processResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === '') {\n            diag.debug('ProcessDetector failed: Unable to find required process resources. ');\n            return Resource.empty();\n        }\n        else {\n            return new Resource(__assign({}, processResource));\n        }\n    };\n    return ProcessDetector;\n}());\nexport var processDetector = new ProcessDetector();\n//# sourceMappingURL=ProcessDetector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ViewRegistry = /** @class */ (function () {\n    function ViewRegistry() {\n        this._registeredViews = [];\n    }\n    ViewRegistry.prototype.addView = function (view) {\n        this._registeredViews.push(view);\n    };\n    ViewRegistry.prototype.findViews = function (instrument, meter) {\n        var _this = this;\n        var views = this._registeredViews\n            .filter(function (registeredView) {\n            return _this._matchInstrument(registeredView.instrumentSelector, instrument) &&\n                _this._matchMeter(registeredView.meterSelector, meter);\n        });\n        return views;\n    };\n    ViewRegistry.prototype._matchInstrument = function (selector, instrument) {\n        return (selector.getType() === undefined || instrument.type === selector.getType()) &&\n            selector.getNameFilter().match(instrument.name);\n    };\n    ViewRegistry.prototype._matchMeter = function (selector, meter) {\n        return selector.getNameFilter().match(meter.name) &&\n            (meter.version === undefined || selector.getVersionFilter().match(meter.version)) &&\n            (meter.schemaUrl === undefined || selector.getSchemaUrlFilter().match(meter.schemaUrl));\n    };\n    return ViewRegistry;\n}());\nexport { ViewRegistry };\n//# sourceMappingURL=ViewRegistry.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as api from '@opentelemetry/api';\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { hrTime } from '@opentelemetry/core';\nvar SyncInstrument = /** @class */ (function () {\n    function SyncInstrument(_writableMetricStorage, _descriptor) {\n        this._writableMetricStorage = _writableMetricStorage;\n        this._descriptor = _descriptor;\n    }\n    SyncInstrument.prototype._record = function (value, attributes, context) {\n        if (attributes === void 0) { attributes = {}; }\n        if (context === void 0) { context = api.context.active(); }\n        if (this._descriptor.valueType === metrics.ValueType.INT && !Number.isInteger(value)) {\n            api.diag.warn(\"INT value type cannot accept a floating-point value for \" + this._descriptor.name + \", ignoring the fractional digits.\");\n            value = Math.trunc(value);\n        }\n        this._writableMetricStorage.record(value, attributes, context, hrTime());\n    };\n    return SyncInstrument;\n}());\nexport { SyncInstrument };\n/**\n * The class implements {@link metrics.UpDownCounter} interface.\n */\nvar UpDownCounterInstrument = /** @class */ (function (_super) {\n    __extends(UpDownCounterInstrument, _super);\n    function UpDownCounterInstrument() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Increment value of counter by the input. Inputs may be negative.\n     */\n    UpDownCounterInstrument.prototype.add = function (value, attributes, ctx) {\n        this._record(value, attributes, ctx);\n    };\n    return UpDownCounterInstrument;\n}(SyncInstrument));\nexport { UpDownCounterInstrument };\n/**\n * The class implements {@link metrics.Counter} interface.\n */\nvar CounterInstrument = /** @class */ (function (_super) {\n    __extends(CounterInstrument, _super);\n    function CounterInstrument() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Increment value of counter by the input. Inputs may not be negative.\n     */\n    CounterInstrument.prototype.add = function (value, attributes, ctx) {\n        if (value < 0) {\n            api.diag.warn(\"negative value provided to counter \" + this._descriptor.name + \": \" + value);\n            return;\n        }\n        this._record(value, attributes, ctx);\n    };\n    return CounterInstrument;\n}(SyncInstrument));\nexport { CounterInstrument };\n/**\n * The class implements {@link metrics.Histogram} interface.\n */\nvar HistogramInstrument = /** @class */ (function (_super) {\n    __extends(HistogramInstrument, _super);\n    function HistogramInstrument() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Records a measurement. Value of the measurement must not be negative.\n     */\n    HistogramInstrument.prototype.record = function (value, attributes, ctx) {\n        if (value < 0) {\n            api.diag.warn(\"negative value provided to histogram \" + this._descriptor.name + \": \" + value);\n            return;\n        }\n        this._record(value, attributes, ctx);\n    };\n    return HistogramInstrument;\n}(SyncInstrument));\nexport { HistogramInstrument };\nvar ObservableInstrument = /** @class */ (function () {\n    function ObservableInstrument(descriptor, metricStorages, _observableRegistry) {\n        this._observableRegistry = _observableRegistry;\n        this._descriptor = descriptor;\n        this._metricStorages = metricStorages;\n    }\n    /**\n     * @see {metrics.Observable.addCallback}\n     */\n    ObservableInstrument.prototype.addCallback = function (callback) {\n        this._observableRegistry.addCallback(callback, this);\n    };\n    /**\n     * @see {metrics.Observable.removeCallback}\n     */\n    ObservableInstrument.prototype.removeCallback = function (callback) {\n        this._observableRegistry.removeCallback(callback, this);\n    };\n    return ObservableInstrument;\n}());\nexport { ObservableInstrument };\nvar ObservableCounterInstrument = /** @class */ (function (_super) {\n    __extends(ObservableCounterInstrument, _super);\n    function ObservableCounterInstrument() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ObservableCounterInstrument;\n}(ObservableInstrument));\nexport { ObservableCounterInstrument };\nvar ObservableGaugeInstrument = /** @class */ (function (_super) {\n    __extends(ObservableGaugeInstrument, _super);\n    function ObservableGaugeInstrument() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ObservableGaugeInstrument;\n}(ObservableInstrument));\nexport { ObservableGaugeInstrument };\nvar ObservableUpDownCounterInstrument = /** @class */ (function (_super) {\n    __extends(ObservableUpDownCounterInstrument, _super);\n    function ObservableUpDownCounterInstrument() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ObservableUpDownCounterInstrument;\n}(ObservableInstrument));\nexport { ObservableUpDownCounterInstrument };\nexport function isObservableInstrument(it) {\n    return it instanceof ObservableInstrument;\n}\n//# sourceMappingURL=Instruments.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createInstrumentDescriptor, InstrumentType } from './InstrumentDescriptor';\nimport { CounterInstrument, HistogramInstrument, ObservableCounterInstrument, ObservableGaugeInstrument, ObservableUpDownCounterInstrument, UpDownCounterInstrument, } from './Instruments';\n/**\n * This class implements the {@link metrics.Meter} interface.\n */\nvar Meter = /** @class */ (function () {\n    function Meter(_meterSharedState) {\n        this._meterSharedState = _meterSharedState;\n    }\n    /**\n     * Create a {@link metrics.Histogram} instrument.\n     */\n    Meter.prototype.createHistogram = function (name, options) {\n        var descriptor = createInstrumentDescriptor(name, InstrumentType.HISTOGRAM, options);\n        var storage = this._meterSharedState.registerMetricStorage(descriptor);\n        return new HistogramInstrument(storage, descriptor);\n    };\n    /**\n     * Create a {@link metrics.Counter} instrument.\n     */\n    Meter.prototype.createCounter = function (name, options) {\n        var descriptor = createInstrumentDescriptor(name, InstrumentType.COUNTER, options);\n        var storage = this._meterSharedState.registerMetricStorage(descriptor);\n        return new CounterInstrument(storage, descriptor);\n    };\n    /**\n     * Create a {@link metrics.UpDownCounter} instrument.\n     */\n    Meter.prototype.createUpDownCounter = function (name, options) {\n        var descriptor = createInstrumentDescriptor(name, InstrumentType.UP_DOWN_COUNTER, options);\n        var storage = this._meterSharedState.registerMetricStorage(descriptor);\n        return new UpDownCounterInstrument(storage, descriptor);\n    };\n    /**\n     * Create a {@link metrics.ObservableGauge} instrument.\n     */\n    Meter.prototype.createObservableGauge = function (name, options) {\n        var descriptor = createInstrumentDescriptor(name, InstrumentType.OBSERVABLE_GAUGE, options);\n        var storages = this._meterSharedState.registerAsyncMetricStorage(descriptor);\n        return new ObservableGaugeInstrument(descriptor, storages, this._meterSharedState.observableRegistry);\n    };\n    /**\n     * Create a {@link metrics.ObservableCounter} instrument.\n     */\n    Meter.prototype.createObservableCounter = function (name, options) {\n        var descriptor = createInstrumentDescriptor(name, InstrumentType.OBSERVABLE_COUNTER, options);\n        var storages = this._meterSharedState.registerAsyncMetricStorage(descriptor);\n        return new ObservableCounterInstrument(descriptor, storages, this._meterSharedState.observableRegistry);\n    };\n    /**\n     * Create a {@link metrics.ObservableUpDownCounter} instrument.\n     */\n    Meter.prototype.createObservableUpDownCounter = function (name, options) {\n        var descriptor = createInstrumentDescriptor(name, InstrumentType.OBSERVABLE_UP_DOWN_COUNTER, options);\n        var storages = this._meterSharedState.registerAsyncMetricStorage(descriptor);\n        return new ObservableUpDownCounterInstrument(descriptor, storages, this._meterSharedState.observableRegistry);\n    };\n    /**\n     * @see {@link metrics.Meter.addBatchObservableCallback}\n     */\n    Meter.prototype.addBatchObservableCallback = function (callback, observables) {\n        this._meterSharedState.observableRegistry.addBatchCallback(callback, observables);\n    };\n    /**\n     * @see {@link metrics.Meter.removeBatchObservableCallback}\n     */\n    Meter.prototype.removeBatchObservableCallback = function (callback, observables) {\n        this._meterSharedState.observableRegistry.removeBatchCallback(callback, observables);\n    };\n    return Meter;\n}());\nexport { Meter };\n//# sourceMappingURL=Meter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createInstrumentDescriptor } from '../InstrumentDescriptor';\n/**\n * Internal interface.\n *\n * Represents a storage from which we can collect metrics.\n */\nvar MetricStorage = /** @class */ (function () {\n    function MetricStorage(_instrumentDescriptor) {\n        this._instrumentDescriptor = _instrumentDescriptor;\n    }\n    MetricStorage.prototype.getInstrumentDescriptor = function () {\n        return this._instrumentDescriptor;\n    };\n    MetricStorage.prototype.updateDescription = function (description) {\n        this._instrumentDescriptor = createInstrumentDescriptor(this._instrumentDescriptor.name, this._instrumentDescriptor.type, {\n            description: description,\n            valueType: this._instrumentDescriptor.valueType,\n            unit: this._instrumentDescriptor.unit\n        });\n    };\n    return MetricStorage;\n}());\nexport { MetricStorage };\n//# sourceMappingURL=MetricStorage.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { hashAttributes } from '../utils';\nvar HashMap = /** @class */ (function () {\n    function HashMap(_hash) {\n        this._hash = _hash;\n        this._valueMap = new Map();\n        this._keyMap = new Map();\n    }\n    HashMap.prototype.get = function (key, hashCode) {\n        hashCode !== null && hashCode !== void 0 ? hashCode : (hashCode = this._hash(key));\n        return this._valueMap.get(hashCode);\n    };\n    HashMap.prototype.getOrDefault = function (key, defaultFactory) {\n        var hash = this._hash(key);\n        if (this._valueMap.has(hash)) {\n            return this._valueMap.get(hash);\n        }\n        var val = defaultFactory();\n        if (!this._keyMap.has(hash)) {\n            this._keyMap.set(hash, key);\n        }\n        this._valueMap.set(hash, val);\n        return val;\n    };\n    HashMap.prototype.set = function (key, value, hashCode) {\n        hashCode !== null && hashCode !== void 0 ? hashCode : (hashCode = this._hash(key));\n        if (!this._keyMap.has(hashCode)) {\n            this._keyMap.set(hashCode, key);\n        }\n        this._valueMap.set(hashCode, value);\n    };\n    HashMap.prototype.has = function (key, hashCode) {\n        hashCode !== null && hashCode !== void 0 ? hashCode : (hashCode = this._hash(key));\n        return this._valueMap.has(hashCode);\n    };\n    HashMap.prototype.keys = function () {\n        var keyIterator, next;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    keyIterator = this._keyMap.entries();\n                    next = keyIterator.next();\n                    _a.label = 1;\n                case 1:\n                    if (!(next.done !== true)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, [next.value[1], next.value[0]]];\n                case 2:\n                    _a.sent();\n                    next = keyIterator.next();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    HashMap.prototype.entries = function () {\n        var valueIterator, next;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    valueIterator = this._valueMap.entries();\n                    next = valueIterator.next();\n                    _a.label = 1;\n                case 1:\n                    if (!(next.done !== true)) return [3 /*break*/, 3];\n                    // next.value[0] here can not be undefined\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    return [4 /*yield*/, [this._keyMap.get(next.value[0]), next.value[1], next.value[0]]];\n                case 2:\n                    // next.value[0] here can not be undefined\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    _a.sent();\n                    next = valueIterator.next();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    Object.defineProperty(HashMap.prototype, \"size\", {\n        get: function () {\n            return this._valueMap.size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return HashMap;\n}());\nexport { HashMap };\nvar AttributeHashMap = /** @class */ (function (_super) {\n    __extends(AttributeHashMap, _super);\n    function AttributeHashMap() {\n        return _super.call(this, hashAttributes) || this;\n    }\n    return AttributeHashMap;\n}(HashMap));\nexport { AttributeHashMap };\n//# sourceMappingURL=HashMap.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { AttributeHashMap } from './HashMap';\n/**\n * Internal interface.\n *\n * Allows synchronous collection of metrics. This processor should allow\n * allocation of new aggregation cells for metrics and convert cumulative\n * recording to delta data points.\n */\nvar DeltaMetricProcessor = /** @class */ (function () {\n    function DeltaMetricProcessor(_aggregator) {\n        this._aggregator = _aggregator;\n        this._activeCollectionStorage = new AttributeHashMap();\n        // TODO: find a reasonable mean to clean the memo;\n        // https://github.com/open-telemetry/opentelemetry-specification/pull/2208\n        this._cumulativeMemoStorage = new AttributeHashMap();\n    }\n    DeltaMetricProcessor.prototype.record = function (value, attributes, _context, collectionTime) {\n        var _this = this;\n        var accumulation = this._activeCollectionStorage.getOrDefault(attributes, function () { return _this._aggregator.createAccumulation(collectionTime); });\n        accumulation === null || accumulation === void 0 ? void 0 : accumulation.record(value);\n    };\n    DeltaMetricProcessor.prototype.batchCumulate = function (measurements, collectionTime) {\n        var _this = this;\n        Array.from(measurements.entries()).forEach(function (_a) {\n            var _b = __read(_a, 3), attributes = _b[0], value = _b[1], hashCode = _b[2];\n            var accumulation = _this._aggregator.createAccumulation(collectionTime);\n            accumulation === null || accumulation === void 0 ? void 0 : accumulation.record(value);\n            var delta = accumulation;\n            if (_this._cumulativeMemoStorage.has(attributes, hashCode)) {\n                // has() returned true, previous is present.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                var previous = _this._cumulativeMemoStorage.get(attributes, hashCode);\n                delta = _this._aggregator.diff(previous, accumulation);\n            }\n            // Save the current record and the delta record.\n            _this._cumulativeMemoStorage.set(attributes, accumulation, hashCode);\n            _this._activeCollectionStorage.set(attributes, delta, hashCode);\n        });\n    };\n    /**\n     * Returns a collection of delta metrics. Start time is the when first\n     * time event collected.\n     */\n    DeltaMetricProcessor.prototype.collect = function () {\n        var unreportedDelta = this._activeCollectionStorage;\n        this._activeCollectionStorage = new AttributeHashMap();\n        return unreportedDelta;\n    };\n    return DeltaMetricProcessor;\n}());\nexport { DeltaMetricProcessor };\n//# sourceMappingURL=DeltaMetricProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { AttributeHashMap } from './HashMap';\n/**\n * Internal interface.\n *\n * Provides unique reporting for each collector. Allows synchronous collection\n * of metrics and reports given temporality values.\n */\nvar TemporalMetricProcessor = /** @class */ (function () {\n    function TemporalMetricProcessor(_aggregator) {\n        this._aggregator = _aggregator;\n        this._unreportedAccumulations = new Map();\n        this._reportHistory = new Map();\n    }\n    /**\n     * Builds the {@link MetricData} streams to report against a specific MetricCollector.\n     * @param collector The information of the MetricCollector.\n     * @param collectors The registered collectors.\n     * @param instrumentDescriptor The instrumentation descriptor that these metrics generated with.\n     * @param currentAccumulations The current accumulation of metric data from instruments.\n     * @param collectionTime The current collection timestamp.\n     * @returns The {@link MetricData} points or `null`.\n     */\n    TemporalMetricProcessor.prototype.buildMetrics = function (collector, collectors, instrumentDescriptor, currentAccumulations, collectionTime) {\n        this._stashAccumulations(collectors, currentAccumulations);\n        var unreportedAccumulations = this._getMergedUnreportedAccumulations(collector);\n        var result = unreportedAccumulations;\n        var aggregationTemporality;\n        // Check our last report time.\n        if (this._reportHistory.has(collector)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            var last = this._reportHistory.get(collector);\n            var lastCollectionTime = last.collectionTime;\n            aggregationTemporality = last.aggregationTemporality;\n            // Use aggregation temporality + instrument to determine if we do a merge or a diff of\n            // previous. We have the following four scenarios:\n            // 1. Cumulative Aggregation (temporality) + Delta recording (sync instrument).\n            //    Here we merge with our last record to get a cumulative aggregation.\n            // 2. Cumulative Aggregation + Cumulative recording (async instrument).\n            //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n            //    Here we merge with our last record to get a cumulative aggregation.\n            // 3. Delta Aggregation + Delta recording\n            //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n            // 4. Delta Aggregation + Cumulative recording.\n            //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n            //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n            if (aggregationTemporality === AggregationTemporality.CUMULATIVE) {\n                // We need to make sure the current delta recording gets merged into the previous cumulative\n                // for the next cumulative recording.\n                result = TemporalMetricProcessor.merge(last.accumulations, unreportedAccumulations, this._aggregator);\n            }\n            else {\n                result = TemporalMetricProcessor.calibrateStartTime(last.accumulations, unreportedAccumulations, lastCollectionTime);\n            }\n        }\n        else {\n            // Call into user code to select aggregation temporality for the instrument.\n            aggregationTemporality = collector.selectAggregationTemporality(instrumentDescriptor.type);\n        }\n        // Update last reported (cumulative) accumulation.\n        this._reportHistory.set(collector, {\n            accumulations: result,\n            collectionTime: collectionTime,\n            aggregationTemporality: aggregationTemporality,\n        });\n        return this._aggregator.toMetricData(instrumentDescriptor, aggregationTemporality, AttributesMapToAccumulationRecords(result), \n        /* endTime */ collectionTime);\n    };\n    TemporalMetricProcessor.prototype._stashAccumulations = function (collectors, currentAccumulation) {\n        var _this = this;\n        collectors.forEach(function (it) {\n            var stash = _this._unreportedAccumulations.get(it);\n            if (stash === undefined) {\n                stash = [];\n                _this._unreportedAccumulations.set(it, stash);\n            }\n            stash.push(currentAccumulation);\n        });\n    };\n    TemporalMetricProcessor.prototype._getMergedUnreportedAccumulations = function (collector) {\n        var e_1, _a;\n        var result = new AttributeHashMap();\n        var unreportedList = this._unreportedAccumulations.get(collector);\n        this._unreportedAccumulations.set(collector, []);\n        if (unreportedList === undefined) {\n            return result;\n        }\n        try {\n            for (var unreportedList_1 = __values(unreportedList), unreportedList_1_1 = unreportedList_1.next(); !unreportedList_1_1.done; unreportedList_1_1 = unreportedList_1.next()) {\n                var it_1 = unreportedList_1_1.value;\n                result = TemporalMetricProcessor.merge(result, it_1, this._aggregator);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (unreportedList_1_1 && !unreportedList_1_1.done && (_a = unreportedList_1.return)) _a.call(unreportedList_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    TemporalMetricProcessor.merge = function (last, current, aggregator) {\n        var result = last;\n        var iterator = current.entries();\n        var next = iterator.next();\n        while (next.done !== true) {\n            var _a = __read(next.value, 3), key = _a[0], record = _a[1], hash = _a[2];\n            if (last.has(key, hash)) {\n                var lastAccumulation = last.get(key, hash);\n                // last.has() returned true, lastAccumulation is present.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                var accumulation = aggregator.merge(lastAccumulation, record);\n                result.set(key, accumulation, hash);\n            }\n            else {\n                result.set(key, record, hash);\n            }\n            next = iterator.next();\n        }\n        return result;\n    };\n    /**\n     * Calibrate the reported metric streams' startTime to lastCollectionTime. Leaves\n     * the new stream to be the initial observation time unchanged.\n     */\n    TemporalMetricProcessor.calibrateStartTime = function (last, current, lastCollectionTime) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(last.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], hash = _d[1];\n                var currentAccumulation = current.get(key, hash);\n                currentAccumulation === null || currentAccumulation === void 0 ? void 0 : currentAccumulation.setStartTime(lastCollectionTime);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return current;\n    };\n    return TemporalMetricProcessor;\n}());\nexport { TemporalMetricProcessor };\n// TypeScript complains about converting 3 elements tuple to AccumulationRecord<T>.\nfunction AttributesMapToAccumulationRecords(map) {\n    return Array.from(map.entries());\n}\n//# sourceMappingURL=TemporalMetricProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { MetricStorage } from './MetricStorage';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { AttributeHashMap } from './HashMap';\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for asynchronous instruments.\n */\nvar AsyncMetricStorage = /** @class */ (function (_super) {\n    __extends(AsyncMetricStorage, _super);\n    function AsyncMetricStorage(_instrumentDescriptor, aggregator, _attributesProcessor) {\n        var _this = _super.call(this, _instrumentDescriptor) || this;\n        _this._attributesProcessor = _attributesProcessor;\n        _this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n        _this._temporalMetricStorage = new TemporalMetricProcessor(aggregator);\n        return _this;\n    }\n    AsyncMetricStorage.prototype.record = function (measurements, observationTime) {\n        var _this = this;\n        var processed = new AttributeHashMap();\n        Array.from(measurements.entries()).forEach(function (_a) {\n            var _b = __read(_a, 2), attributes = _b[0], value = _b[1];\n            processed.set(_this._attributesProcessor.process(attributes), value);\n        });\n        this._deltaMetricStorage.batchCumulate(processed, observationTime);\n    };\n    /**\n     * Collects the metrics from this storage. The ObservableCallback is invoked\n     * during the collection.\n     *\n     * Note: This is a stateful operation and may reset any interval-related\n     * state for the MetricCollector.\n     */\n    AsyncMetricStorage.prototype.collect = function (collector, collectors, collectionTime) {\n        var accumulations = this._deltaMetricStorage.collect();\n        return this._temporalMetricStorage.buildMetrics(collector, collectors, this._instrumentDescriptor, accumulations, collectionTime);\n    };\n    return AsyncMetricStorage;\n}(MetricStorage));\nexport { AsyncMetricStorage };\n//# sourceMappingURL=AsyncMetricStorage.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function getIncompatibilityDetails(existing, otherDescriptor) {\n    var incompatibility = '';\n    if (existing.unit !== otherDescriptor.unit) {\n        incompatibility += \"\\t- Unit '\" + existing.unit + \"' does not match '\" + otherDescriptor.unit + \"'\\n\";\n    }\n    if (existing.type !== otherDescriptor.type) {\n        incompatibility += \"\\t- Type '\" + existing.type + \"' does not match '\" + otherDescriptor.type + \"'\\n\";\n    }\n    if (existing.valueType !== otherDescriptor.valueType) {\n        incompatibility += \"\\t- Value Type '\" + existing.valueType + \"' does not match '\" + otherDescriptor.valueType + \"'\\n\";\n    }\n    if (existing.description !== otherDescriptor.description) {\n        incompatibility += \"\\t- Description '\" + existing.description + \"' does not match '\" + otherDescriptor.description + \"'\\n\";\n    }\n    return incompatibility;\n}\nexport function getValueTypeConflictResolutionRecipe(existing, otherDescriptor) {\n    return \"\\t- use valueType '\" + existing.valueType + \"' on instrument creation or use an instrument name other than '\" + otherDescriptor.name + \"'\";\n}\nexport function getUnitConflictResolutionRecipe(existing, otherDescriptor) {\n    return \"\\t- use unit '\" + existing.unit + \"' on instrument creation or use an instrument name other than '\" + otherDescriptor.name + \"'\";\n}\nexport function getTypeConflictResolutionRecipe(existing, otherDescriptor) {\n    var selector = {\n        name: otherDescriptor.name,\n        type: otherDescriptor.type\n    };\n    var selectorString = JSON.stringify(selector);\n    return \"\\t- create a new view with a name other than '\" + existing.name + \"' and InstrumentSelector '\" + selectorString + \"'\";\n}\nexport function getDescriptionResolutionRecipe(existing, otherDescriptor) {\n    var selector = {\n        name: otherDescriptor.name,\n        type: otherDescriptor.type\n    };\n    var selectorString = JSON.stringify(selector);\n    return \"\\t- create a new view with a name other than '\" + existing.name + \"' and InstrumentSelector '\" + selectorString + \"'\\n    \\t- OR - create a new view with the name \" + existing.name + \" and description '\" + existing.description + \"' and InstrumentSelector \" + selectorString + \"\\n    \\t- OR - create a new view with the name \" + otherDescriptor.name + \" and description '\" + existing.description + \"' and InstrumentSelector \" + selectorString;\n}\nexport function getConflictResolutionRecipe(existing, otherDescriptor) {\n    // Conflicts that cannot be solved via views.\n    if (existing.valueType !== otherDescriptor.valueType) {\n        return getValueTypeConflictResolutionRecipe(existing, otherDescriptor);\n    }\n    if (existing.unit !== otherDescriptor.unit) {\n        return getUnitConflictResolutionRecipe(existing, otherDescriptor);\n    }\n    // Conflicts that can be solved via views.\n    if (existing.type !== otherDescriptor.type) {\n        // this will automatically solve possible description conflicts.\n        return getTypeConflictResolutionRecipe(existing, otherDescriptor);\n    }\n    if (existing.description !== otherDescriptor.description) {\n        return getDescriptionResolutionRecipe(existing, otherDescriptor);\n    }\n    return '';\n}\n//# sourceMappingURL=RegistrationConflicts.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { isDescriptorCompatibleWith } from '../InstrumentDescriptor';\nimport * as api from '@opentelemetry/api';\nimport { getConflictResolutionRecipe, getIncompatibilityDetails } from '../view/RegistrationConflicts';\n/**\n * Internal class for storing {@link MetricStorage}\n */\nvar MetricStorageRegistry = /** @class */ (function () {\n    function MetricStorageRegistry() {\n        this._sharedRegistry = new Map();\n        this._perCollectorRegistry = new Map();\n    }\n    MetricStorageRegistry.create = function () {\n        return new MetricStorageRegistry();\n    };\n    MetricStorageRegistry.prototype.getStorages = function (collector) {\n        var e_1, _a, e_2, _b;\n        var storages = [];\n        try {\n            for (var _c = __values(this._sharedRegistry.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var metricStorages = _d.value;\n                storages = storages.concat(metricStorages);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var perCollectorStorages = this._perCollectorRegistry.get(collector);\n        if (perCollectorStorages != null) {\n            try {\n                for (var _e = __values(perCollectorStorages.values()), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var metricStorages = _f.value;\n                    storages = storages.concat(metricStorages);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return storages;\n    };\n    MetricStorageRegistry.prototype.register = function (storage) {\n        this._registerStorage(storage, this._sharedRegistry);\n    };\n    MetricStorageRegistry.prototype.registerForCollector = function (collector, storage) {\n        var storageMap = this._perCollectorRegistry.get(collector);\n        if (storageMap == null) {\n            storageMap = new Map();\n            this._perCollectorRegistry.set(collector, storageMap);\n        }\n        this._registerStorage(storage, storageMap);\n    };\n    MetricStorageRegistry.prototype.findOrUpdateCompatibleStorage = function (expectedDescriptor) {\n        var storages = this._sharedRegistry.get(expectedDescriptor.name);\n        if (storages === undefined) {\n            return null;\n        }\n        // If the descriptor is compatible, the type of their metric storage\n        // (either SyncMetricStorage or AsyncMetricStorage) must be compatible.\n        return this._findOrUpdateCompatibleStorage(expectedDescriptor, storages);\n    };\n    MetricStorageRegistry.prototype.findOrUpdateCompatibleCollectorStorage = function (collector, expectedDescriptor) {\n        var storageMap = this._perCollectorRegistry.get(collector);\n        if (storageMap === undefined) {\n            return null;\n        }\n        var storages = this._sharedRegistry.get(expectedDescriptor.name);\n        if (storages === undefined) {\n            return null;\n        }\n        // If the descriptor is compatible, the type of their metric storage\n        // (either SyncMetricStorage or AsyncMetricStorage) must be compatible.\n        return this._findOrUpdateCompatibleStorage(expectedDescriptor, storages);\n    };\n    MetricStorageRegistry.prototype._registerStorage = function (storage, storageMap) {\n        var descriptor = storage.getInstrumentDescriptor();\n        var storages = storageMap.get(descriptor.name);\n        if (storages === undefined) {\n            storageMap.set(descriptor.name, [storage]);\n            return;\n        }\n        storages.push(storage);\n    };\n    MetricStorageRegistry.prototype._findOrUpdateCompatibleStorage = function (expectedDescriptor, existingStorages) {\n        var e_3, _a;\n        var compatibleStorage = null;\n        try {\n            for (var existingStorages_1 = __values(existingStorages), existingStorages_1_1 = existingStorages_1.next(); !existingStorages_1_1.done; existingStorages_1_1 = existingStorages_1.next()) {\n                var existingStorage = existingStorages_1_1.value;\n                var existingDescriptor = existingStorage.getInstrumentDescriptor();\n                if (isDescriptorCompatibleWith(existingDescriptor, expectedDescriptor)) {\n                    // Use the longer description if it does not match.\n                    if (existingDescriptor.description !== expectedDescriptor.description) {\n                        if (expectedDescriptor.description.length > existingDescriptor.description.length) {\n                            existingStorage.updateDescription(expectedDescriptor.description);\n                        }\n                        api.diag.warn('A view or instrument with the name ', expectedDescriptor.name, ' has already been registered, but has a different description and is incompatible with another registered view.\\n', 'Details:\\n', getIncompatibilityDetails(existingDescriptor, expectedDescriptor), 'The longer description will be used.\\nTo resolve the conflict:', getConflictResolutionRecipe(existingDescriptor, expectedDescriptor));\n                    }\n                    // Storage is fully compatible. There will never be more than one pre-existing fully compatible storage.\n                    compatibleStorage = existingStorage;\n                }\n                else {\n                    // The implementation SHOULD warn about duplicate instrument registration\n                    // conflicts after applying View configuration.\n                    api.diag.warn('A view or instrument with the name ', expectedDescriptor.name, ' has already been registered and is incompatible with another registered view.\\n', 'Details:\\n', getIncompatibilityDetails(existingDescriptor, expectedDescriptor), 'To resolve the conflict:\\n', getConflictResolutionRecipe(existingDescriptor, expectedDescriptor));\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (existingStorages_1_1 && !existingStorages_1_1.done && (_a = existingStorages_1.return)) _a.call(existingStorages_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return compatibleStorage;\n    };\n    return MetricStorageRegistry;\n}());\nexport { MetricStorageRegistry };\n//# sourceMappingURL=MetricStorageRegistry.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal interface.\n */\nvar MultiMetricStorage = /** @class */ (function () {\n    function MultiMetricStorage(_backingStorages) {\n        this._backingStorages = _backingStorages;\n    }\n    MultiMetricStorage.prototype.record = function (value, attributes, context, recordTime) {\n        this._backingStorages.forEach(function (it) {\n            it.record(value, attributes, context, recordTime);\n        });\n    };\n    return MultiMetricStorage;\n}());\nexport { MultiMetricStorage };\n//# sourceMappingURL=MultiWritableMetricStorage.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { AttributeHashMap } from './state/HashMap';\nimport { isObservableInstrument } from './Instruments';\n/**\n * The class implements {@link metrics.ObservableResult} interface.\n */\nvar ObservableResultImpl = /** @class */ (function () {\n    function ObservableResultImpl(_descriptor) {\n        this._descriptor = _descriptor;\n        /**\n         * @internal\n         */\n        this._buffer = new AttributeHashMap();\n    }\n    /**\n     * Observe a measurement of the value associated with the given attributes.\n     */\n    ObservableResultImpl.prototype.observe = function (value, attributes) {\n        if (attributes === void 0) { attributes = {}; }\n        if (this._descriptor.valueType === metrics.ValueType.INT && !Number.isInteger(value)) {\n            api.diag.warn(\"INT value type cannot accept a floating-point value for \" + this._descriptor.name + \", ignoring the fractional digits.\");\n            value = Math.trunc(value);\n        }\n        this._buffer.set(attributes, value);\n    };\n    return ObservableResultImpl;\n}());\nexport { ObservableResultImpl };\n/**\n * The class implements {@link metrics.BatchObservableCallback} interface.\n */\nvar BatchObservableResultImpl = /** @class */ (function () {\n    function BatchObservableResultImpl() {\n        /**\n         * @internal\n         */\n        this._buffer = new Map();\n    }\n    /**\n     * Observe a measurement of the value associated with the given attributes.\n     */\n    BatchObservableResultImpl.prototype.observe = function (metric, value, attributes) {\n        if (attributes === void 0) { attributes = {}; }\n        if (!isObservableInstrument(metric)) {\n            return;\n        }\n        var map = this._buffer.get(metric);\n        if (map == null) {\n            map = new AttributeHashMap();\n            this._buffer.set(metric, map);\n        }\n        if (metric._descriptor.valueType === metrics.ValueType.INT && !Number.isInteger(value)) {\n            api.diag.warn(\"INT value type cannot accept a floating-point value for \" + metric._descriptor.name + \", ignoring the fractional digits.\");\n            value = Math.trunc(value);\n        }\n        map.set(attributes, value);\n    };\n    return BatchObservableResultImpl;\n}());\nexport { BatchObservableResultImpl };\n//# sourceMappingURL=ObservableResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as api from '@opentelemetry/api';\nimport { isObservableInstrument } from '../Instruments';\nimport { BatchObservableResultImpl, ObservableResultImpl } from '../ObservableResult';\nimport { callWithTimeout, PromiseAllSettled, isPromiseAllSettledRejectionResult, setEquals } from '../utils';\n/**\n * An internal interface for managing ObservableCallbacks.\n *\n * Every registered callback associated with a set of instruments are be evaluated\n * exactly once during collection prior to reading data for that instrument.\n */\nvar ObservableRegistry = /** @class */ (function () {\n    function ObservableRegistry() {\n        this._callbacks = [];\n        this._batchCallbacks = [];\n    }\n    ObservableRegistry.prototype.addCallback = function (callback, instrument) {\n        var idx = this._findCallback(callback, instrument);\n        if (idx >= 0) {\n            return;\n        }\n        this._callbacks.push({ callback: callback, instrument: instrument });\n    };\n    ObservableRegistry.prototype.removeCallback = function (callback, instrument) {\n        var idx = this._findCallback(callback, instrument);\n        if (idx < 0) {\n            return;\n        }\n        this._callbacks.splice(idx, 1);\n    };\n    ObservableRegistry.prototype.addBatchCallback = function (callback, instruments) {\n        // Create a set of unique instruments.\n        var observableInstruments = new Set(instruments.filter(isObservableInstrument));\n        if (observableInstruments.size === 0) {\n            api.diag.error('BatchObservableCallback is not associated with valid instruments', instruments);\n            return;\n        }\n        var idx = this._findBatchCallback(callback, observableInstruments);\n        if (idx >= 0) {\n            return;\n        }\n        this._batchCallbacks.push({ callback: callback, instruments: observableInstruments });\n    };\n    ObservableRegistry.prototype.removeBatchCallback = function (callback, instruments) {\n        // Create a set of unique instruments.\n        var observableInstruments = new Set(instruments.filter(isObservableInstrument));\n        var idx = this._findBatchCallback(callback, observableInstruments);\n        if (idx < 0) {\n            return;\n        }\n        this._batchCallbacks.splice(idx, 1);\n    };\n    /**\n     * @returns a promise of rejected reasons for invoking callbacks.\n     */\n    ObservableRegistry.prototype.observe = function (collectionTime, timeoutMillis) {\n        return __awaiter(this, void 0, void 0, function () {\n            var callbackFutures, batchCallbackFutures, results, rejections;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        callbackFutures = this._observeCallbacks(collectionTime, timeoutMillis);\n                        batchCallbackFutures = this._observeBatchCallbacks(collectionTime, timeoutMillis);\n                        return [4 /*yield*/, PromiseAllSettled(__spreadArray(__spreadArray([], __read(callbackFutures), false), __read(batchCallbackFutures), false))];\n                    case 1:\n                        results = _a.sent();\n                        rejections = results.filter(isPromiseAllSettledRejectionResult)\n                            .map(function (it) { return it.reason; });\n                        return [2 /*return*/, rejections];\n                }\n            });\n        });\n    };\n    ObservableRegistry.prototype._observeCallbacks = function (observationTime, timeoutMillis) {\n        var _this = this;\n        return this._callbacks\n            .map(function (_a) {\n            var callback = _a.callback, instrument = _a.instrument;\n            return __awaiter(_this, void 0, void 0, function () {\n                var observableResult, callPromise;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            observableResult = new ObservableResultImpl(instrument._descriptor);\n                            callPromise = Promise.resolve(callback(observableResult));\n                            if (timeoutMillis != null) {\n                                callPromise = callWithTimeout(callPromise, timeoutMillis);\n                            }\n                            return [4 /*yield*/, callPromise];\n                        case 1:\n                            _b.sent();\n                            instrument._metricStorages.forEach(function (metricStorage) {\n                                metricStorage.record(observableResult._buffer, observationTime);\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        });\n    };\n    ObservableRegistry.prototype._observeBatchCallbacks = function (observationTime, timeoutMillis) {\n        var _this = this;\n        return this._batchCallbacks\n            .map(function (_a) {\n            var callback = _a.callback, instruments = _a.instruments;\n            return __awaiter(_this, void 0, void 0, function () {\n                var observableResult, callPromise;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            observableResult = new BatchObservableResultImpl();\n                            callPromise = Promise.resolve(callback(observableResult));\n                            if (timeoutMillis != null) {\n                                callPromise = callWithTimeout(callPromise, timeoutMillis);\n                            }\n                            return [4 /*yield*/, callPromise];\n                        case 1:\n                            _b.sent();\n                            instruments.forEach(function (instrument) {\n                                var buffer = observableResult._buffer.get(instrument);\n                                if (buffer == null) {\n                                    return;\n                                }\n                                instrument._metricStorages.forEach(function (metricStorage) {\n                                    metricStorage.record(buffer, observationTime);\n                                });\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        });\n    };\n    ObservableRegistry.prototype._findCallback = function (callback, instrument) {\n        return this._callbacks.findIndex(function (record) {\n            return record.callback === callback && record.instrument === instrument;\n        });\n    };\n    ObservableRegistry.prototype._findBatchCallback = function (callback, instruments) {\n        return this._batchCallbacks.findIndex(function (record) {\n            return record.callback === callback && setEquals(record.instruments, instruments);\n        });\n    };\n    return ObservableRegistry;\n}());\nexport { ObservableRegistry };\n//# sourceMappingURL=ObservableRegistry.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { MetricStorage } from './MetricStorage';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for synchronous instruments.\n */\nvar SyncMetricStorage = /** @class */ (function (_super) {\n    __extends(SyncMetricStorage, _super);\n    function SyncMetricStorage(instrumentDescriptor, aggregator, _attributesProcessor) {\n        var _this = _super.call(this, instrumentDescriptor) || this;\n        _this._attributesProcessor = _attributesProcessor;\n        _this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n        _this._temporalMetricStorage = new TemporalMetricProcessor(aggregator);\n        return _this;\n    }\n    SyncMetricStorage.prototype.record = function (value, attributes, context, recordTime) {\n        attributes = this._attributesProcessor.process(attributes, context);\n        this._deltaMetricStorage.record(value, attributes, context, recordTime);\n    };\n    /**\n     * Collects the metrics from this storage.\n     *\n     * Note: This is a stateful operation and may reset any interval-related\n     * state for the MetricCollector.\n     */\n    SyncMetricStorage.prototype.collect = function (collector, collectors, collectionTime) {\n        var accumulations = this._deltaMetricStorage.collect();\n        return this._temporalMetricStorage.buildMetrics(collector, collectors, this._instrumentDescriptor, accumulations, collectionTime);\n    };\n    return SyncMetricStorage;\n}(MetricStorage));\nexport { SyncMetricStorage };\n//# sourceMappingURL=SyncMetricStorage.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * The {@link AttributesProcessor} is responsible for customizing which\n * attribute(s) are to be reported as metrics dimension(s) and adding\n * additional dimension(s) from the {@link Context}.\n */\nvar AttributesProcessor = /** @class */ (function () {\n    function AttributesProcessor() {\n    }\n    AttributesProcessor.Noop = function () {\n        return NOOP;\n    };\n    return AttributesProcessor;\n}());\nexport { AttributesProcessor };\nvar NoopAttributesProcessor = /** @class */ (function (_super) {\n    __extends(NoopAttributesProcessor, _super);\n    function NoopAttributesProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopAttributesProcessor.prototype.process = function (incoming, _context) {\n        return incoming;\n    };\n    return NoopAttributesProcessor;\n}(AttributesProcessor));\nexport { NoopAttributesProcessor };\n/**\n * {@link AttributesProcessor} that filters by allowed attribute names and drops any names that are not in the\n * allow list.\n */\nvar FilteringAttributesProcessor = /** @class */ (function (_super) {\n    __extends(FilteringAttributesProcessor, _super);\n    function FilteringAttributesProcessor(_allowedAttributeNames) {\n        var _this = _super.call(this) || this;\n        _this._allowedAttributeNames = _allowedAttributeNames;\n        return _this;\n    }\n    FilteringAttributesProcessor.prototype.process = function (incoming, _context) {\n        var _this = this;\n        var filteredAttributes = {};\n        Object.keys(incoming)\n            .filter(function (attributeName) { return _this._allowedAttributeNames.includes(attributeName); })\n            .forEach(function (attributeName) { return filteredAttributes[attributeName] = incoming[attributeName]; });\n        return filteredAttributes;\n    };\n    return FilteringAttributesProcessor;\n}(AttributesProcessor));\nexport { FilteringAttributesProcessor };\nvar NOOP = new NoopAttributesProcessor;\n//# sourceMappingURL=AttributesProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { createInstrumentDescriptorWithView } from '../InstrumentDescriptor';\nimport { Meter } from '../Meter';\nimport { isNotNullish } from '../utils';\nimport { AsyncMetricStorage } from './AsyncMetricStorage';\nimport { MetricStorageRegistry } from './MetricStorageRegistry';\nimport { MultiMetricStorage } from './MultiWritableMetricStorage';\nimport { ObservableRegistry } from './ObservableRegistry';\nimport { SyncMetricStorage } from './SyncMetricStorage';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\n/**\n * An internal record for shared meter provider states.\n */\nvar MeterSharedState = /** @class */ (function () {\n    function MeterSharedState(_meterProviderSharedState, _instrumentationScope) {\n        this._meterProviderSharedState = _meterProviderSharedState;\n        this._instrumentationScope = _instrumentationScope;\n        this.metricStorageRegistry = new MetricStorageRegistry();\n        this.observableRegistry = new ObservableRegistry();\n        this.meter = new Meter(this);\n    }\n    MeterSharedState.prototype.registerMetricStorage = function (descriptor) {\n        var storages = this._registerMetricStorage(descriptor, SyncMetricStorage);\n        if (storages.length === 1) {\n            return storages[0];\n        }\n        return new MultiMetricStorage(storages);\n    };\n    MeterSharedState.prototype.registerAsyncMetricStorage = function (descriptor) {\n        var storages = this._registerMetricStorage(descriptor, AsyncMetricStorage);\n        return storages;\n    };\n    /**\n     * @param collector opaque handle of {@link MetricCollector} which initiated the collection.\n     * @param collectionTime the HrTime at which the collection was initiated.\n     * @param options options for collection.\n     * @returns the list of metric data collected.\n     */\n    MeterSharedState.prototype.collect = function (collector, collectionTime, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errors, metricDataList;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.observableRegistry.observe(collectionTime, options === null || options === void 0 ? void 0 : options.timeoutMillis)];\n                    case 1:\n                        errors = _a.sent();\n                        metricDataList = Array.from(this.metricStorageRegistry.getStorages(collector))\n                            .map(function (metricStorage) {\n                            return metricStorage.collect(collector, _this._meterProviderSharedState.metricCollectors, collectionTime);\n                        })\n                            .filter(isNotNullish);\n                        return [2 /*return*/, {\n                                scopeMetrics: {\n                                    scope: this._instrumentationScope,\n                                    metrics: metricDataList.filter(isNotNullish),\n                                },\n                                errors: errors,\n                            }];\n                }\n            });\n        });\n    };\n    MeterSharedState.prototype._registerMetricStorage = function (descriptor, MetricStorageType) {\n        var _this = this;\n        var views = this._meterProviderSharedState.viewRegistry.findViews(descriptor, this._instrumentationScope);\n        var storages = views\n            .map(function (view) {\n            var viewDescriptor = createInstrumentDescriptorWithView(view, descriptor);\n            var compatibleStorage = _this.metricStorageRegistry.findOrUpdateCompatibleStorage(viewDescriptor);\n            if (compatibleStorage != null) {\n                return compatibleStorage;\n            }\n            var aggregator = view.aggregation.createAggregator(viewDescriptor);\n            var viewStorage = new MetricStorageType(viewDescriptor, aggregator, view.attributesProcessor);\n            _this.metricStorageRegistry.register(viewStorage);\n            return viewStorage;\n        });\n        // Fallback to the per-collector aggregations if no view is configured for the instrument.\n        if (storages.length === 0) {\n            var perCollectorAggregations = this._meterProviderSharedState.selectAggregations(descriptor.type);\n            var collectorStorages = perCollectorAggregations.map(function (_a) {\n                var _b = __read(_a, 2), collector = _b[0], aggregation = _b[1];\n                var compatibleStorage = _this.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage(collector, descriptor);\n                if (compatibleStorage != null) {\n                    return compatibleStorage;\n                }\n                var aggregator = aggregation.createAggregator(descriptor);\n                var storage = new MetricStorageType(descriptor, aggregator, AttributesProcessor.Noop());\n                _this.metricStorageRegistry.registerForCollector(collector, storage);\n                return storage;\n            });\n            storages = storages.concat(collectorStorages);\n        }\n        return storages;\n    };\n    return MeterSharedState;\n}());\nexport { MeterSharedState };\n//# sourceMappingURL=MeterSharedState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { instrumentationScopeId } from '../utils';\nimport { ViewRegistry } from '../view/ViewRegistry';\nimport { MeterSharedState } from './MeterSharedState';\n/**\n * An internal record for shared meter provider states.\n */\nvar MeterProviderSharedState = /** @class */ (function () {\n    function MeterProviderSharedState(resource) {\n        this.resource = resource;\n        this.viewRegistry = new ViewRegistry();\n        this.metricCollectors = [];\n        this.meterSharedStates = new Map();\n    }\n    MeterProviderSharedState.prototype.getMeterSharedState = function (instrumentationScope) {\n        var id = instrumentationScopeId(instrumentationScope);\n        var meterSharedState = this.meterSharedStates.get(id);\n        if (meterSharedState == null) {\n            meterSharedState = new MeterSharedState(this, instrumentationScope);\n            this.meterSharedStates.set(id, meterSharedState);\n        }\n        return meterSharedState;\n    };\n    MeterProviderSharedState.prototype.selectAggregations = function (instrumentType) {\n        var e_1, _a;\n        var result = [];\n        try {\n            for (var _b = __values(this.metricCollectors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var collector = _c.value;\n                result.push([collector, collector.selectAggregation(instrumentType)]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    return MeterProviderSharedState;\n}());\nexport { MeterProviderSharedState };\n//# sourceMappingURL=MeterProviderSharedState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { hrTime } from '@opentelemetry/core';\nimport { FlatMap } from '../utils';\n/**\n * An internal opaque interface that the MetricReader receives as\n * MetricProducer. It acts as the storage key to the internal metric stream\n * state for each MetricReader.\n */\nvar MetricCollector = /** @class */ (function () {\n    function MetricCollector(_sharedState, _metricReader) {\n        this._sharedState = _sharedState;\n        this._metricReader = _metricReader;\n    }\n    MetricCollector.prototype.collect = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var collectionTime, meterCollectionPromises, result;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        collectionTime = hrTime();\n                        meterCollectionPromises = Array.from(this._sharedState.meterSharedStates.values())\n                            .map(function (meterSharedState) { return meterSharedState.collect(_this, collectionTime, options); });\n                        return [4 /*yield*/, Promise.all(meterCollectionPromises)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                resourceMetrics: {\n                                    resource: this._sharedState.resource,\n                                    scopeMetrics: result.map(function (it) { return it.scopeMetrics; }),\n                                },\n                                errors: FlatMap(result, function (it) { return it.errors; }),\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Delegates for MetricReader.forceFlush.\n     */\n    MetricCollector.prototype.forceFlush = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._metricReader.forceFlush(options)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Delegates for MetricReader.shutdown.\n     */\n    MetricCollector.prototype.shutdown = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._metricReader.shutdown(options)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MetricCollector.prototype.selectAggregationTemporality = function (instrumentType) {\n        return this._metricReader.selectAggregationTemporality(instrumentType);\n    };\n    MetricCollector.prototype.selectAggregation = function (instrumentType) {\n        return this._metricReader.selectAggregation(instrumentType);\n    };\n    return MetricCollector;\n}());\nexport { MetricCollector };\n//# sourceMappingURL=MetricCollector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport * as api from '@opentelemetry/api';\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { Resource } from '@opentelemetry/resources';\nimport { MeterProviderSharedState } from './state/MeterProviderSharedState';\nimport { MetricCollector } from './state/MetricCollector';\n/**\n * This class implements the {@link metrics.MeterProvider} interface.\n */\nvar MeterProvider = /** @class */ (function () {\n    function MeterProvider(options) {\n        var e_1, _a;\n        var _b;\n        this._shutdown = false;\n        this._sharedState = new MeterProviderSharedState((_b = options === null || options === void 0 ? void 0 : options.resource) !== null && _b !== void 0 ? _b : Resource.empty());\n        if ((options === null || options === void 0 ? void 0 : options.views) != null && options.views.length > 0) {\n            try {\n                for (var _c = __values(options.views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var view = _d.value;\n                    this._sharedState.viewRegistry.addView(view);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    }\n    /**\n     * Get a meter with the configuration of the MeterProvider.\n     */\n    MeterProvider.prototype.getMeter = function (name, version, options) {\n        if (version === void 0) { version = ''; }\n        if (options === void 0) { options = {}; }\n        // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#meter-creation\n        if (this._shutdown) {\n            api.diag.warn('A shutdown MeterProvider cannot provide a Meter');\n            return metrics.createNoopMeter();\n        }\n        return this._sharedState\n            .getMeterSharedState({ name: name, version: version, schemaUrl: options.schemaUrl })\n            .meter;\n    };\n    /**\n     * Register a {@link MetricReader} to the meter provider. After the\n     * registration, the MetricReader can start metrics collection.\n     *\n     * @param metricReader the metric reader to be registered.\n     */\n    MeterProvider.prototype.addMetricReader = function (metricReader) {\n        var collector = new MetricCollector(this._sharedState, metricReader);\n        metricReader.setMetricProducer(collector);\n        this._sharedState.metricCollectors.push(collector);\n    };\n    /**\n     * Flush all buffered data and shut down the MeterProvider and all registered\n     * MetricReaders.\n     *\n     * Returns a promise which is resolved when all flushes are complete.\n     */\n    MeterProvider.prototype.shutdown = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._shutdown) {\n                            api.diag.warn('shutdown may only be called once per MeterProvider');\n                            return [2 /*return*/];\n                        }\n                        this._shutdown = true;\n                        return [4 /*yield*/, Promise.all(this._sharedState.metricCollectors.map(function (collector) {\n                                return collector.shutdown(options);\n                            }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Notifies all registered MetricReaders to flush any buffered data.\n     *\n     * Returns a promise which is resolved when all flushes are complete.\n     */\n    MeterProvider.prototype.forceFlush = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // do not flush after shutdown\n                        if (this._shutdown) {\n                            api.diag.warn('invalid attempt to force flush after MeterProvider shutdown');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, Promise.all(this._sharedState.metricCollectors.map(function (collector) {\n                                return collector.forceFlush(options);\n                            }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return MeterProvider;\n}());\nexport { MeterProvider };\n//# sourceMappingURL=MeterProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://tc39.es/proposal-regex-escaping\n// escape ^ $ \\ .  + ? ( ) [ ] { } |\n// do not need to escape * as we interpret it as wildcard\nvar ESCAPE = /[\\^$\\\\.+?()[\\]{}|]/g;\n/**\n * Wildcard pattern predicate, supports patterns like `*`, `foo*`, `*bar`.\n */\nvar PatternPredicate = /** @class */ (function () {\n    function PatternPredicate(pattern) {\n        if (pattern === '*') {\n            this._matchAll = true;\n            this._regexp = /.*/;\n        }\n        else {\n            this._matchAll = false;\n            this._regexp = new RegExp(PatternPredicate.escapePattern(pattern));\n        }\n    }\n    PatternPredicate.prototype.match = function (str) {\n        if (this._matchAll) {\n            return true;\n        }\n        return this._regexp.test(str);\n    };\n    PatternPredicate.escapePattern = function (pattern) {\n        return \"^\" + pattern.replace(ESCAPE, '\\\\$&').replace('*', '.*') + \"$\";\n    };\n    PatternPredicate.hasWildcard = function (pattern) {\n        return pattern.includes('*');\n    };\n    return PatternPredicate;\n}());\nexport { PatternPredicate };\nvar ExactPredicate = /** @class */ (function () {\n    function ExactPredicate(pattern) {\n        this._matchAll = pattern === undefined;\n        this._pattern = pattern;\n    }\n    ExactPredicate.prototype.match = function (str) {\n        if (this._matchAll) {\n            return true;\n        }\n        if (str === this._pattern) {\n            return true;\n        }\n        return false;\n    };\n    return ExactPredicate;\n}());\nexport { ExactPredicate };\n//# sourceMappingURL=Predicate.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PatternPredicate } from './Predicate';\nvar InstrumentSelector = /** @class */ (function () {\n    function InstrumentSelector(criteria) {\n        var _a;\n        this._nameFilter = new PatternPredicate((_a = criteria === null || criteria === void 0 ? void 0 : criteria.name) !== null && _a !== void 0 ? _a : '*');\n        this._type = criteria === null || criteria === void 0 ? void 0 : criteria.type;\n    }\n    InstrumentSelector.prototype.getType = function () {\n        return this._type;\n    };\n    InstrumentSelector.prototype.getNameFilter = function () {\n        return this._nameFilter;\n    };\n    return InstrumentSelector;\n}());\nexport { InstrumentSelector };\n//# sourceMappingURL=InstrumentSelector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExactPredicate } from './Predicate';\nvar MeterSelector = /** @class */ (function () {\n    function MeterSelector(criteria) {\n        this._nameFilter = new ExactPredicate(criteria === null || criteria === void 0 ? void 0 : criteria.name);\n        this._versionFilter = new ExactPredicate(criteria === null || criteria === void 0 ? void 0 : criteria.version);\n        this._schemaUrlFilter = new ExactPredicate(criteria === null || criteria === void 0 ? void 0 : criteria.schemaUrl);\n    }\n    MeterSelector.prototype.getNameFilter = function () {\n        return this._nameFilter;\n    };\n    /**\n     * TODO: semver filter? no spec yet.\n     */\n    MeterSelector.prototype.getVersionFilter = function () {\n        return this._versionFilter;\n    };\n    MeterSelector.prototype.getSchemaUrlFilter = function () {\n        return this._schemaUrlFilter;\n    };\n    return MeterSelector;\n}());\nexport { MeterSelector };\n//# sourceMappingURL=MeterSelector.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport { appendResourcePathToUrl, appendRootPathToUrlIfNeeded, OTLPExporterBrowserBase } from '@opentelemetry/otlp-exporter-base';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\nvar DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/traces';\nvar DEFAULT_COLLECTOR_URL = \"http://localhost:4318/\" + DEFAULT_COLLECTOR_RESOURCE_PATH;\n/**\n * Collector Trace Exporter for Web\n */\nvar OTLPTraceExporter = /** @class */ (function (_super) {\n    __extends(OTLPTraceExporter, _super);\n    function OTLPTraceExporter(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS));\n        return _this;\n    }\n    OTLPTraceExporter.prototype.convert = function (spans) {\n        return createExportTraceServiceRequest(spans, true);\n    };\n    OTLPTraceExporter.prototype.getDefaultUrl = function (config) {\n        return typeof config.url === 'string'\n            ? config.url\n            : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0\n                ? appendRootPathToUrlIfNeeded(getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT, DEFAULT_COLLECTOR_RESOURCE_PATH)\n                : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n                    ? appendResourcePathToUrl(getEnv().OTEL_EXPORTER_OTLP_ENDPOINT, DEFAULT_COLLECTOR_RESOURCE_PATH)\n                    : DEFAULT_COLLECTOR_URL;\n    };\n    return OTLPTraceExporter;\n}(OTLPExporterBrowserBase));\nexport { OTLPTraceExporter };\n//# sourceMappingURL=OTLPTraceExporter.js.map","import { Tracer } from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { BatchSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\n\nconst DEFAULT_URL = 'http://localhost:4318/v1/traces';\n\nexport const SmTracerProvider: {\n  init: (opts: ProviderInitOptions) => void;\n  isInitialized: () => boolean;\n  getTracer: () => Tracer;\n  defaultUrl: string;\n} = (() => {\n  let _tracerProvider: WebTracerProvider;\n  let _instance: Tracer;\n  return {\n    init: (opts) => {\n      if (_instance) {\n        return;\n      }\n      opts.url = opts.url || DEFAULT_URL;\n      opts.webSDKVersion = opts.webSDKVersion || 'unknown';\n      _tracerProvider = new WebTracerProvider({\n        resource: new Resource({\n          [SemanticResourceAttributes.SERVICE_NAME]: 'smwebsdk',\n          [SemanticResourceAttributes.SERVICE_VERSION]: opts.webSDKVersion,\n        }),\n      });\n      _tracerProvider.addSpanProcessor(\n        new BatchSpanProcessor(\n          new OTLPTraceExporter({\n            url: opts.url,\n            headers: {\n              Authorization: 'Bearer ' + opts.jwt,\n            },\n          })\n        )\n      );\n      _tracerProvider.register();\n      _instance = _tracerProvider.getTracer('smwebsdk');\n    },\n    isInitialized: () => {\n      return !!_instance;\n    },\n    getTracer: () => {\n      return _instance;\n    },\n    defaultUrl: DEFAULT_URL,\n  };\n})();\nObject.freeze(SmTracerProvider);\n\n/**\n * Available configuration options for the tracer provider.\n */\nexport type ProviderInitOptions = {\n  jwt: string;\n  url: string | undefined;\n  webSDKVersion: string | undefined;\n};\n","/*\nWARNING\n- We have three different bundles, only one is built with webpack and supports environment variables.\n- This file gets string replaced at build time, which is a temporary solution until we can use webpack (or a similar bundler) for all bundles\n*/\n\nexport const websdkVersion =\n  (typeof process !== 'undefined' && '15.7.0') ||\n  'unknown';\n","/**\n * @module smwebsdk\n */\n\n/*\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { Persona } from './Persona';\nimport { SmEvent } from './SmEvent';\nimport { LocalSession } from './LocalSession';\nimport { Session } from './Session';\nimport { WebSocketSession } from './WebSocketSession';\nimport {\n  WebsocketResponse,\n  WebsocketCategory,\n  WebsocketKind,\n} from './websocket-message/index';\nimport { SpeechState } from './websocket-message/enums/SpeechState';\nimport {\n  SceneRequest,\n  SceneRequestBody,\n  StartRecognizeRequestBody,\n  SceneResponse,\n  RecognizeResultsResponseBody,\n  DemoModeResponseBody,\n  SceneResponseError,\n  ConversationResultResponseBody,\n  SpeechMarkerResponseBody,\n  StateResponseBody,\n} from './websocket-message/scene/index';\nimport { AudioSourceTypes } from './enums/index';\nimport {\n  ConfigurationModel,\n  PersonaEventMap,\n  PendingPromise,\n} from './models/index';\nimport { SceneResponseBody } from './websocket-message/scene/SceneResponse';\nimport { FeatureFlag } from './websocket-message/scene/response-body/StateResponseBody';\nimport { ContentAwareness } from './ContentAwareness';\nimport { Logger, LogLevel } from './utils/Logger';\nimport { Context, ROOT_CONTEXT, Span } from '@opentelemetry/api';\nimport { makeError } from './utils/make-error';\nimport convertToUserMedia from './utils/convertToUserMedia';\nimport { convertWssToHttps, getUrlHost } from './utils/utils';\nimport {\n  LoggingConfig,\n  MediaDeviceOptions,\n  RetryOptions,\n  UserMedia,\n} from './types/scene';\nimport { Conversation } from './Conversation';\nimport { MetadataSender } from './MetadataSender';\nimport { PersonaId } from './models/PersonaId';\nimport { ConnectionState } from './ConnectionState';\nimport { SmTracerProvider } from './SmTelemetry';\nimport { websdkVersion } from './env-vars';\n\nfunction sleep(t: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(() => resolve(), t));\n}\n\nconst DEFAULT_RETRY_COUNT = 50;\nconst DEFAULT_RETRY_DELAY = 200;\nconst DEFAULT_PERSONA_ID = 1;\n\n/**\n * Configuration to use when constructing a Scene\n *\n * @public\n */\nexport interface SceneOptions {\n  /** The HTMLVideoElement where the digital person should be displayed */\n  videoElement?: HTMLVideoElement;\n  /** Whether the connection should be established with audio but no video */\n  audioOnly?: boolean;\n  /** Default true. True means that the DP's speech should be interrupted when the user changes tabs */\n  stopSpeakingWhenNotVisible?: boolean;\n  /** Media devices (camera and microphone) to request from the user before connecting */\n  requestedMediaDevices?: MediaDeviceOptions;\n  /** Media devices (camera and microphone) that the user must approve access to for the connection to succeed */\n  requiredMediaDevices?: MediaDeviceOptions;\n  /** Frequency of sending on-screen content measurements to the server in milliseconds */\n  contentAwarenessDebounceTime?: number;\n  /** Preferred logging levels for websdk */\n  loggingConfig?: LoggingConfig;\n  /** The API key used to authenticate with the server */\n  apiKey?: string;\n  /** The config to allow sending current page url when connection succeeds */\n  sendMetadata?: {\n    pageUrl: boolean;\n  };\n  /** Configuration of the OpenTelemetry tracer */\n  tracerOptions?: TracerOptions;\n}\n\n/**\n * Configuration to use when connecting to a Scene\n *\n * @public\n */\nexport interface ConnectOptions {\n  /** Options for customizing connection error retries */\n  retryOptions?: RetryOptions;\n  /** A custom text string that is sent to the orchestration server */\n  userText?: string;\n  /** The custom token server config */\n  tokenServer?: {\n    /** The server websocket uri  */\n    uri: string;\n    /** A jwt access token issued to permit access to the server */\n    token: string;\n  };\n}\n\nasync function retry(\n  task: () => Promise<any>,\n  retryOptions: RetryOptions = {},\n  scene: Scene\n) {\n  const errors = [];\n  const count = retryOptions.maxRetries || DEFAULT_RETRY_COUNT;\n  const delay = retryOptions.delayMs || DEFAULT_RETRY_DELAY;\n  let result: Promise<any> | undefined;\n  for (let i = 0; i < count; i++) {\n    try {\n      result = await task();\n\n      // store the result on the scene object\n      scene.connectionResult = {\n        message: 'success',\n        value: result,\n        retries: errors,\n      };\n    } catch (error: unknown) {\n      // collect a history of errors encountered during connect\n      errors.push(error);\n\n      // store the result on the scene object\n      scene.connectionResult = {\n        message: 'failed',\n        retries: errors,\n      };\n\n      //if error is 'noResumeSession` should cleanup session storage\n      if (error instanceof Error && error.name === 'noSessionToResume') {\n        clearSessionData();\n      }\n\n      // any error other than 'noScene' should throw immediately\n      // and should not retry repeatedly.\n      // allows for proper errors and also string errors\n      if (!(error instanceof Error) || error.name !== 'noScene') {\n        throw error;\n      }\n\n      // when we have reached the max number of retries,\n      // we should give up and throw the error\n      if (errors.length === count) {\n        console.warn(\n          `Retry gave up after ${count} retries:\\n${errors\n            .map((e) =>\n              e instanceof Error ? e.message : (e as string).toString()\n            )\n            .join('\\n')}`\n        );\n\n        // throw the most recent error as the primary cause of failure\n        throw error;\n      }\n\n      await sleep(delay);\n      continue;\n    }\n    break;\n  }\n  return result;\n}\n\nfunction storeSessionData(server: string, sessionId: string, apiKey: string) {\n  sessionStorage.setItem('sm-server', server);\n  sessionStorage.setItem('sm-session-id', sessionId);\n  sessionStorage.setItem('sm-api-key', apiKey);\n}\n\nfunction getSessionData() {\n  return {\n    server: sessionStorage.getItem('sm-server'),\n    resumeSessionId: sessionStorage.getItem('sm-session-id'),\n    savedApiKey: sessionStorage.getItem('sm-api-key'),\n  };\n}\n\nfunction clearSessionData() {\n  sessionStorage.removeItem('sm-server');\n  sessionStorage.removeItem('sm-session-id');\n  sessionStorage.removeItem('sm-api-key');\n}\n\n/**\n * Available configuration options for the `Scene.connect` tracer.\n */\nexport type TracerOptions = {\n  /** Suppress tracing by OpenTelemetry. */\n  disableTracing: boolean;\n  /** The context to use as the parent for tracing. */\n  parentCtx: Context;\n  /** The endpoint to use for sending traces */\n  url: string;\n};\n\n/**\n * Scene class to hold a webrtc connection to a scene containing a persona.\n * @public\n */\nexport class Scene {\n  private _apiKey: string | undefined;\n  private _videoElement: HTMLVideoElement | undefined;\n  private _audioOnly: boolean;\n  private _requestedUserMedia: UserMedia;\n  private _requiredUserMedia: UserMedia;\n  /**\n   * set to function(scene, state) called when a state message is received as per the scene protocol\n   * (DEPRECATED: onStateEvent.addListener allows for multiple listeners).\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _onState: Function | undefined; // function (scene, state)\n  private _onStateEvent: SmEvent;\n\n  /**\n   * set to function(scene, results) called when speech to text results are recognized,\n   * results are documented in scene protocol\n   * (DEPRECATED: onRecognizeResultsEvent.addListener allows for multiple listeners).\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _onRecognizeResults: Function | undefined; // function (scene, results)\n  private _onRecognizeResultsEvent: SmEvent;\n\n  private _metadataSender: MetadataSender;\n\n  /**\n   * set to function(scene, sessionId, reason) called when the session is disconnected.\n   * 'reason' can be one of 'normal' or 'sessionTimeout'\n   * (DEPRECATED: onDisconnectedEvent.addListener allows for multiple listeners).\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _onDisconnected: Function | undefined; // function (scene, sessionId, reason)\n  private _onDisconnectedEvent: SmEvent;\n\n  /** set to function(scene, text) called when a custom text message is sent from the orchestration server */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _onUserText: Function | undefined; // function (scene, text)\n  private _onUserTextEvent: SmEvent;\n\n  /** Demo mode events */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _onDemoMode: Function | undefined; // function (scene, params)\n  private _onDemoModeEvent: SmEvent;\n\n  private _onConversationResultEvents: PersonaEventMap = {}; // persona id -> SmEvent with function(persona, result)\n  private _onSpeechMarkerEvents: PersonaEventMap = {}; // persona id -> SmEvent function(persona, marker)\n\n  private _session: Session | LocalSession | WebSocketSession | undefined =\n    undefined;\n\n  private _underRuntimeHost: boolean;\n  private _isWebSocketOnly = false;\n\n  private _transactionId = 0;\n  private _pendingResponses: { [index: string]: PendingPromise } = {};\n\n  private _sceneId: string;\n\n  private _microphoneUnmuteTimer: any = undefined;\n\n  private _echoCancellationEnabled = true;\n\n  private _serverControlledCameras = false;\n\n  private _stopSpeakingWhenNotVisible = true;\n\n  private _loggingConfig: LoggingConfig = {\n    session: {},\n    contentAwareness: {},\n  };\n\n  private _logger: Logger = new Logger();\n\n  private _tracerOptions: TracerOptions = {\n    disableTracing: false,\n    parentCtx: ROOT_CONTEXT,\n    url: SmTracerProvider.defaultUrl,\n  };\n\n  public connectionResult: any;\n\n  public contentAwareness: ContentAwareness | undefined;\n  public contentAwarenessDebounceTime: number | undefined;\n  private _sessionResumeEnabled = false;\n  private _isResumedSession = false;\n  private _sendMetadata = { pageUrl: false };\n\n  private _onMicrophoneActive = new SmEvent();\n  private _onCameraActive = new SmEvent();\n\n  public conversation: Conversation;\n  public connectionState: ConnectionState;\n  public currentPersonaId: PersonaId = DEFAULT_PERSONA_ID;\n  /** Returns the version of the webSdk and platformSdk */\n  public version = {\n    webSdk: websdkVersion,\n    platformSdk: 'unknown',\n  };\n\n  /**\n   * Tests the first value of the Scene construtor to decide if\n   * it matches the new-style config options format.\n   */\n  private isSceneOptions(\n    videoOrOptions?: HTMLVideoElement | SceneOptions\n  ): videoOrOptions is SceneOptions {\n    // scene options must be defined, even if they're an empty object\n    const isDefined = !!videoOrOptions;\n    // scene options object will not have a tagName\n    const isHTMLElement = !!(videoOrOptions as HTMLVideoElement)?.tagName;\n\n    return isDefined && !isHTMLElement;\n  }\n\n  /**\n   * Construct Scene from options object\n   * @param options - {@link SceneOptions} Optional configuration for the Scene. May be an empty object.\n   */\n  constructor(options: SceneOptions);\n  /**\n   * Construct Scene with parameters\n   * @deprecated Use `new Scene(options: SceneOptions)` instead\n   * @param videoElement - A video element that will display the connected scene\n   * @param audioOnly - This streaming should be audio streaming only (no video streaming)\n   * @param requestedUserMedia - The user media devices (microphone/camera) that should be requested, one of:\n   *     UserMedia.None, UserMedia.Microphone, UserMedia.MicrophoneAndCamera (default)\n   * @param requiredUserMedia - Required user media devices, one of:\n   *     UserMedia.None, UserMedia.Microphone, UserMedia.MicrophoneAndCamera\n   *     If less user media devices are requested then are required then the requirements takes precedence.\n   *     If this user media requirements is not met then Connect() will fail.\n   * @param contentAwarenessDebounceTime - The timeout period used for debouncing messaging within the content awareness class\n   * @param loggingConfig - Options to configure different log levels for different classes\n   */\n  constructor(\n    videoElement?: HTMLVideoElement,\n    audioOnly?: boolean,\n    requestedUserMedia?: UserMedia,\n    requiredUserMedia?: UserMedia,\n    contentAwarenessDebounceTime?: number,\n    loggingConfig?: Partial<LoggingConfig>,\n    tracerOptions?: TracerOptions\n  );\n  constructor(\n    videoOrOptions?: HTMLVideoElement | SceneOptions,\n    audioOnly = false,\n    requestedUserMedia = UserMedia.MicrophoneAndCamera,\n    requiredUserMedia = UserMedia.Microphone,\n    contentAwarenessDebounceTime?: number,\n    loggingConfig?: Partial<LoggingConfig>,\n    tracerOptions?: TracerOptions\n  ) {\n    // use the first parameter of the constructor to figure out\n    // whether it was constructed using SceneOptions, or using\n    // the deprecated multi-param format.\n    if (this.isSceneOptions(videoOrOptions)) {\n      // pull all private property initial values from the config object,\n      // with fallbacks to the constructor property defaults if not provided\n      const options = videoOrOptions;\n      this._videoElement = options.videoElement;\n      this._apiKey = options.apiKey;\n      this._audioOnly = options.audioOnly || audioOnly;\n\n      // default is \"true\" so can't use a shorthand falsy assessment to read this config option\n      if (options.stopSpeakingWhenNotVisible === false) {\n        this._stopSpeakingWhenNotVisible = false;\n      }\n\n      this._requestedUserMedia = convertToUserMedia(\n        options.requestedMediaDevices,\n        requestedUserMedia\n      );\n      this._requiredUserMedia = convertToUserMedia(\n        options.requiredMediaDevices,\n        requiredUserMedia\n      );\n      this.contentAwarenessDebounceTime = options.contentAwarenessDebounceTime;\n      this._loggingConfig = {\n        ...this._loggingConfig,\n        ...(options.loggingConfig || {}),\n      };\n      if (options.sendMetadata) {\n        this._sendMetadata = options.sendMetadata;\n      }\n      if (options.tracerOptions) {\n        this._tracerOptions = options.tracerOptions;\n      }\n    } else {\n      // take all private property initial values directly from the constructor props\n      this._videoElement = videoOrOptions;\n      this._audioOnly = audioOnly;\n      this._requestedUserMedia = requestedUserMedia;\n      this._requiredUserMedia = requiredUserMedia;\n      this.contentAwarenessDebounceTime = contentAwarenessDebounceTime;\n      this._loggingConfig = {\n        ...this._loggingConfig,\n        ...loggingConfig,\n      };\n      if (tracerOptions) {\n        this._tracerOptions = tracerOptions;\n      }\n    }\n\n    this._logger = new Logger(\n      this._loggingConfig.session.minLogLevel,\n      this._loggingConfig.session.enabled\n    );\n\n    /**\n     * call onStateEvent.addListener(function(scene, state)) to be called when a state message is received as per the scene protocol\n     * call onStateEvent.removeListener(function(scene, state)) to deregister a listener.\n     */\n    this._onStateEvent = new SmEvent();\n    this._onStateEvent.addListener((scene: Scene, state: StateResponseBody) => {\n      if (this._onState) {\n        this._onState(scene, state);\n      }\n    });\n\n    /**\n     * call onRecognizeResultsEvent.addListener(function(scene, status, errorMessage, results)) to be called when speech to text results are recognized, results are documented in scene protocol.\n     * call onRecognizeResultsEvent.removeListener(function(scene, status, errorMessage, results)) to deregister a listener.\n     */\n    this._onRecognizeResultsEvent = new SmEvent();\n    this._onRecognizeResultsEvent.addListener(\n      (\n        scene: Scene,\n        status: RecognizeResultsResponseBody['status'],\n        errorMessage: RecognizeResultsResponseBody['errorMessage'],\n        results: RecognizeResultsResponseBody['results']\n      ) => {\n        if (this._onRecognizeResults) {\n          this._onRecognizeResults(scene, status, errorMessage, results);\n        }\n      }\n    );\n\n    /**\n     * call onDisconnectedEvent.addListener(function(scene, sessionId, reason)) to be  called when the session is disconnected.\n     * call onDisconnectedEvent.removeListener(function(scene, sessionId, reason)) to deregister a listener.\n     */\n    this._onDisconnectedEvent = new SmEvent();\n    this._onDisconnectedEvent.addListener(\n      (scene: Scene, sessionId: string, reason: string) => {\n        clearSessionData();\n        this.cleanupEventListeners();\n        if (this._onDisconnected) {\n          this._onDisconnected(scene, sessionId, reason);\n        }\n      }\n    );\n\n    /**\n     * call onUserTextEvent.addListener(function(scene, text)) to be called when a custom text message is sent from the orchestration server\n     * call onUserTextEvent.removeListener(function(scene, text)) to deregister a listener.\n     */\n    this._onUserTextEvent = new SmEvent();\n    this._onUserTextEvent.addListener((scene: Scene, text: string) => {\n      if (this._onUserText) {\n        this._onUserText(scene, text);\n      }\n    });\n\n    this._onDemoModeEvent = new SmEvent();\n\n    this._underRuntimeHost = Boolean(window.SmIsUnderRuntimeHost);\n\n    // Generate a random id for the scene. This is used internally with the _transactionId\n    // to ensure unique transaction ids when mulitple Scene instances access the same BL instances\n    // eg multiple Soul Studio windows\n    const randArray = new Uint32Array(3);\n    window.crypto.getRandomValues(randArray);\n    this._sceneId = randArray.toString().replace(/,/g, '-');\n\n    this.conversation = new Conversation();\n    this.connectionState = new ConnectionState();\n    this._metadataSender = new MetadataSender(this);\n\n    this._logger.log('debug', 'websdk version:', this.version.webSdk);\n  }\n\n  public connectionValid(): boolean {\n    if (this._underRuntimeHost) {\n      return true;\n    }\n    if (this._session && this._session.serverConnection) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Check if the scene connection is open and valid.\n   *\n   * @returns Returns true if the connection is open and valid otherwise false.\n   */\n  public isConnected(): boolean {\n    if (\n      this.connectionValid() &&\n      this._session &&\n      this._session.serverConnection &&\n      this._session.serverConnection.readyState ===\n        this._session.serverConnection.OPEN\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Extends the server side timeout. This also happens automatically whenever the persona speaks.\n   */\n  public keepAlive() {\n    if (this._session && this._session.peerConnection !== null) {\n      this._session.sendRtcEvent('keepAlive', {});\n    }\n  }\n\n  /**\n   * Disconnects the session\n   */\n  public disconnect() {\n    clearSessionData();\n    this.cleanupEventListeners();\n    this.connectionState.reset();\n    this.conversation.reset();\n    this.contentAwareness?.disconnect();\n    this._metadataSender.disconnect();\n    this._session?.close(true);\n    this._session = undefined;\n  }\n\n  private iosVisibilityChange = () => {\n    const visible = document.visibilityState === 'visible';\n    setTimeout(() => {\n      if (this._session) {\n        this._session.sendRtcEvent('ui', { visible });\n      }\n    }, 500); // allow 100ms for the H.264 decoder to become fully available again\n  };\n  /**\n   * Connect to a scene using options object\n   */\n  public async connect(options?: ConnectOptions): Promise<string | undefined>;\n  // from sceneKind (e.g. persona selection - rachel/nadia) and process into serverUri if needed, keep connection\n  // abstract from person in case we need straight webrtc connection\n  /**\n   * Connect to a scene at the given server uri.\n   *\n   * @param serverUri - The server websocket uri to connect to.\n   * @param userText - A custom text string that is sent to the orchestration server.\n   * @param accessToken - A jwt access token issued to permit access to this server.\n   * @param retryOptions - Options for customizing connection error retry.\n   * @returns  Returns a promise that holds success/failure callbacks. If the promise\n   *                      is rejected then an Eror is given as the argument\n   *                      converts to a string message.  The error result has two fields 'message'\n   *                      which is the string message and 'name' which is one of the following\n   *                      error name/reason codes:\n   *    - **notSupported** - the browser does not support getUserMedia\n   *    - **noUserMedia** - the microphone/camera is either not available, not usable or the user declined permission to use them\n   *    - **serverConnectionFailed** - the connection to the server failed\n   *    - **noScene** - no persona was available\n   *    - **mediaStreamFailed** - the audio/video stream failed\n   *    - **sessionTimeout** - the session timed out before it was fully available\n   */\n  public async connect(\n    serverUri?: string,\n    userText?: string,\n    accessToken?: string,\n    retryOptions?: RetryOptions\n  ): Promise<string | undefined>;\n  public async connect(\n    serverUriOrOptions?: string | ConnectOptions,\n    userText?: string,\n    accessToken?: string,\n    retryOptions?: RetryOptions\n  ) {\n    const connectStartTime = Date.now();\n\n    const config = this.connectArgsToConfig(\n      serverUriOrOptions,\n      userText,\n      accessToken,\n      retryOptions\n    );\n\n    let span: Span;\n    const recordEventsToSpan = (event: { name: string }) => {\n      span?.addEvent(event.name);\n    };\n    this.connectionState.onConnectionStateUpdated.addListener(\n      recordEventsToSpan\n    );\n    if (this._underRuntimeHost) {\n      this._session = new LocalSession(this._videoElement, this._logger);\n    } else {\n      // Determine if user is passing in auth via the params\n      const hasPassedInTokenServerAuth =\n        config.tokenServerUri || config.tokenServerAccessToken;\n\n      if (this._apiKey && hasPassedInTokenServerAuth) {\n        this._logger.log(\n          'warn',\n          'You are trying to connect via an API key and a token server. Please use one or the other'\n        );\n      }\n\n      // If API key is defined and the auth creds have not been passed in\n      if (this._apiKey && !hasPassedInTokenServerAuth) {\n        try {\n          const response = await this.fetchAuthConfig(this._apiKey);\n          const data: { url: string; jwt: string } = await response.json();\n          const { server } = getSessionData();\n          config.tokenServerUri = data.url;\n          config.tokenServerAccessToken = data.jwt;\n          if (server) {\n            config.tokenServerUri = getUrlHost(data.url) + 'server/' + server;\n          }\n        } catch (error) {\n          if (error instanceof Error && error.message === 'Broken API key') {\n            this._logger.log(\n              'error',\n              'Broken API key. Please check your key or re copy the key from DDNA Studio.'\n            );\n          } else {\n            this._logger.log(\n              'error',\n              'Invalid API key: Please check your key configuration in DDNA Studio. For more information click here https://soulmachines-support.atlassian.net/wiki/spaces/SSAS/pages/1320058919/Connecting+Using+API+Keys#Troubleshooting'\n            );\n          }\n          throw makeError('Invalid API key', 'serverConnectionFailed');\n        }\n      }\n\n      if (!config.tokenServerUri || !config.tokenServerAccessToken) {\n        throw makeError(\n          'Please authenticate via an API key or with a serverUri and accessToken',\n          'serverConnectionFailed'\n        );\n      }\n\n      // Initialize the tracer\n      const { initTracerStartTime, initTracerEndTime } =\n        await this.initializeTracer(\n          config.tokenServerUri,\n          config.tokenServerAccessToken\n        );\n\n      span = SmTracerProvider.getTracer()\n        ?.startSpan('createSessionAndConnect')\n        ?.setAttribute(\n          'sm.websdk.connection.pretraceinitduration.milliseconds',\n          initTracerStartTime - connectStartTime\n        )\n        ?.setAttribute(\n          'sm.websdk.connection.traceinitduration.milliseconds',\n          initTracerEndTime - initTracerStartTime\n        );\n\n      if (this._isWebSocketOnly) {\n        this._session = new WebSocketSession(\n          config.tokenServerUri,\n          config.tokenServerAccessToken,\n          this._logger\n        );\n      } else {\n        this._session = new Session(\n          this._videoElement as HTMLVideoElement,\n          config.tokenServerUri,\n          config.userText,\n          config.tokenServerAccessToken,\n          this._audioOnly,\n          this._requestedUserMedia,\n          this._requiredUserMedia,\n          this._echoCancellationEnabled,\n          this._logger,\n          this.connectionState\n        );\n      }\n    }\n\n    if (!this._session) {\n      throw makeError('Failed to create session', 'unknown');\n    }\n\n    this._session.onConnected = this.sessionConnected.bind(this);\n    this._session.onMessage = this.onMessage.bind(this);\n    this._session.onClose = this.sessionClosed.bind(this);\n    this._session.onUserText = this.rtcUserText.bind(this);\n\n    if ('microphoneActiveCallbacks' in this._session) {\n      this._session.microphoneActiveCallbacks = this._onMicrophoneActive;\n    }\n    if ('cameraActiveCallbacks' in this._session) {\n      this._session.cameraActiveCallbacks = this._onCameraActive;\n    }\n    if (this._session.features.isIos) {\n      document.addEventListener('visibilitychange', this.iosVisibilityChange);\n    }\n\n    return await retry(\n      async () => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return await this!._session!.connect();\n      },\n      config.retryOptions,\n      this\n    ).finally(() => {\n      this.connectionState.onConnectionStateUpdated.removeListener(\n        recordEventsToSpan\n      );\n      span?.end();\n    });\n  }\n\n  private async initializeTracer(\n    tokenServerUri: string,\n    tokenServerAccessToken: string\n  ): Promise<{ initTracerStartTime: number; initTracerEndTime: number }> {\n    const initTracerStartTime = Date.now();\n    if (\n      !this._tracerOptions.disableTracing &&\n      !SmTracerProvider.isInitialized()\n    ) {\n      try {\n        await this.initTelemetryToken({\n          tokenServerUri,\n          authToken: tokenServerAccessToken,\n        });\n      } catch (error: unknown) {\n        const base = 'Could not initialize tracer telemetry token: ';\n        if (\n          error instanceof ReferenceError &&\n          error.message === 'fetch is not defined'\n        ) {\n          // This happens in a non-browser environment (usually a test\n          // environment), so we can't get a telemetry token. Just log to\n          // debug.\n          this._logger.log('debug', base + error.name + ': ' + error.message);\n        } else if (error instanceof Error) {\n          this._logger.log('warn', base + error.name + ': ' + error.message);\n        } else {\n          this._logger.log('warn', base + 'unknown error type');\n        }\n      }\n    }\n    return { initTracerStartTime, initTracerEndTime: Date.now() };\n  }\n\n  private async initTelemetryToken({\n    tokenServerUri,\n    authToken,\n  }: {\n    tokenServerUri: string;\n    authToken: string;\n  }): Promise<void> {\n    const otelJwtEndpoint = 'api/telemetry/jwt';\n    const tracesEndpoint = 'api/telemetry/v1/traces';\n    const telemetryHost = getUrlHost(convertWssToHttps(tokenServerUri));\n    if (!telemetryHost) {\n      this._logger.log(\n        'debug',\n        'Could not initialize tracer telemetry token: invalid token server URI'\n      );\n      return;\n    }\n\n    const resp = await fetch(telemetryHost + otelJwtEndpoint, {\n      headers: {\n        Authorization: 'Bearer ' + authToken,\n      },\n    });\n\n    if (!resp) {\n      this._logger.log(\n        'warn',\n        'Failed to receive response from otel token endpoint'\n      );\n      return;\n    }\n    if (!resp.ok) {\n      this._logger.log(\n        'warn',\n        'Failed to fetch otel token: ' + resp.status + ': ' + resp.statusText\n      );\n      return;\n    }\n\n    const otelResponse: { success: boolean; telemetryJwt: string } =\n      await resp.json();\n    if (!otelResponse.success) {\n      this._logger.log('warn', 'Failed: otel response not successful');\n      return;\n    }\n\n    try {\n      SmTracerProvider.init({\n        jwt: otelResponse.telemetryJwt,\n        url: telemetryHost + tracesEndpoint,\n        webSDKVersion: this.version.webSdk,\n      });\n      this._logger.log('log', 'Telemetry initialized');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        this._logger.log(\n          'warn',\n          'Failed to initialize tracer: ' + error.message\n        );\n      } else {\n        this._logger.log('warn', 'Failed to initialize tracer: unknown error');\n      }\n    }\n  }\n\n  public onMessage(message: WebsocketResponse) {\n    const { category } = message;\n\n    if (category === 'scene') {\n      const sceneMessage = message as SceneResponse;\n      this.onSceneMessage(sceneMessage);\n      return;\n    }\n  }\n\n  public sendOnewaySceneRequest(name: string, body: SceneRequestBody) {\n    if (!this._session) {\n      return;\n    }\n\n    const payload: SceneRequest = {\n      name,\n      body,\n      category: WebsocketCategory.Scene,\n      kind: WebsocketKind.Request,\n    };\n    this._session.sendMessage(payload);\n  }\n\n  /**\n   * The internal method used for sending request messages.\n   *\n   * All offically supported message have their own public methods (e.g. `conversationSend()` or `scene.startRecognize()`). \\\n   * Please use those instead.\n   *\n   * @internal\n   */\n  public sendRequest(name: string, body: SceneRequestBody = {}): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (!this._session) {\n        reject(makeError('No session available', 'noSession'));\n        return;\n      }\n\n      const transaction = this._sceneId + '_' + ++this._transactionId;\n      const payload: SceneRequest = {\n        transaction,\n        name,\n        body,\n        category: WebsocketCategory.Scene,\n        kind: WebsocketKind.Request,\n      };\n\n      const pending: PendingPromise = { resolve, reject };\n      this._pendingResponses[transaction] = pending;\n      if (this._session) {\n        this._session.sendMessage(payload);\n      }\n    });\n  }\n\n  public onSceneMessage(message: SceneResponse) {\n    const { name, body, kind, status, transaction } = message;\n\n    // Process events\n    if (body && name === 'state') {\n      const responseBody = body as StateResponseBody;\n      this._onStateEvent.call(this, responseBody);\n\n      if (responseBody.scene?.featureFlags) {\n        this.enableFlaggedFeatures(responseBody.scene.featureFlags);\n      }\n\n      if (responseBody.scene?.sdkVersion) {\n        this.version.platformSdk = responseBody.scene?.sdkVersion;\n        this._logger.log(\n          'debug',\n          'platformSdk version:',\n          this.version.platformSdk\n        );\n      }\n\n      this.conversation.processStateMessage(responseBody);\n\n      // mute the microphone while a persona is speaking\n      this.controlMicrophoneMute(body as StateResponseBody);\n    } else if (body && name === 'recognizeResults') {\n      const { status, errorMessage, results } =\n        body as RecognizeResultsResponseBody;\n      this.conversation.processRecognizeResultsMessage(\n        body as RecognizeResultsResponseBody\n      );\n      this._onRecognizeResultsEvent.call(this, status, errorMessage, results);\n    } else if (body && name === 'conversationResult') {\n      this.conversation.onConversationResult(\n        body as ConversationResultResponseBody\n      );\n      const { personaId } = body as ConversationResultResponseBody;\n      if (personaId) {\n        const persona = new Persona(this, personaId);\n        const event: SmEvent = this._onConversationResultEvents[personaId];\n        event.call(persona, body as ConversationResultResponseBody);\n        this.currentPersonaId = personaId;\n      }\n    } else if (body && name === 'speechMarker') {\n      this.conversation.onSpeechMarker(body as SpeechMarkerResponseBody);\n      const { personaId } = body as SpeechMarkerResponseBody;\n      if (personaId) {\n        const persona = new Persona(this, personaId);\n        const event: SmEvent = this._onSpeechMarkerEvents[personaId];\n        event.call(persona, body as SpeechMarkerResponseBody);\n        this.currentPersonaId = personaId;\n      }\n    } else if (body && name === 'demoMode') {\n      this._onDemoModeEvent.call(this, body as DemoModeResponseBody);\n    }\n\n    // Process responses, message should always be a response as far as we're aware\n    if (kind === WebsocketKind.Response && transaction) {\n      this.processResponse(body, name, status, transaction);\n    }\n  }\n\n  protected processResponse(\n    body: SceneResponseBody,\n    name: string,\n    status: number,\n    transaction: string\n  ) {\n    // Check for a pending response\n    const pending: PendingPromise = this._pendingResponses[transaction];\n    if (pending) {\n      if (status === 0) {\n        // Success\n        pending.resolve(body);\n      } else {\n        // Failure\n        const error = new SceneResponseError();\n        error.requestName = name;\n        error.status = status;\n        error.responseBody = body;\n        pending.reject(error);\n      }\n\n      delete this._pendingResponses[transaction];\n    }\n  }\n\n  private controlMicrophoneMute(state: StateResponseBody) {\n    // Watch for speaking state transitions and mute the\n    // microphone during persona speech to prevent self interruption\n    if (\n      state.persona &&\n      this._session &&\n      this._session.microphoneMuteDelay !== -1\n    ) {\n      // iterate through the personas looking for speaking state changes\n      for (const personaId in state.persona) {\n        const persona_state = state.persona[personaId];\n        if (!persona_state.speechState) {\n          continue;\n        }\n\n        if (persona_state.speechState === SpeechState.Speaking) {\n          // A persona is speaking, mute the microphone\n          if (!this._session.microphoneMuted) {\n            this._logger.log('warn', 'Persona is speaking - mute microphone');\n            this._session.microphoneMuted = true;\n          }\n          if (this._microphoneUnmuteTimer) {\n            // ensure an in-progress timeout doesn't incorrectly unmute\n            clearTimeout(this._microphoneUnmuteTimer);\n            this._microphoneUnmuteTimer = undefined;\n          }\n        } else {\n          // A persona has stopped speaking, unmute the microphone after\n          // the microphone mute delay\n          if (this._session.microphoneMuted && !this._microphoneUnmuteTimer) {\n            this._microphoneUnmuteTimer = setTimeout(() => {\n              if (!this._session || !this._microphoneUnmuteTimer) {\n                return;\n              }\n              this._logger.log(\n                `warn`,\n                'Persona is no longer speaking - unmute microphone'\n              );\n              this._session.microphoneMuted = false;\n              this._microphoneUnmuteTimer = undefined;\n            }, this._session.microphoneMuteDelay);\n          }\n        }\n      }\n    }\n  }\n\n  /** Close the current scene connection */\n  private close(): void {\n    // close/disconnect the session\n    if (this._session) {\n      this._session.close(true);\n    }\n  }\n\n  private stopSpeakingWhenNotVisible = () => {\n    if (document.visibilityState !== 'visible') {\n      this.sendRequest('stopSpeaking', { personaId: this.currentPersonaId });\n    }\n  };\n\n  private stopSpeakingWhenUnloaded = () => {\n    this.sendRequest('stopSpeaking', { personaId: this.currentPersonaId });\n  };\n\n  private sessionConnected(\n    resumeRequested: boolean,\n    isResumedSession: boolean,\n    server: string,\n    sessionId: string\n  ) {\n    this.contentAwareness = new ContentAwareness(\n      this as Scene,\n      this.contentAwarenessDebounceTime,\n      new Logger(\n        this._loggingConfig.contentAwareness.minLogLevel,\n        this._loggingConfig.contentAwareness.enabled\n      )\n    );\n\n    /*\n    Interrupt DP from speaking so it does not continue talking when user switches tabs\n    */\n    if (this._stopSpeakingWhenNotVisible) {\n      document.addEventListener(\n        'visibilitychange',\n        this.stopSpeakingWhenNotVisible\n      );\n    }\n\n    //when user navigates to a new page, widget DP should stop speaking to allow new welcome message coming through in the new page\n    //however browser doesn't trigger visibilitychange event, only \"beforeunload\" event is sure to be triggered\n    window.addEventListener('beforeunload', this.stopSpeakingWhenUnloaded);\n\n    if (this._sendMetadata.pageUrl) {\n      this._metadataSender.observeUrlChanges();\n    }\n\n    //update resume session data\n    this._isResumedSession = isResumedSession;\n    if (resumeRequested) {\n      this._sessionResumeEnabled = true;\n      storeSessionData(server, sessionId, this._apiKey || '');\n    }\n\n    // When page navigation happens, check if any value in _sendMetadata is true and send it back to NLP so conversation writers can use it\n    if (isResumedSession && this._sendMetadata.pageUrl) {\n      this._metadataSender.send();\n    }\n  }\n\n  private cleanupEventListeners() {\n    if (this._session?.features.isIos) {\n      document.removeEventListener(\n        'visibilitychange',\n        this.iosVisibilityChange\n      );\n    }\n    if (this._stopSpeakingWhenNotVisible) {\n      document.removeEventListener(\n        'visibilitychange',\n        this.stopSpeakingWhenNotVisible\n      );\n    }\n    window.removeEventListener('beforeunload', this.stopSpeakingWhenUnloaded);\n  }\n\n  private sessionClosed(reason: string) {\n    clearSessionData();\n    this.cleanupEventListeners();\n    if (this._session) {\n      this.connectionState.reset();\n      this.conversation.reset();\n      this._onDisconnectedEvent.call(this, this._session.sessionId, reason);\n    }\n  }\n\n  private rtcUserText(text: string) {\n    this._onUserTextEvent.call(this, text);\n  }\n  private enableFlaggedFeatures(featureFlags: FeatureFlag[]) {\n    this._serverControlledCameras = featureFlags.includes(\n      FeatureFlag.UI_SDK_CAMERA_CONTROL\n    );\n  }\n\n  public sendContent() {\n    if (!this.contentAwareness) {\n      console.warn('ContentAwareness is not enabled for this project');\n    }\n    this.contentAwareness?.measure();\n  }\n\n  /**\n   * Sends updated video element size to server\n   * this gives the app the chance to choose what size should be rendered on server\n   * and the application is responsible to register for a video element size change\n   * event and call this method to maintain best possible video quality for the size\n   * and/or to set an updated video element size and then call this method.\n   * @param width - The width in pixels to render the video\n   * @param height - The height in pixels to render the video\n   */\n  public sendVideoBounds(width: number, height: number) {\n    if (this._session) {\n      this._session.sendVideoBounds(width, height);\n    }\n  }\n\n  /**\n   * Send configuration to the scene\n   * @param configuration - Scene configuration as per the scene protocol\n   */\n  public configure(configuration: ConfigurationModel): Promise<any> {\n    return this.sendRequest('configure', configuration);\n  }\n\n  /**\n   * Send a custom user text message to the orchestration server\n   * @param text - Custom text sent to the orchestration server\n   */\n  private sendUserText(text: string) {\n    if (this._session) {\n      this._session.sendUserText(text);\n    }\n  }\n\n  /**\n   * Start the speech to text recognizer\n   * @param audioSource - The audio source either smwebsdk.audioSource.processed or\n   *                    smwebsdk.audioSource.squelched, defaults to processed.\n   */\n  public startRecognize(audioSource?: AudioSourceTypes): Promise<any> {\n    const body: StartRecognizeRequestBody = {};\n\n    if (audioSource !== undefined) {\n      body.audioSource = audioSource;\n    }\n\n    return this.sendRequest('startRecognize', body);\n  }\n\n  /** Stop the speech to text reconizer */\n  public stopRecognize(): Promise<any> {\n    return this.sendRequest('stopRecognize');\n  }\n\n  /** Is the microphone connected in the session */\n  public isMicrophoneConnected(): boolean | null {\n    // public function rather than getter for back compatibility\n    if (this._session) {\n      return this._session.isMicrophoneConnected;\n    }\n    return false;\n  }\n\n  /** Is the camera connected in the session */\n  public isCameraConnected(): boolean | null {\n    // public function rather than getter for back compatibility\n    if (this._session) {\n      return this._session.isCameraConnected;\n    }\n    return false;\n  }\n\n  public session(): Session | LocalSession | WebSocketSession | undefined {\n    // public function rather than getter for back compatibility\n    return this._session;\n  }\n\n  public hasContentAwareness(): boolean {\n    return !!this.contentAwareness;\n  }\n\n  public hasServerControlledCameras(): boolean {\n    return this._serverControlledCameras;\n  }\n\n  /**\n   * Check if session persistence feature is supported in current session\n   *\n   * @returns `boolean`\n   *\n   * Usage:\n   * ```javascript\n   * const isSessionPersistenceSupported = scene.supportsSessionPersistence();\n   * ```\n   */\n  public supportsSessionPersistence(): boolean {\n    return this._sessionResumeEnabled;\n  }\n\n  /**\n   * Check if current session is a new session or a resumed session\n   *\n   * @returns `boolean`\n   *\n   * Usage:\n   * ```javascript\n   * const isResumedSession = scene.isResumedSession();\n   * ```\n   */\n  public isResumedSession(): boolean {\n    return this._isResumedSession;\n  }\n\n  get onConversationResultEvents(): PersonaEventMap {\n    return this._onConversationResultEvents;\n  }\n\n  get onSpeechMarkerEvents(): PersonaEventMap {\n    return this._onSpeechMarkerEvents;\n  }\n\n  /** Get the current scene state */\n  public async getState(): Promise<any> {\n    return this.sendRequest('getState');\n  }\n\n  get onStateEvent(): SmEvent {\n    return this._onStateEvent;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  set onState(onState: Function) {\n    this._onState = onState;\n  }\n\n  get onDisconnectedEvent(): SmEvent {\n    return this._onDisconnectedEvent;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  set onDisconnected(onDisconnected: Function) {\n    this._onDisconnected = onDisconnected;\n  }\n\n  get onRecognizeResultsEvent(): SmEvent {\n    return this._onRecognizeResultsEvent;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  set onRecognizeResults(onRecognizeResults: Function) {\n    this._onRecognizeResults = onRecognizeResults;\n  }\n\n  get onUserTextEvent(): SmEvent {\n    return this._onUserTextEvent;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  set onUserText(onUserText: Function) {\n    this._onUserText = onUserText;\n  }\n\n  public get echoCancellationEnabled() {\n    return this._echoCancellationEnabled;\n  }\n\n  public set echoCancellationEnabled(enabled: boolean) {\n    this._echoCancellationEnabled = enabled;\n  }\n\n  /**\n   * @internal\n   */\n  get onDemoModeEvent(): SmEvent {\n    return this._onDemoModeEvent;\n  }\n\n  get videoElement(): HTMLVideoElement | undefined {\n    return this._videoElement;\n  }\n\n  get viewerOffsetX(): number {\n    if (this._session) {\n      return this._session.offsetX;\n    }\n    return 0;\n  }\n\n  get viewerOffsetY(): number {\n    if (this._session) {\n      return this._session.offsetY;\n    }\n    return 0;\n  }\n\n  get isWebSocketOnly(): boolean {\n    return this._isWebSocketOnly;\n  }\n\n  set isWebSocketOnly(isWebSocketOnly: boolean) {\n    this._isWebSocketOnly = isWebSocketOnly;\n  }\n\n  /**\n   * @returns an {@link SmEvent} associated with the microphone.\n   *\n   * Listeners can then be added to this event allowing you to call functions when the microphone active status changes.\n   *\n   * Usage:\n   * ```javascript\n   * scene.onMicrophoneActive.addListener(\n   *   (active) => console.log('Microphone Active: ', active));\n   * ```\n   */\n  public get onMicrophoneActive(): SmEvent {\n    return this._onMicrophoneActive;\n  }\n\n  /**\n   * Specifies if the microphone is currently active and streaming audio\n   * to the server.\n   *\n   * @returns `boolean`\n   *\n   * Usage:\n   * ```javascript\n   * const isMicrophoneActive = scene.isMicrophoneActive();\n   * ```\n   */\n  public isMicrophoneActive(): boolean {\n    return Boolean(this._session?.isMicrophoneActive());\n  }\n\n  /**\n   * @returns an {@link SmEvent} associated with the camera.\n   *\n   * Listeners can then be added to this event allowing you to call functions when the camera active status changes.\n   *\n   * Usage:\n   * ```javascript\n   * scene.onCameraActive.addListener(\n   *   (active) => console.log('Camera Active: ', active));\n   * ```\n   */\n  public get onCameraActive(): SmEvent {\n    return this._onCameraActive;\n  }\n\n  /**\n   * Specifies if the camera is currently active and streaming video\n   * to the server.\n   *\n   * @returns `boolean`\n   *\n   * Usage:\n   * ```javascript\n   * const isCameraActive = scene.isCameraActive();\n   * ```\n   */\n  public isCameraActive(): boolean {\n    return Boolean(this._session?.isCameraActive());\n  }\n\n  /**\n   * On success, starts or stops streaming video/audio to the server based on the values of `microphone` and `camera`.\n   *\n   * @param options.microphone - If `true`, activates the microphone and starts streaming audio. \\\n   * If `false` deactivates the microphone and stops streaming audio. \\\n   * If not set, microphone will retain its existing state.\n   * @param options.camera - If `true`, activates the camera and starts streaming video. \\\n   * If `false` deactivates the camera and stops streaming video. \\\n   * If not set, microphone will retain its existing state.\n   *\n   * @returns Returns a promise which is fulfilled when the media active state has been successfully changed. \\\n   * If the session is not defined it will return `undefined`. \\\n   * If the active state could not be changed, the promise is rejected with an Error object having the format:\n   * ```javascript\n   * {\n   *   message: string;\n   *   name: errorCode;\n   * }\n   * ```\n   * Where `errorCode` is one of:\n   *    - `noUserMedia` - the microphone/camera is either not available, not usable or the user declined permission to use them\n   *    - `failedUpgrade` - the media upgrade failed\n   *    - `notSupported` - user’s browser does not support the getUserMedia API\n   *    - `noConnection` - connection has not been established - ensure scene.connect() has been called previously\n   *\n   * Usage:\n   * ```javascript\n   * scene.setMediaDeviceActive({ microphone: true, camera: false })\n   *   .then(console.log('microphone activated, camera deactivated'));\n   *   .catch((error) => console.log('error occurred: ', error);\n   * ```\n   */\n  public async setMediaDeviceActive(options: {\n    microphone?: boolean;\n    camera?: boolean;\n  }): Promise<void> {\n    if (this.isConnected()) {\n      await this._session?.setMediaDeviceActive({\n        microphone: options.microphone,\n        camera: options.camera,\n      });\n    } else {\n      throw makeError('Connection has not been established', 'noConnection');\n    }\n  }\n\n  /**\n   * Play the video element and return results. Different browsers have different restrictions on autoplay.\n   * Using this method can handle all the cases browsers can have on inital video playback.\n   * @param videoElement - Optional parameter specifying the video element hosting the Digital Person. If not specified the video element passed to the Scene constructor will be used.\n   * @returns Returns a promise which is fulfilled when the video playback is successful, with indication of video and audio status.\n   * If the video element is not defined or video play fails the promise is rejected with an Error object having the format:\n   * ```javascript\n   * {\n   *   message: string;\n   *   name: errorCode;\n   * }\n   * ```\n   * Where `errorCode` is one of:\n   *    - `noVideoElement` - no HTMLVideoElement found from `videoElement` or `Scene` constructor\n   *    - `userInteractionRequired` - cannot start media playback due to browser restriction; user interaction is required before playing again\n   *\n   * Usage:\n   * ```javascript\n   * scene.startVideo()\n   *      .then(({ video, audio }) => {\n   *         if (!audio) {\n   *          //video is muted, ask user to unmute video\n   *         }\n   *      })\n   *      .catch((error) => {\n   *         if (error.name === 'userInteractionRequired') {\n   *          //ask user to interact with the UI\n   *          //unmute video and play again\n   *          video.muted = false;\n   *          video.play();\n   *         }\n   *      });\n   * ```\n   */\n  public async startVideo(\n    videoElement?: HTMLVideoElement\n  ): Promise<{ video: boolean; audio: boolean } | Error> {\n    const video = videoElement || this._videoElement;\n    if (!video) {\n      throw makeError('Cannot find HTMLVideoElement', 'noVideoElement');\n    }\n    // best case, play with audio\n    if (await this.playVideo(video)) {\n      return {\n        video: true,\n        audio: true,\n      };\n    }\n    //second-best case, play without audio\n    video.muted = true;\n    if (await this.playVideo(video)) {\n      return {\n        video: true,\n        audio: false,\n      };\n    }\n    //worst case, not able to play, require user interaction\n    throw makeError('Cannot start media playback', 'userInteractionRequired');\n  }\n\n  private async playVideo(videoElement: HTMLVideoElement): Promise<boolean> {\n    try {\n      await videoElement.play();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private fetchAuthConfig(apiKey: string) {\n    let authServer: string;\n    try {\n      const decodedApiKey: { authServer: string } = JSON.parse(atob(apiKey));\n      authServer = decodedApiKey.authServer;\n    } catch (error) {\n      throw makeError('Broken API key', 'Failed to decode api key');\n    }\n    // check if sessionId exists in browser storage\n    const { server, resumeSessionId, savedApiKey } = getSessionData();\n    // check if the current api key is same as saved api key (if it is intended to resume to the same DP)\n    if (server && resumeSessionId && savedApiKey === apiKey) {\n      authServer = authServer + '?sessionId=' + resumeSessionId;\n    }\n    return fetch(authServer, {\n      headers: {\n        key: apiKey,\n      },\n    });\n  }\n\n  // Use the first parameter of the constructor to figure out\n  // whether it was constructed using ConnectOptions, or using the deprecated multi-param format.\n  private connectArgsToConfig(\n    serverUriOrOptions?: string | ConnectOptions,\n    userText?: string,\n    accessToken?: string,\n    retryOptions?: RetryOptions\n  ) {\n    if (typeof serverUriOrOptions === 'string') {\n      return {\n        tokenServerUri: serverUriOrOptions,\n        tokenServerAccessToken: accessToken,\n        userText,\n        retryOptions,\n      };\n    } else {\n      return {\n        tokenServerUri: serverUriOrOptions?.tokenServer?.uri || '',\n        tokenServerAccessToken: serverUriOrOptions?.tokenServer?.token,\n        userText: serverUriOrOptions?.userText,\n        retryOptions: serverUriOrOptions?.retryOptions,\n      };\n    }\n  }\n\n  /**\n   * Check if the session logging is enabled.\n   *\n   * @returns Returns true if the session logging is enabled otherwise false.\n   */\n  public isLoggingEnabled(): boolean {\n    return this._logger.isEnabled;\n  }\n\n  /**\n   * Check minimal log level of session logging.\n   *\n   * @returns Returns minimal log setting of session logging, type is LogLevel.\n   */\n  public getMinLogLevel() {\n    return this._logger.getMinLogLevel();\n  }\n\n  /**\n   * Enable/disable session logging\n   * @param enable - set true to enable session log, false to disable\n   */\n  public setLogging(enable: boolean) {\n    this._logger.enableLogging(enable);\n  }\n\n  /**\n   * Set minimal log level of session logging.\n   * @param level - use LogLevel type to set minimal log level of session logging\n   */\n  public setMinLogLevel(level: LogLevel) {\n    this._logger.setMinLogLevel(level);\n  }\n}\n","/**\n * smwebsdk.js creates the global namespace variable _smwebsdk_ to access the API from.\n *\n * ```ts\n * window.smwebsdk\n * ```\n * @module smwebsdk\n * @preferred\n */\n\n/**\n * Copyright 2017-2020 Soul Machines Ltd. All Rights Reserved.\n */\n\nimport { Features } from './Features';\nimport { Persona } from './Persona';\nimport { Scene } from './Scene';\nimport { UserMedia as SessionUserMedia } from './types/scene';\n\nexport enum userMedia {\n  none = SessionUserMedia.None,\n  microphone = SessionUserMedia.Microphone,\n  microphoneAndCamera = SessionUserMedia.MicrophoneAndCamera,\n  camera = SessionUserMedia.Camera,\n}\n\n/**\n * SmWebSdk class for legacy compatibility\n * @deprecated - please use the other top level classes such as {@link Scene} or {@link Persona} instead\n */\nexport class SmWebSdk {\n  public Scene = Scene;\n  public Persona = Persona;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public DetectCapabilities: Function;\n  public userMedia = {\n    none: SessionUserMedia.None,\n    microphone: SessionUserMedia.Microphone,\n    microphoneAndCamera: SessionUserMedia.MicrophoneAndCamera,\n    camera: SessionUserMedia.Camera,\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public setLogging: Function;\n\n  constructor() {\n    this.DetectCapabilities = function () {\n      return new Features().detectWebRTCFeatures();\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this.setLogging = function (value: boolean) {};\n  }\n}\n\n/**\n * @deprecated - please use the other top level classes such as {@link Scene} or {@link Persona} instead\n * @public\n */\nexport const smwebsdk = new SmWebSdk();\n\n// This is here purely to coerce the documentation\n/**\n * Detect the browser capabilities\n */\nexport function DetectCapabilities() {\n  return new Features().detectWebRTCFeatures();\n}\n\n// This is here purely to coerce the documentation\n/**\n * Set logging for smbwebsdk to enabled or disabled, defaults to enabled\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function setLogging(value: boolean) {}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","_callbacks","addListener","callback","push","removeListener","callbackIndex","indexOf","splice","forEach","apply","args","scene","personaId","_scene","_personaId","onConversationResultEvents","SmEvent","_onConversationResultEvent","onSpeechMarkerEvents","_onSpeechMarkerEvent","startSpeaking","text","context","optionalArgs","body","sendRequest","stopSpeaking","conversationSend","variables","conversationSetVariables","conversationGetVariables","animateToNamedCameraWithOrbitPan","cameraName","time","orbitDegX","orbitDegY","panDeg","tiltDeg","playAnimation","animation","getVariables","names","errorTolerant","format","setVariables","Variables","setVariablesOneway","sendOnewaySceneRequest","getVariablesList","getModelVariablesList","modelName","Models","getModelChildren","getModelFilterSearchResult","getModelVariableFilterSearchResult","variableName","getConnectorEntries","model","startBlProfiling","stopBlProfiling","reverse","getModelHierarchy","createMonitorSet","setName","SetName","removeMonitorSet","addVariableToMonitorSet","removeVariableFromMonitorSet","renderModel","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","__assign","assign","t","s","n","arguments","length","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","f","y","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","create","__values","m","__read","ar","error","__spreadArray","to","from","pack","l","slice","concat","state","fate","promise","_resolve","_reject","console","reason","isResolved","isPending","isFulfilled","isRejected","_hasMicrophone","_hasCamera","_isAndroid","_isBrowserSupported","_isEdge","_isIos","detectAndroid","detectEdge","detectIos","userAgentMatches","test","navigator","platform","maxTouchPoints","MSStream","matches","userAgent","match","detectWebRTCFeatures","SmIsUnderRuntimeHost","isWebRTCSupported","item","iOS","isSafari","navEnumerateDevices","mediaDevices","enumerateDevices","catch","MediaStreamTrack","getSources","bind","devices","device","kind","logLevels","minLogLevel","isEnabled","availableLogLevels","_minLogLevel","setMinLogLevel","log","type","includes","enableLogging","enable","getMinLogLevel","level","index","makeError","message","Error","name","SpeechMarkerName","FeatureFlag","videoElement","logger","Logger","_isMicrophoneConnected","_isCameraConnected","_onConnectedStorage","resumeRequested","isResumedSession","server","sessionId","_closed","_outgoingQueue","_microphoneMuteDelay","_offsetX","_offsetY","_viewport_element","SmRuntimeHostReceiveMessage","receiveMessage","SmRuntimeHostStyleViewportElement","_onClose","_onMessage","_onUserText","sendVideoBounds","setTimeout","_features","raw_text","JSON","parse","category","session","close","sessionFunction","closeFunction","messageFunction","userTextFunction","setLogging","widthIgnored","heightIgnored","el","view","document","defaultView","width","parseInt","getComputedStyle","height","isNaN","offsetLeft","offsetTop","scrollLeft","scrollTop","offsetParent","documentElement","x_off","y_off","payload","top","left","bottom","right","sendMessage","hideVideo","sendRtcEvent","connect","deferred","Deferred","_sessionId","undefined","hasMicrophone","hasCamera","local_websocket_port","_serverConnection","WebSocket","onmessage","msg","gotMessageFromServer","onerror","event","onopen","send","stringify","onclose","code","wasClean","websocket_message","data","readyState","OPEN","sendUserText","sendRtcClose","SmRuntimeHostIsMicrophoneMuted","mute","SmRuntimeHostMuteMicrophone","isMicrophoneActive","isMicrophoneConnected","microphoneMuted","isCameraActive","isCameraConnected","setMediaDeviceActive","UserMedia","NLPIntent","ConnectionStateTypes","requestName","status","String","__","constructor","WebsocketCategory","WebsocketKind","SpeechState","serverUri","connectUserText","accessToken","audioOnly","requestedUserMedia","requiredUserMedia","echoCancellationEnabled","connectionState","_connectPendingRemoteStream","_resumeRequested","_isResumedSession","_controlOpen","_controlQueue","_requestedUserMedia","None","_requiredUserMedia","_onConnected","_pendingLog","_shouldLogToServer","_changeUserMediaQueue","_removeListeners","_videoOptions","frameRate","facingMode","_audioOptions","noiseSuppression","autoGainControl","channelCount","sampleRate","sampleSize","echoCancellation","_videoElement","_serverUri","_connectUserText","_accessToken","_audioOnly","_logger","_sessionError","_connectionState","now","Date","toISOString","logToServer","sendlogMessage","textArray","userText","startsWith","selectUserMedia","getUserMediaSuccess","xhr","XMLHttpRequest","open","location","search","onreadystatechange","ev","DONE","responseText","response","url","jwt","statusText","webcamRequested","requestedMedia","requiredMedia","MicrophoneAndCamera","Camera","some","micRequested","Microphone","getMediaConstraints","supports","getSupportedConstraints","audio","buildAudioOptions","video","supportedConstraints","constraints","keys","constraint","completion","getUserMedia","stream","MakeErrorForUserMedia","getUserMediaRequiredOnlyFallback","getUserMediaAudioOnlyFallback","_localStream","setConnectionState","SearchingForDigitalPerson","hasTurnServer","iceServers","urls","_controlConnection","DownloadingAssets","config","iceTransportPolicy","settings","microphoneMuteDelay","_peerConnection","RTCPeerConnection","onicecandidate","gotIceCandidate","isEdge","ontrack","track","_remoteStream","onRemoteStream","streams","addEventListener","onVideoLoaded","target","onaddstream","streamEvent","oniceconnectionstatechange","iceConnectionState","CONNECTING","addTrack","getTracks","addStream","addTransceiver","direction","resumeSessionId","offerOptions","voiceActivityDetection","iceRestart","createOffer","sessionDescription","createdDescription","ConnectingToDigitalPerson","_server","_sceneId","sceneId","sendCameraRotation","style","video_width","video_height","controlUrl","_controlUrl","sdp","setRemoteDescription","Connected","onConnectedSuccess","addCandidate","complete","addIceCandidate","RTCIceCandidate","candidate","sdpMid","sdpMLineIndex","iceCandidate","createAnswer","description","messageName","descriptionObj","setLocalDescription","localDescription","user_text","features","videoStartedEvent","hidden","srcObject","sendUserCamera","_onMicrophoneActive","_onCameraActive","videoStarted","muted","unmuteCallback","removeEventListener","rotation","active","isIos","orientation","rotateCamera","userMedia","makeUserMedia","microphone","webcam","findSenderTrackByKind","senders","getSenders","sender","findSenderByKind","getTransceivers","transceiver","receiver","processChangeUserMediaQueue","operation","lastMicrophoneActive","lastCameraActive","changeUserMediaInternal","camera","shift","newUserMedia","microphoneTrack","cameraTrack","needMicrophoneUpgrade","needCameraUpgrade","newMediaStream","mediaDeferred","MediaStream","updateSenderTrack","enabled","removeTrack","newTrack","getTrackByKind","replaceTrack","stop","isSenderTrackEnabled","Boolean","tracks","listener","peerConnection","options","audioTracks","getAudioTracks","audioSender","videoTracks","getVideoTracks","videoSender","callbacks","loggingEnabled","connectByWebSocket","ResizeObserverBoxOptions","resizeObservers","trigger","freeze","ResizeObserverSize","inlineSize","blockSize","DOMRectReadOnly","x","toJSON","_a","fromRect","rectangle","isSVG","SVGElement","isHidden","getBBox","_b","offsetWidth","offsetHeight","getClientRects","isElement","Element","scope","ownerDocument","global","cache","WeakMap","scrollRegexp","verticalRegexp","IE","parseDimension","pixel","parseFloat","size","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","forceRecalculation","has","set","cs","svg","ownerSVGElement","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","Math","round","devicePixelRatio","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry","calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations","shallowestDepth","ro","activeTargets","entries","ot","entry","targetDepth","lastReportedSize","observer","_i","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","ErrorEvent","createEvent","initEvent","dispatchEvent","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","cb","observe","characterData","textContent","watching","observerConfig","attributes","childList","subtree","events","timeout","scheduled","scheduler","Scheduler","_this","stopped","schedule","run","until","elementsHaveResized","start","requestAnimationFrame","disconnect","updateCount","ResizeObservation","CONTENT_BOX","tagName","isReplacedElement","display","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","ResizeObserverController","detail","firstObservation","box","unobserve","lastObservation","ResizeObserver","toString","all","images","filter","img","map","onload","debounceTime","VIDEO_FRAME_STR","VIDEO_FRAME_STR_BRACKETED","CONTENT_STR","CONTENT_STR_BRACKETED","CUE_ATTRIBUTES","CUE_ATTRIBUTES_BRACKETED","join","RESIZE_OBSERVER_BOX_OPTIONS","callMeasure","contentCollection","videoFrame","debouncedMeasure","fn","debounceTimeMs","debounceTimerId","clearTimeout","debouncedFunction","measureInternal","measureDebounced","getInitialElements","mutationObserver","mutations","mutationCallback","setupEventListeners","observeMutations","isLoggingEnabled","videoEl","querySelector","contentElements","querySelectorAll","trackVideoElement","element","trackContentElement","watchNode","attributeFilter","attributeOldValue","contentAwareness","reconnect","measure","isConnected","windowSize","measureWindow","measureVideoFrame","measureContent","contentAwarenessMessage","buildUpdateContentAwarenessRequest","innerWidth","innerHeight","videoRect","getBoundingClientRect","invalidDimensions","x1","x2","y1","y2","validContent","invalidContent","id","viewWidth","viewHeight","content","untrackVideoElement","getAttribute","untrackContentElement","imagesAdded","nodeType","Node","ELEMENT_NODE","untrackRemovedNodeWithCUE","removedNodes","trackAddedNodeWithCUE","addedNodes","j","hasAttribute","isImage","containsImages","err","attr","attributeName","newValue","oldValue","childElement","VERSION","re","isCompatible","ownVersion","acceptedVersions","Set","rejectedVersions","myVersionMatch","ownVersionParsed","globalVersion","add","_accept","globalVersionMatch","globalVersionParsed","_makeCompatibilityCheck","major","split","GLOBAL_OPENTELEMETRY_API_KEY","for","_global","registerGlobal","instance","diag","allowOverride","api","version","stack","debug","getGlobal","unregisterGlobal","DiagLogLevel","DiagComponentLogger","props","_namespace","namespace","logProxy","info","warn","verbose","funcName","unshift","DiagAPI","_logProxy","setLogger","logLevel","INFO","oldLogger","newLogger","maxLevel","_filterFunc","theLevel","theFunc","NONE","ALL","ERROR","WARN","DEBUG","VERBOSE","createLogLevelDiagLogger","disable","createComponentLogger","_instance","BaggageImpl","_entries","Map","getEntry","getAllEntries","setEntry","newBaggage","removeEntry","delete","removeEntries","keys_1","clear","baggageEntryMetadataSymbol","createBaggage","baggageEntryMetadataFromString","str","__TYPE__","defaultTextMapGetter","carrier","defaultTextMapSetter","createContextKey","TraceFlags","BaseContext","parentContext","_currentContext","getValue","setValue","deleteValue","ROOT_CONTEXT","il","NoopContextManager","with","_context","NOOP_CONTEXT_MANAGER","ContextAPI","getInstance","setGlobalContextManager","contextManager","_getContextManager","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","traceId","spanId","traceFlags","NonRecordingSpan","_spanContext","spanContext","setAttribute","_key","_value","setAttributes","_attributes","addEvent","_name","setStatus","_status","updateName","end","_endTime","isRecording","recordException","_exception","_time","SPAN_KEY","getSpan","getActiveSpan","setSpan","span","deleteSpan","setSpanContext","getSpanContext","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","isValidTraceId","isSpanContextValid","wrapSpanContext","NoopTracer","startSpan","parentFromContext","startActiveSpan","arg2","arg3","arg4","opts","ctx","contextWithSpanSet","SamplingDecision","SpanKind","SpanStatusCode","NOOP_TRACER","ProxyTracer","_provider","_getTracer","_options","_fn","tracer","Reflect","_delegate","getDelegateTracer","NOOP_TRACER_PROVIDER","NoopTracerProvider","getTracer","_version","ProxyTracerProvider","getDelegate","setDelegate","delegate","VALID_KEY_REGEX","RegExp","VALID_VALUE_BASE_REGEX","INVALID_VALUE_COMMA_EQUAL_REGEX","TraceStateImpl","rawTraceState","_internalState","_parse","traceState","_clone","unset","serialize","_keys","reduce","agg","part","listMember","trim","validateKey","validateValue","TraceAPI","_proxyTracerProvider","setGlobalTracerProvider","provider","success","getTracerProvider","NoopTextMapPropagator","inject","_carrier","extract","fields","BAGGAGE_KEY","getBaggage","setBaggage","baggage","deleteBaggage","NOOP_TEXT_MAP_PROPAGATOR","PropagationAPI","setGlobalPropagator","propagator","setter","_getGlobalPropagator","getter","trace","propagation","fallbackValue","getUrlHost","outUrl","URL","pathname","ConversationStateTypes","_conversationState","idle","_userActive","_onConversationStateUpdated","processStateMessage","responseBody","persona","dpId","speechState","messageSpeechState","Idle","setSpeechState","Speaking","dpSpeaking","processRecognizeResultsMessage","isErrorMessage","isFinal","results","final","errorMessage","dpProcessing","userSpeaking","getSpeechState","reset","fullfillments","meta","dialogflow","queryResult","fulfillmentMessages","find","fullfillment","formatLegacyDialogflow","formatContextData","output","soulmachines","formatCardData","allowedIds","cardId","replace","values","k","parsedData","component","rest","getOwnPropertySymbols","propertyIsEnumerable","conversationState","contentCardFormatter","ConversationState","ContentCardFormatter","_onCardChanged","_autoClearCards","cardData","activeCardIds","onConversationStateUpdated","activeCardInfo","onSpeechMarker","messageBody","cardIds","Showcards","addActiveCardIds","Hidecards","removeActiveCards","clearActiveCards","onConversationResult","cards","onCardChanged","activeCards","_previousUrl","href","_observer","observeDocumentChanges","observeUrlChanges","conversationVariables","currentPersonaId","PAGE_METADATA","pageUrl","TOTAL_CONNECTION_STEPS","Disconnected","totalSteps","currentStep","percentageLoaded","_onConnectionStateUpdated","connectionStateType","getConnectionState","SemanticResourceAttributes","SDK_INFO","TracesSamplerValues","Resource","empty","EMPTY","default","merge","other","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT","CONTAINER_NAME","ECS_CONTAINER_METADATA_URI_V4","ECS_CONTAINER_METADATA_URI","HOSTNAME","KUBERNETES_SERVICE_HOST","NAMESPACE","OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_EXPORTER_JAEGER_AGENT_HOST","OTEL_EXPORTER_JAEGER_AGENT_PORT","OTEL_EXPORTER_JAEGER_ENDPOINT","OTEL_EXPORTER_JAEGER_PASSWORD","OTEL_EXPORTER_JAEGER_USER","OTEL_EXPORTER_OTLP_ENDPOINT","OTEL_EXPORTER_OTLP_TRACES_ENDPOINT","OTEL_EXPORTER_OTLP_METRICS_ENDPOINT","OTEL_EXPORTER_OTLP_HEADERS","OTEL_EXPORTER_OTLP_TRACES_HEADERS","OTEL_EXPORTER_OTLP_METRICS_HEADERS","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_ZIPKIN_ENDPOINT","OTEL_LOG_LEVEL","OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS","OTEL_RESOURCE_ATTRIBUTES","OTEL_SERVICE_NAME","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_TRACES_EXPORTER","OTEL_TRACES_SAMPLER","ParentBasedAlwaysOn","OTEL_TRACES_SAMPLER_ARG","OTEL_EXPORTER_OTLP_INSECURE","OTEL_EXPORTER_OTLP_TRACES_INSECURE","OTEL_EXPORTER_OTLP_METRICS_INSECURE","OTEL_EXPORTER_OTLP_CERTIFICATE","OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE","OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE","OTEL_EXPORTER_OTLP_COMPRESSION","OTEL_EXPORTER_OTLP_TRACES_COMPRESSION","OTEL_EXPORTER_OTLP_METRICS_COMPRESSION","OTEL_EXPORTER_OTLP_CLIENT_KEY","OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY","OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY","OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_PROTOCOL","OTEL_EXPORTER_OTLP_TRACES_PROTOCOL","OTEL_EXPORTER_OTLP_METRICS_PROTOCOL","OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE","parseNumber","environment","min","max","Number","parseStringList","input","separator","givenValue","logLevelMap","setLogLevelFromEnv","toUpperCase","env","getEnv","globalEnv","ExportResultCode","_promise","configurable","val","BindOnceFuture","_callback","_that","_isCalled","_deferred","SUPPRESS_TRACING_KEY","isTracingSuppressed","delegateHandler","ex","current","getOwnPropertyNames","propertyName","getPrototypeOf","flattenException","stringifyException","globalErrorHandler","func","transform","BatchSpanProcessorBase","_exporter","_finishedSpans","_maxExportBatchSize","maxExportBatchSize","_maxQueueSize","maxQueueSize","_scheduledDelayMillis","scheduledDelayMillis","_exportTimeoutMillis","exportTimeoutMillis","_shutdownOnce","_shutdown","forceFlush","isCalled","_flushAll","onStart","_span","_parentContext","onEnd","SAMPLED","_addToBuffer","shutdown","onShutdown","_maybeStartTimer","promises","ceil","_flushOneBatch","_clearTimer","timer","suppressTracing","export","SUCCESS","_timer","BatchSpanProcessor","_super","onInit","disableAutoFlushOnDocumentHide","_visibilityChangeListener","visibilityState","_pageHideListener","nullTag","undefinedTag","funcToString","objectCtorString","getPrototype","arg","objectProto","symToStringTag","nativeObjectToString","isObjectLike","isOwn","tag","unmasked","getRawTag","objectToString","baseGetTag","proto","Ctor","takeValue","isArray","mergeTwoObjects","one","two","objects","isPrimitive","isFunction","isObject","shouldMerge","twoValue","obj1","obj2","wasObjectReferenced","arr1","arr2","arr","CompositePropagator","_propagators","propagators","_fields","e_1","_c","e_1_1","return","TraceState","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","TRACE_PARENT_REGEX","W3CTraceContextPropagator","traceParent","traceParentHeader","exec","parseTraceParent","isRemote","traceStateHeader","BAGGAGE_HEADER","parsePairKeyValue","valueProps","keyPairPart","keyPair","metadata","decodeURIComponent","W3CBaggagePropagator","keyPairs","encodeURIComponent","getKeyPairs","pair","headerValue","hValue","serializeKeyPairs","baggageString","baggageEntry","sanitizeAttributes","out","_d","isAttributeKey","isAttributeValue","e_2","arr_1","arr_1_1","isValidPrimitiveAttributeValue","e_2_1","isHomogeneousAttributeValueArray","otperformance","performance","SECOND_TO_NANOSECONDS","pow","numberToHrtime","epochMillis","epochSeconds","seconds","trunc","toFixed","getTimeOrigin","timeOrigin","perf","timing","fetchStart","timeInputToHrTime","isTimeInputHrTime","performanceNow","nanos","getTime","SemanticAttributes","Span","parentTracer","spanName","parentSpanId","links","startTime","clock","endTime","_ended","_duration","_clock","resource","instrumentationLibrary","_spanLimits","getSpanLimits","_spanProcessor","getActiveSpanProcessor","_attributeValueLengthLimit","attributeValueLengthLimit","_isSpanEnded","attributeCountLimit","_truncateToSize","attributesOrStartTime","eventCountLimit","hrTimeDuration","exception","_truncateToLimitUtil","limit","substr","AlwaysOffSampler","shouldSample","decision","AlwaysOnSampler","ParentBasedSampler","_root","_remoteParentSampled","remoteParentSampled","_remoteParentNotSampled","remoteParentNotSampled","_localParentSampled","localParentSampled","_localParentNotSampled","localParentNotSampled","spanKind","TraceIdRatioBasedSampler","_ratio","_normalize","_upperBound","floor","_accumulate","ratio","accumulation","pos","FALLBACK_OTEL_TRACES_SAMPLER","AlwaysOn","loadDefaultConfig","sampler","buildSamplerFromEnv","forceFlushTimeoutMillis","generalLimits","spanLimits","linkCountLimit","AlwaysOff","ParentBasedAlwaysOff","TraceIdRatio","getSamplerProbabilityFromEnv","ParentBasedTraceIdRatio","probability","reconfigureLimits","userConfig","_e","_f","_g","_h","_j","_k","_l","_m","parsedEnvConfig","process","RandomIdGenerator","generateTraceId","getIdGenerator","generateSpanId","SHARED_CHAR_CODES_ARRAY","bytes","random","fromCharCode","ForceFlushState","Tracer","_tracerProvider","perInstanceDefaults","DEFAULT_CONFIG","localConfig","_sampler","_generalLimits","_idGenerator","idGenerator","parentSpan","parentSpanContext","link","samplingResult","initAttributes","getGeneralLimits","MultiSpanProcessor","_spanProcessors","spanProcessor","e_3","e_3_1","e_4","e_4_1","NoopSpanProcessor","BasicTracerProvider","_registeredSpanProcessors","_tracers","mergedConfig","_config","defaultExporter","_buildExporterFromEnv","batchProcessor","activeSpanProcessor","schemaUrl","addSpanProcessor","register","_buildPropagatorFromEnv","timeoutInterval","resolved","errors","_getPropagator","_getSpanExporter","uniquePropagatorNames","validPropagators","list","exporterName","exporter","_registeredPropagators","_registeredExporters","StackContextManager","_enabled","_bindFunction","manager","contextWrapper","writable","previousContext","WebTracerProvider","AnchoredClock","systemClock","monotonicClock","_monotonicClock","_epochMillis","_performanceMillis","delta","RPCType","NOT_RECORD","RECORD_AND_SAMPLED","DEFAULT_TRACE_TIMEOUT","configureExporterTimeout","timeoutMillis","invalidTimeout","definedTimeout","getExporterTimeoutFromEnv","defaultTimeout","OTLPExporterBase","_sendingPromises","getDefaultUrl","hostname","_concurrencyLimit","concurrencyLimit","items","resultCallback","_export","OTLPExporterError","ESpanKind","OTLPExporterBrowserBase","_useXHR","headers","sendBeacon","_headers","partialHeaders","parseHeaders","onSuccess","onError","serviceRequest","convert","exporterTimeout","reqIsDestroyed","exporterTimer","abort","setRequestHeader","sendWithXhr","blobPropertyBag","Blob","sendWithBeacon","popPromise","toKeyValue","toAnyValue","stringValue","isInteger","intValue","doubleValue","boolValue","Uint8Array","bytesValue","arrayValue","kvlistValue","hexToBase64","hexStr","hexStrLen","hexAsciiCharsStr","hexPair","substring","hexVal","btoa","sdkSpanToOtlpSpan","useHex","startTimeUnixNano","endTimeUnixNano","droppedAttributesCount","toOtlpSpanEvent","droppedEventsCount","toOtlpLink","droppedLinksCount","timedEvent","timeUnixNano","spanRecordsToResourceSpans","readableSpans","resourceMap","readableSpans_1","readableSpans_1_1","record","ilmMap","instrumentationLibraryKey","records","createResourceMap","entryIterator","scopeResourceSpans","ilmIterator","ilmEntry","scopeSpans","name_1","spans","readableSpan","transformedSpans","NoopMeter","createHistogram","NOOP_HISTOGRAM_METRIC","createCounter","NOOP_COUNTER_METRIC","createUpDownCounter","NOOP_UP_DOWN_COUNTER_METRIC","createObservableGauge","NOOP_OBSERVABLE_GAUGE_METRIC","createObservableCounter","NOOP_OBSERVABLE_COUNTER_METRIC","createObservableUpDownCounter","NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC","addBatchObservableCallback","_observables","removeBatchObservableCallback","NoopMetric","NoopCounterMetric","NoopUpDownCounterMetric","NoopHistogramMetric","NoopObservableMetric","addCallback","removeCallback","NoopObservableCounterMetric","NoopObservableGaugeMetric","NoopObservableUpDownCounterMetric","NOOP_METER","ValueType","NOOP_METER_PROVIDER","NoopMeterProvider","getMeter","GLOBAL_METRICS_API_KEY","MetricsAPI","setGlobalMeterProvider","getMeterProvider","requiredVersion","fallback","AggregationTemporality","DataPointType","isNotNullish","hashAttributes","sort","AggregatorKind","TimeoutError","callWithTimeout","timeoutHandle","timeoutPromise","race","PromiseAllSettled","isPromiseAllSettledRejectionResult","it","FlatMap","InstrumentType","DropAggregator","DROP","createAccumulation","_previous","_delta","diff","_current","toMetricData","_descriptor","_aggregationTemporality","_accumulationByAttributes","createInstrumentDescriptor","unit","valueType","HistogramAccumulation","_boundaries","_recordMinMax","boundaries","counts","buckets","sum","count","hasMinMax","setStartTime","toPointValue","HistogramAggregator","HISTOGRAM","previous","previousValue","deltaValue","previousCounts","deltaCounts","mergedCounts","idx","currentValue","currentCounts","diffedCounts","descriptor","aggregationTemporality","accumulationByAttributes","dataPointType","dataPoints","pointValue","allowsNegativeValues","UP_DOWN_COUNTER","OBSERVABLE_GAUGE","OBSERVABLE_UP_DOWN_COUNTER","LastValueAccumulation","sampleTime","LastValueAggregator","LAST_VALUE","latestAccumulation","SumAccumulation","monotonic","SumAggregator","SUM","prevPv","deltaPv","currPv","isMonotonic","Aggregation","Drop","DROP_AGGREGATION","Sum","SUM_AGGREGATION","LastValue","LAST_VALUE_AGGREGATION","Histogram","HISTOGRAM_AGGREGATION","Default","DEFAULT_AGGREGATION","DropAggregation","createAggregator","_instrument","DEFAULT_INSTANCE","SumAggregation","instrument","COUNTER","OBSERVABLE_COUNTER","MONOTONIC_INSTANCE","NON_MONOTONIC_INSTANCE","LastValueAggregation","HistogramAggregation","DefaultAggregation","ExplicitBucketHistogramAggregation","minusInfinityIndex","lastIndexOf","infinityIndex","DEFAULT_AGGREGATION_SELECTOR","_instrumentType","DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR","MetricReader","_aggregationSelector","aggregationSelector","_aggregationTemporalitySelector","aggregationTemporalitySelector","setMetricProducer","metricProducer","_metricProducer","onInitialized","selectAggregation","instrumentType","selectAggregationTemporality","collect","onForceFlush","PeriodicExportingMetricReader","exportIntervalMillis","_exportInterval","_exportTimeout","_runOnce","resourceMetrics","_interval","setInterval","err_1","clearInterval","InMemoryMetricExporter","_metrics","metrics","getMetrics","ConsoleMetricExporter","_sendMetrics","setImmediate","scopeMetrics","metric","dir","NoopDetector","detect","BrowserDetector","browserResource","_getResourceAttributes","EnvDetector","_MAX_LENGTH","_COMMA_SEPARATOR","_LABEL_KEY_VALUE_SPLITTER","_ERROR_MESSAGE_INVALID_CHARS","_ERROR_MESSAGE_INVALID_VALUE","rawAttributes","serviceName","parsedAttributes","_parseResourceAttributes","rawEnvAttributes","rawAttributes_1","rawAttributes_1_1","keyValuePair","_isValidAndNotEmpty","_isValid","_isPrintableString","ch","charAt","ProcessDetector","processResource","pid","title","argv","versions","ViewRegistry","_registeredViews","addView","findViews","meter","registeredView","_matchInstrument","instrumentSelector","_matchMeter","meterSelector","selector","getType","getNameFilter","getVersionFilter","getSchemaUrlFilter","SyncInstrument","_writableMetricStorage","_record","UpDownCounterInstrument","CounterInstrument","HistogramInstrument","ObservableInstrument","metricStorages","_observableRegistry","_metricStorages","ObservableCounterInstrument","ObservableGaugeInstrument","ObservableUpDownCounterInstrument","isObservableInstrument","Meter","_meterSharedState","storage","registerMetricStorage","storages","registerAsyncMetricStorage","observableRegistry","observables","addBatchCallback","removeBatchCallback","MetricStorage","_instrumentDescriptor","getInstrumentDescriptor","updateDescription","HashMap","_hash","_valueMap","_keyMap","hashCode","getOrDefault","defaultFactory","hash","keyIterator","valueIterator","AttributeHashMap","DeltaMetricProcessor","_aggregator","_activeCollectionStorage","_cumulativeMemoStorage","collectionTime","batchCumulate","measurements","unreportedDelta","TemporalMetricProcessor","_unreportedAccumulations","_reportHistory","buildMetrics","collector","collectors","instrumentDescriptor","currentAccumulations","_stashAccumulations","unreportedAccumulations","_getMergedUnreportedAccumulations","last","lastCollectionTime","accumulations","calibrateStartTime","currentAccumulation","stash","unreportedList","unreportedList_1","unreportedList_1_1","it_1","aggregator","lastAccumulation","AsyncMetricStorage","_attributesProcessor","_deltaMetricStorage","_temporalMetricStorage","observationTime","processed","getIncompatibilityDetails","existing","otherDescriptor","incompatibility","getConflictResolutionRecipe","getValueTypeConflictResolutionRecipe","getUnitConflictResolutionRecipe","selectorString","getTypeConflictResolutionRecipe","getDescriptionResolutionRecipe","MetricStorageRegistry","_sharedRegistry","_perCollectorRegistry","getStorages","perCollectorStorages","_registerStorage","registerForCollector","storageMap","findOrUpdateCompatibleStorage","expectedDescriptor","_findOrUpdateCompatibleStorage","findOrUpdateCompatibleCollectorStorage","existingStorages","compatibleStorage","existingStorages_1","existingStorages_1_1","existingStorage","existingDescriptor","MultiMetricStorage","_backingStorages","recordTime","ObservableResultImpl","_buffer","BatchObservableResultImpl","ObservableRegistry","_batchCallbacks","_findCallback","instruments","observableInstruments","_findBatchCallback","callbackFutures","batchCallbackFutures","_observeCallbacks","_observeBatchCallbacks","observableResult","callPromise","metricStorage","buffer","findIndex","lhs","rhs","lhs_1","lhs_1_1","setEquals","SyncMetricStorage","AttributesProcessor","Noop","NOOP","NoopAttributesProcessor","incoming","FilteringAttributesProcessor","_allowedAttributeNames","filteredAttributes","MeterSharedState","_meterProviderSharedState","_instrumentationScope","metricStorageRegistry","_registerMetricStorage","metricDataList","metricCollectors","MetricStorageType","viewRegistry","viewDescriptor","createInstrumentDescriptorWithView","aggregation","viewStorage","attributesProcessor","collectorStorages","selectAggregations","MeterProviderSharedState","meterSharedStates","getMeterSharedState","instrumentationScope","instrumentationScopeId","meterSharedState","MetricCollector","_sharedState","_metricReader","meterCollectionPromises","ESCAPE","MeterProvider","views","addMetricReader","metricReader","PatternPredicate","pattern","_matchAll","_regexp","escapePattern","hasWildcard","ExactPredicate","_pattern","InstrumentSelector","criteria","_nameFilter","_type","MeterSelector","_versionFilter","_schemaUrlFilter","DEFAULT_COLLECTOR_RESOURCE_PATH","OTLPTraceExporter","resourceSpans","createExportTraceServiceRequest","path","endsWith","appendResourcePathToUrl","DEFAULT_URL","SmTracerProvider","init","webSDKVersion","Authorization","isInitialized","defaultUrl","websdkVersion","retry","task","retryOptions","maxRetries","delay","delayMs","connectionResult","retries","clearSessionData","getSessionData","sessionStorage","getItem","savedApiKey","removeItem","videoOrOptions","contentAwarenessDebounceTime","loggingConfig","tracerOptions","_onConversationResultEvents","_onSpeechMarkerEvents","_session","_isWebSocketOnly","_transactionId","_pendingResponses","_microphoneUnmuteTimer","_echoCancellationEnabled","_serverControlledCameras","_stopSpeakingWhenNotVisible","_loggingConfig","_tracerOptions","disableTracing","parentCtx","_sessionResumeEnabled","_sendMetadata","webSdk","platformSdk","iosVisibilityChange","visible","stopSpeakingWhenNotVisible","stopSpeakingWhenUnloaded","isSceneOptions","_apiKey","apiKey","requestedMediaDevices","requiredMediaDevices","sendMetadata","_onStateEvent","_onState","_onRecognizeResultsEvent","_onRecognizeResults","_onDisconnectedEvent","cleanupEventListeners","_onDisconnected","_onUserTextEvent","_onDemoModeEvent","_underRuntimeHost","randArray","Uint32Array","crypto","getRandomValues","conversation","Conversation","ConnectionState","_metadataSender","MetadataSender","isDefined","isHTMLElement","connectionValid","serverConnection","keepAlive","serverUriOrOptions","connectStartTime","connectArgsToConfig","recordEventsToSpan","onConnectionStateUpdated","LocalSession","hasPassedInTokenServerAuth","tokenServerUri","tokenServerAccessToken","fetchAuthConfig","json","initializeTracer","initTracerStartTime","initTracerEndTime","WebSocketSession","Session","onConnected","sessionConnected","onMessage","onClose","sessionClosed","onUserText","rtcUserText","microphoneActiveCallbacks","cameraActiveCallbacks","finally","initTelemetryToken","authToken","base","ReferenceError","tracesEndpoint","telemetryHost","fetch","resp","ok","otelResponse","telemetryJwt","sceneMessage","onSceneMessage","Scene","Request","transaction","pending","featureFlags","enableFlaggedFeatures","sdkVersion","controlMicrophoneMute","Persona","Response","processResponse","SceneResponseError","persona_state","ContentAwareness","setItem","storeSessionData","UI_SDK_CAMERA_CONTROL","sendContent","configure","configuration","startRecognize","audioSource","stopRecognize","hasContentAwareness","hasServerControlledCameras","supportsSessionPersistence","getState","onState","onDisconnected","onRecognizeResults","offsetX","offsetY","isWebSocketOnly","startVideo","playVideo","play","authServer","atob","tokenServer","uri","token","smwebsdk","none","microphoneAndCamera","DetectCapabilities"],"sourceRoot":""}