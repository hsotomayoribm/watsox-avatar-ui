function fire(){const e=this._observers;if(e){for(let t=0;t<e.length;t++)try{e[t].apply(this,arguments)}catch(e){console.error(e)}return this}}function observe(e){return this._observers||(this._observers=[]),this._observers.push(e),{detach:detach.bind(this,e),ob:this}}function detach(e){this._observers.splice(this._observers.indexOf(e),1)}function filter(e){const t=create();return this.observe(function(){e.apply(this,arguments)&&t.fire.apply(t,arguments)}),t}function filterByName(e){return filter.call(this,function(t){return e===t})}function on(e,t){return filterByName.call(this,e).observe(t)}const observable={detach:detach,filter:filter,fire:fire,observe:observe,on:on};function extend(e,t){for(var n in t)e[n]=t[n];return e}function create(e){return e?extend(e,observable):Object.create(observable)}const SDK_CLIENT_VERSION="1.1.0";let CODE_HOME="https://maps.locuslabs.com/sdk/dist/current/",map=null,msgId=1;const sentMsgs={};let showLogFlag=!1;const ts=()=>{const e=new Date;return`${e.getMinutes()}:${e.getSeconds()}.${e.getMilliseconds()}`},logPre=[`%cLocusMaps SDK %c(${ts()})%c: `,"color: orange","font-size: 8px","font-size: inherit; color: inherit"],log=function(){showLogFlag&&console.log.apply(null,logPre.concat(Array.from(arguments)))};function installComs(){window.addEventListener("message",msgHandler,!1),create(map=((e,t)=>{"string"==typeof e&&(e={...t,command:e});const n={payload:e,type:"LL-client",msgId:msgId++};return log("Sending command object: ",e),window.postMessage(n,"*"),new Promise((e,t)=>{sentMsgs[n.msgId]={resolve:e,reject:t}})}))}function msgHandler(e){const t=e.data;t&&"LL-server"===t.type&&(t.clientMsgId?(t.error?log("Received error message",t.payload):log("Received message",t.payload),sentMsgs[t.clientMsgId]&&(t.error?sentMsgs[t.clientMsgId].reject(t.payload):sentMsgs[t.clientMsgId].resolve(t.payload))):t.event&&map.fire(t.event,t.payload))}function bootstrapCode(e){window.LLpublicPath=CODE_HOME;const t=document.createElement("script");t.setAttribute("src",CODE_HOME+"main.js"),document.head.appendChild(t),t.addEventListener("load",e)}function addCommands(e,t){return t.forEach(t=>{e[t.command]=function(){const n={command:t.command};for(let e=0;e<arguments.length;e++)n[t.args[e].name]=arguments[e];return e(n)}}),e}let mapReadyObservable=null;function newMap(e,t,n){const s=()=>window.postMessage({type:"LL-INIT",config:{...t,renderDiv:e}},"*");return n&&(CODE_HOME=n),new Promise((e,t)=>{map?(mapReadyObservable.detach(),s(),mapReadyObservable=map.on("ready",()=>{e(map)})):(installComs(),bootstrapCode(s),mapReadyObservable=map.on("ready",(n,s)=>{const{commands:o}=s.commandJSON;try{map=addCommands(map,o)}catch(e){t(e)}log("map ready"),map.observe(function(){const e=Array.from(arguments);e.unshift("Event: "),log.apply(null,e)}),map.setLogging=LMInit.setLogging,e(map)}))})}const LMInit={getVersion:()=>"1.1.0",newMap:newMap,setLogging:e=>{showLogFlag=e}};export default LMInit;
